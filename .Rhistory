-Dx_Px_Qualifier,
-starts_with("POA"), #[1:18]
-starts_with("Patient_Reason_Visit"),#[1:3],
-Prospect_Pay_Code,
-starts_with("Ecode"), #[1:3]
-starts_with("E_POA"), #[1:3]
-Type_ER_Visit,
-Outcome_ER_Visit,
-Inpatient_Flag,
-ER_Flag,
-PET_Flag,
-ASTC_Flag,
-Lithotripsy_Flag,
-MRI_MRA_Flag,
-Megavolt_Rad_Flag,
-CT_Flag,
-Fatal_Error_Flag,
-starts_with("Record_Num"), #[1:2]
-Bill_End,
-MUL,
-Patient_ID,
-TN_Co_Res,
-Payer_A,
-Payer_B,
-Payer_C,
-Amount_Counter,
-Race,
-LOS,
-DRG_Rank,
-Inpat_Record_Flag,
-ER_Record_Flag,
-ASTC_Record_Flag,
-Obs_23hr_Record_Flag,
-CON_Flag,
-Cumulative_Record_Flag,
-Reportable_Flag,
-TN_Co_Unk,
-Processing_Period,
-MS_MDC,
-MS_DRG,
-MS_DRG_4digit,
-HAC,
-Admit_From_ED_Flag,
-Wrong_Claim
)
keepall<-c()
for(i in 1:492){
keep<-grep(ICD_Filtered[i,1],train$Diag1)
keepall<-keep+keepall
}
train<-train[keep,]
View(train)
keep<-grep(ICD_Filtered[i,1],train$Diag1)
#Filters out unnecessary columns
train <-df %>% select(
-Type_Bill,
-Fed_Tax_SubID,
-Fed_Tax_Num,
-Admission_Type,
-Admission_Source,
-Do_Not_Resuscitate,
-Accident_St,
-starts_with("Units_Service"), #[1:18]
-Primary_Health_Plan_Id,
-Secondary_Health_Plan_Id,
-Tertiary_Health_Plan_Id,
-Primary_Patient_Rel_Insr,
-Secondary_Patient_Rel_Insr,
-Tertiary_Patient_Rel_Insr,
-Dx_Px_Qualifier,
-starts_with("POA"), #[1:18]
-starts_with("Patient_Reason_Visit"),#[1:3],
-Prospect_Pay_Code,
-starts_with("Ecode"), #[1:3]
-starts_with("E_POA"), #[1:3]
-Type_ER_Visit,
-Outcome_ER_Visit,
-Inpatient_Flag,
-ER_Flag,
-PET_Flag,
-ASTC_Flag,
-Lithotripsy_Flag,
-MRI_MRA_Flag,
-Megavolt_Rad_Flag,
-CT_Flag,
-Fatal_Error_Flag,
-starts_with("Record_Num"), #[1:2]
-Bill_End,
-MUL,
-Patient_ID,
-TN_Co_Res,
-Payer_A,
-Payer_B,
-Payer_C,
-Amount_Counter,
-Race,
-LOS,
-DRG_Rank,
-Inpat_Record_Flag,
-ER_Record_Flag,
-ASTC_Record_Flag,
-Obs_23hr_Record_Flag,
-CON_Flag,
-Cumulative_Record_Flag,
-Reportable_Flag,
-TN_Co_Unk,
-Processing_Period,
-MS_MDC,
-MS_DRG,
-MS_DRG_4digit,
-HAC,
-Admit_From_ED_Flag,
-Wrong_Claim
)
keep<-grep(ICD_Filtered[i,1],train$Diag1)
keep<-grep(as.character(ICD_Filtered[i,1]),train$Diag1)
ICD_Filtered[1,1]
ICD_Filtered[2,1]
ICD_Filtered[3,1]
library(gsheet)
# Reading in doc of IDC10codes
codes<-gsheet2tbl("https://docs.google.com/document/d/1e53UDsuHZwQAyVc8vAG69Al_tjXbnv6C/edit?usp=sharing")
# Reading in doc of IDC10codes
codes<-gsheet2tbl("https://docs.google.com/document/d/1e53UDsuHZwQAyVc8vAG69Al_tjXbnv6C/edit")
# Reading in doc of IDC10codes
codes<-gsheet2tbl("https://docs.google.com/document/d/1e53UDsuHZwQAyVc8vAG69Al_tjXbnv6C/edit?usp=sharing&ouid=101883700449258151197&rtpof=true&sd=true")
# Reading in doc of IDC10codes
codes<-gsheet2tbl("C:\Users\alane\Downloads\Supplementary Tables 1 and 2.docx")
# Reading in doc of IDC10codes
codes<-gsheet2tbl("C:/Users/alane/Downloads/Supplementary Tables 1 and 2.docx")
# Reading in doc of IDC10codes
codes<-gsheet::gsheet2tbl("C:/Users/alane/Downloads/Supplementary Tables 1 and 2.docx")
# Reading in doc of IDC10codes
codes<-gsheet::gsheet2tbl("https://docs.google.com/document/d/1e53UDsuHZwQAyVc8vAG69Al_tjXbnv6C/edit")
install.packages("officer")
library(officer)
library(tigris)
options(tigris_use_cache = TRUE)
temp <- tigris::zctas(starts_with = 370:385)
tnz <-  as(temp, 'Spatial')
leaflet() %>%
addProviderTiles(providers$OpenStreetMap) %>%
addMarkers(data = locations, label = locations$address ) %>%
addPolygons(tnz)
library(leaflet)
leaflet() %>%
addProviderTiles(providers$OpenStreetMap) %>%
addMarkers(data = locations, label = locations$address ) %>%
addPolygons(tnz)
leaflet() %>%
addProviderTiles(providers$OpenStreetMap) %>%
addMarkers(data = locations, label = locations$address ) %>%
addPolygons(tnz)
leaflet() %>%
addProviderTiles(providers$OpenStreetMap) %>%
addMarkers(data = locations, label = locations$address )
# Map of SEP trial run
locations<-gsheet2tbl("https://docs.google.com/spreadsheets/d/1sb4P_7-UkcpkmENZ_DpMI45wRY7oItIFbv-0suLmz7U/edit?usp=sharing")
# Map of SEP trial run
locations<-gsheet2tbl("https://docs.google.com/spreadsheets/d/1sb4P_7-UkcpkmENZ_DpMI45wRY7oItIFbv-0suLmz7U/edit?usp=sharing")
######################## Libraries and Data sets ####################
# June 27rd 2022 | Start of exploration!
#####################################################################
library(tidyverse)
<<<<<<< HEAD
library(gsheet)
library(ggthemes)
library(leaflet)
library(leaflet.extras)
# Map of SEP trial run
locations<-gsheet2tbl("https://docs.google.com/spreadsheets/d/1sb4P_7-UkcpkmENZ_DpMI45wRY7oItIFbv-0suLmz7U/edit?usp=sharing")
library(tigris)
options(tigris_use_cache = TRUE)
temp <- tigris::zctas(starts_with = 370:385)
tnz <-  as(temp, 'Spatial')
leaflet() %>%
addProviderTiles(providers$OpenStreetMap) %>%
addMarkers(data = locations, label = locations$address )
leaflet() %>%
addProviderTiles(providers$OpenStreetMap) %>%
addMarkers(data = locations, label = locations$address ) %>%
addPolygons(tnz)
plot(tnz)
library(dplyr)
library(readr)
library(ggplot2)
library(leaflet)
library(rgdal)
library(raster)
library(sp)
library(rasterVis)
library(htmltools)
library(RColorBrewer)
library(geosphere)
library(tigris)
options(tigris_use_cache = TRUE)
temp <- tigris::zctas(starts_with = 370:385)
tnz <-  as(temp, 'Spatial')
leaflet() %>%
addProviderTiles(providers$OpenStreetMap) %>%
addMarkers(data = locations, label = locations$address )
plot(tnz)
leaflet() %>%
addProviderTiles(providers$OpenStreetMap) %>%
addMarkers(data = locations, label = locations$address ) %>%
addPolygons(tnz)
leaflet() %>%
addProviderTiles(providers$OpenStreetMap) %>%
addMarkers(data = locations, label = locations$address )
plot(tnz)
leaflet() %>%
addProviderTiles(providers$OpenStreetMap) %>%
addMarkers(data = locations, label = locations$address )
leaflet() %>%
addProviderTiles(providers$OpenStreetMap) %>%
addMarkers(data = locations, label = locations$address )
leaflet() %>%
addProviderTiles(providers$OpenStreetMap) %>%
addMarkers(data = locations, label = locations$address ) %>%
addPolylines(tnz)
install.packages("ggmap")
library(ggmap)
gmap('Tennessee')
qmap('Tennessee')
qmap('Liverpool')
qmap('Tennessee')
?register_google
ggmap_show_api_key()
showing_key()
library(shiny)
library(shinydashboard)
library(shinythemes)
runApp('D:/DataLab/syndemic/Dashboard')
valueBox("# of people in with SUD in selected zipcodes",
value = df_map() %>% filter(sud) %>% nrow(),
icon = "fa-user",
color = "darkyellow")
# New GIS STUFF------------------------------------------------------
library(tigris)
options(tigris_use_cache = TRUE)
temp <- tigris::zctas(starts_with = 370:385)
View(temp)
temp <- tigris::zctas(cb = TRUE,starts_with = 370:385)
View(temp)
library(tigris)
options(tigris_use_cache = TRUE)
temp <- tigris::zctas(cb = TRUE,starts_with = 370:385)
?addPolygon
?addPolygons
library(tigris)
options(tigris_use_cache = TRUE)
temp <- tigris::zctas(cb = TRUE,starts_with = 370:385)
View(temp)
View(temp[[8]][[40]])
library(tigris)
options(tigris_use_cache = TRUE)
temp <- tigris::zctas(starts_with = 370:385)
View(temp)
install.packages("maps")
library(maps)
library(leaflet)
library(leaflet.extras)
leaflet(locations) %>%
addProviderTiles(providers$OpenStreetMap) %>%
addMarkers(label = ~label) %>%
addControl()
install.packages("rgdal")
install.packages("rgdal")
library("rgdal")
locations<-gsheet2tbl("https://docs.google.com/spreadsheets/d/1sb4P_7-UkcpkmENZ_DpMI45wRY7oItIFbv-0suLmz7U/edit?usp=sharing")
library("gsheet")
library("rgdal")
locations<-gsheet2tbl("https://docs.google.com/spreadsheets/d/1sb4P_7-UkcpkmENZ_DpMI45wRY7oItIFbv-0suLmz7U/edit?usp=sharing")
locations<-locations %>% mutate(label = paste(name,address,phone, sep = "\n"))
leaflet(locations) %>%
addProviderTiles(providers$OpenStreetMap) %>%
addMarkers(label = ~label)
library(dplyr)
locations<-gsheet2tbl("https://docs.google.com/spreadsheets/d/1sb4P_7-UkcpkmENZ_DpMI45wRY7oItIFbv-0suLmz7U/edit?usp=sharing")
locations<-locations %>% mutate(label = paste(name,address,phone, sep = "\n"))
leaflet(locations) %>%
addProviderTiles(providers$OpenStreetMap) %>%
addMarkers(label = ~label)
library(leaflet)
locations<-gsheet2tbl("https://docs.google.com/spreadsheets/d/1sb4P_7-UkcpkmENZ_DpMI45wRY7oItIFbv-0suLmz7U/edit?usp=sharing")
locations<-locations %>% mutate(label = paste(name,address,phone, sep = "\n"))
leaflet(locations) %>%
addProviderTiles(providers$OpenStreetMap) %>%
addMarkers(label = ~label)
getwd()
boundaries <- rgdal::readOGR(dsn = "../syndemic",
layer = "Counties_and_Unitary_Authorities_(December_2016)_Boundaries")
boundaries <- rgdal::readOGR(dsn = "../syndemic",
layer = "tn_counties.shp")
boundaries <- rgdal::readOGR(dsn = "D:/DataLab/syndemic",
layer = "tn_counties.shp")
boundaries <- rgdal::readOGR(dsn = "D:/DataLab/syndemic",
layer = "tn_counties")
boundaries <- rgdal::readOGR(dsn = "D:/DataLab/syndemic",
layer = "tn_counties")
boundaries <- rgdal::readOGR(dsn = "D:/DataLab/syndemic",
layer = "tn_counties")
boundaries <- rgdal::readOGR("D:/DataLab/syndemic/tn_counties.shp")
boundaries <- rgdal::readOGR("D:/DataLab/syndemic/tn_counties")
library(raster)
boundaries <- shapefile("D:/DataLab/syndemic/tn_counties.shp")
boundaries <- shapefile("D:/DataLab/syndemic/tn_counties.shx")
leaflet(locations) %>%
addProviderTiles(providers$OpenStreetMap) %>%
addMarkers(label = ~label) %>%
addPolygons(data = boundaries,
color = "#9A77C7")
boundaries@data
View(boundaries)
boundaries <-rgdal::readOGR(dsn = "D:/DataLab/syndemic",
layer = "tn_counties")
leaflet(locations) %>%
addProviderTiles(providers$OpenStreetMap) %>%
addMarkers(label = ~label) %>%
addPolygons(data = boundareis,
color = "#9A77C7")
leaflet(locations) %>%
addProviderTiles(providers$OpenStreetMap) %>%
addMarkers(label = ~label) %>%
addPolygons(data = boundaries,
color = "#9A77C7")
View(boundaries)
boundaries <-rgdal::readOGR(dsn = "D:/DataLab/syndemic",
layer = "tncounties")
boundaries <-rgdal::readOGR(dsn = "D:/DataLab/syndemic",
layer = "tncounty")
leaflet(locations) %>%
addProviderTiles(providers$OpenStreetMap) %>%
addMarkers(label = ~label) %>%
addPolygons(data = boundaries,
color = "#9A77C7")
View(boundaries)
plot(boundaries)
locations<-gsheet2tbl("https://docs.google.com/spreadsheets/d/1sb4P_7-UkcpkmENZ_DpMI45wRY7oItIFbv-0suLmz7U/edit?usp=sharing")
locations<-locations %>% mutate(label = paste(name,address,phone, sep = "\n"))
boundaries <-rgdal::readOGR(dsn = "D:/DataLab/syndemic",
layer = "tncounty")
leaflet(locations) %>%
addProviderTiles(providers$OpenStreetMap) %>%
addMarkers(label = ~label) %>%
addPolygons(data = boundaries,
color = "#9A77C7")
boundaries <-rgdal::readOGR(dsn = "D:/DataLab/syndemic",
layer = "tl_2016_47_cousub")
leaflet(locations) %>%
addProviderTiles(providers$OpenStreetMap) %>%
addMarkers(label = ~label) %>%
addPolygons(data = boundaries,
color = "#9A77C7")
setwd("D:/DataLab/syndemic")
library(gsheet)
# Reading in data of locations of SEP
locations<-gsheet2tbl("https://docs.google.com/spreadsheets/d/1sb4P_7-UkcpkmENZ_DpMI45wRY7oItIFbv-0suLmz7U/edit?usp=sharing")
View(locations)
?addMarkers
library(leaflet)
library(leaflet.extras)
?addMarkers
?addMarkers
=======
ggplot(data = md_phi, aes(x = Age ))+
geom_histogram()
ggplot(data = md_phi, aes(x = Age ))+
geom_histogram()+
xlim(0,100)
ggplot(data = md_phi %>% filter(sud), aes(x = Age ))+
geom_histogram()+
xlim(0,100)
mean(md_phi$Age)
age<-md_phi %>% filter(Age>=18)
age<-md_phi %>% filter(Age>=18) %>% filter(Age<=64)
mean(age$Age)
coldnamesdf<-data.frame(colnames)
View(coldnamesdf)
write_csv(colnamesdf, "colnames")
colnamesdf<-data.frame(colnames)
write_csv(colnamesdf, "colnames")
write_csv(colnamesdf, "colnames.csv")
########################
library(tidyverse)
library(ggVennDiagram)
library(forcats)
library(lubridate)
library(RSQLite)
library(DBI)
library(dbplyr)
library(readr)
library(data.table)
########################
library(tidyverse)
library(ggVennDiagram)
library(forcats)
library(lubridate)
library(RSQLite)
# Reading in sqlite
portaldb <- dbConnect(SQLite(), "discharges_phi")
# List tables in database
dbListTables(portaldb)
# Column names
dbListFields(portaldb, "discharges_phi")
# Creating query
ex<-dbGetQuery(portaldb, res)
# List tables in database
dbListTables(portaldb)
# Column names
dbListFields(portaldb, "discharges_phi")
# Reading in sqlite
portaldb <- dbConnect(SQLite(), "copy_discharges_phi")
# List tables in database
dbListTables(portaldb)
# Column names
dbListFields(portaldb, "copy_discharges_phi")
install.packages("DBI")
install.packages("DBI")
install.packages("DBI")
install.packages("DBI")
install.packages("DBI")
install.packages("dbplyr")
install.packages("data.table")
########################
library(tidyverse)
library(ggVennDiagram)
library(forcats)
library(lubridate)
library(RSQLite)
library(DBI)
library(dbplyr)
library(readr)
library(data.table)
# Reading in sqlite
portaldb <- dbConnect(SQLite(), "copy_discharges_phi")
# List tables in database
dbListTables(portaldb)
# Column names
dbListFields(portaldb, "copy_discharges_phi")
source("~/Desktop/Syndemic Project/syndemic/datadqlphi.R", echo=TRUE)
# Writing query data
write.csv(ex, "CopyOfimpdataphi.csv")
# Creating query
ex<-dbGetQuery(portaldb, res)
# Writing query data
write.csv(ex, "CopyOfimpdataphi.csv")
# Disconnect from sqlite
dbDisconnect(portaldb)
# Creating query
ex<-dbGetQuery(portaldb, res)
# Reading in sqlite
portaldb <- dbConnect(SQLite(), "copy_discharges_phi")
# List tables in database
dbListTables(portaldb)
# Column names
dbListFields(portaldb, "copy_discharges_phi")
# Reading in sqlite
portaldb <- dbConnect(SQLite(), "copy_discharges_phi")
# List tables in database
dbListTables(portaldb)
# Column names
dbListFields(portaldb, "copy_discharges_phi")
# Reading in sqlite
portaldb <- dbConnect(SQLite(), "discharges_phi")
# List tables in database
dbListTables(portaldb)
# Column names
dbListFields(portaldb, "discharges_phi")
setwd("~/Desktop/Syndemic Project/syndemic")
# Reading in sqlite
portaldb <- dbConnect(SQLite(), "copy_discharges_phi")
# List tables in database
dbListTables(portaldb)
# Column names
dbListFields(portaldb, "discharges_phi")
res<-"SELECT * FORM discharges_phi "
# Creating query
ex<-dbGetQuery(portaldb, res)
res<-"SELECT * FROM discharges_phi "
# Creating query
ex<-dbGetQuery(portaldb, res)
gc()
gc()
<<<<<<< HEAD
########################
library(tidyverse)
library(ggVennDiagram)
library(forcats)
library(lubridate)
library(RSQLite)
# Reading in sqlite
portaldb <- dbConnect(SQLite(), "copy_discharges_phi")
# List tables in database
dbListTables(portaldb)
# Column names
dbListFields(portaldb, "discharges_phi")
res<-"SELECT * FROM discharges_phi "
# Creating query
ex<-dbGetQuery(portaldb, res)
gc()
=======
<<<<<<< HEAD
<<<<<<< HEAD
>>>>>>> 81e1b20d6f1b39941438be5eb12032c1128e387d
=======
>>>>>>> 81e1b20d6f1b39941438be5eb12032c1128e387d
=======
>>>>>>> 81e1b20d6f1b39941438be5eb12032c1128e387d
>>>>>>> d937f23b5f4ede4fdec0653f24d6af3a07359c47
getwd()
getwd()
