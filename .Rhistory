-Secondary_Patient_Rel_Insr,
-Tertiary_Patient_Rel_Insr,
-Dx_Px_Qualifier,
-starts_with("POA"), #[1:18]
-starts_with("Patient_Reason_Visit"),#[1:3],
-Prospect_Pay_Code,
-starts_with("Ecode"), #[1:3]
-starts_with("E_POA"), #[1:3]
-Type_ER_Visit,
-Outcome_ER_Visit,
-Inpatient_Flag,
-ER_Flag,
-PET_Flag,
-ASTC_Flag,
-Lithotripsy_Flag,
-MRI_MRA_Flag,
-Megavolt_Rad_Flag,
-CT_Flag,
-Fatal_Error_Flag,
-starts_with("Record_Num"), #[1:2]
-Bill_End,
-MUL,
-Patient_ID,
-TN_Co_Res,
-Payer_A,
-Payer_B,
-Payer_C,
-Amount_Counter,
-Race,
-LOS,
-DRG_Rank,
-Inpat_Record_Flag,
-ER_Record_Flag,
-ASTC_Record_Flag,
-Obs_23hr_Record_Flag,
-CON_Flag,
-Cumulative_Record_Flag,
-Reportable_Flag,
-TN_Co_Unk,
-Processing_Period,
-MS_MDC,
-MS_DRG,
-MS_DRG_4digit,
-HAC,
-Admit_From_ED_Flag,
-Wrong_Claim
)
train1 <- train$Diag1 %>%
paste(df$Diag1,
df$Diag2,
df$Diag3,
df$Diag4,
df$Diag5,
df$Diag6,
df$Diag7,
df$Diag8,
df$Diag9,
df$Diag10,
df$Diag11,
df$Diag12,
df$Diag13,
df$Diag14,
df$Diag15,
df$Diag16,
df$Diag17,
df$Diag18
)
ICD_Filtered[1,2]
keep<-(ICD_Filtered[i,1])
ICD_Filtered[1,1]
ICD_Filtered[2,1]
keepall<-c()
for(i in 1:492){
keep<-(ICD_Filtered[i,1],train1$Diag1)
keepall<-keep
}
keepall<-c()
for(i in 1:492){
keep<-grep(ICD_Filtered[i,1],train1$Diag1)
keepall<-keep
}
for(i in 1:492){
keep<-grep(ICD_Filtered[i,1],train$Diag1)
keepall<-keep
}
train1<-train1[keep,]
train<-train[keep,]
train<-train[keep,]
View(train)
keepall<-c()
for(i in 1:492){
keep<-grep(ICD_Filtered[i,1],train$Diag1)
keepall<-keep+keepall
}
train<-train[keep,]
#Filters out unnecessary columns
train <-df %>% select(
-Type_Bill,
-Fed_Tax_SubID,
-Fed_Tax_Num,
-Admission_Type,
-Admission_Source,
-Do_Not_Resuscitate,
-Accident_St,
-starts_with("Units_Service"), #[1:18]
-Primary_Health_Plan_Id,
-Secondary_Health_Plan_Id,
-Tertiary_Health_Plan_Id,
-Primary_Patient_Rel_Insr,
-Secondary_Patient_Rel_Insr,
-Tertiary_Patient_Rel_Insr,
-Dx_Px_Qualifier,
-starts_with("POA"), #[1:18]
-starts_with("Patient_Reason_Visit"),#[1:3],
-Prospect_Pay_Code,
-starts_with("Ecode"), #[1:3]
-starts_with("E_POA"), #[1:3]
-Type_ER_Visit,
-Outcome_ER_Visit,
-Inpatient_Flag,
-ER_Flag,
-PET_Flag,
-ASTC_Flag,
-Lithotripsy_Flag,
-MRI_MRA_Flag,
-Megavolt_Rad_Flag,
-CT_Flag,
-Fatal_Error_Flag,
-starts_with("Record_Num"), #[1:2]
-Bill_End,
-MUL,
-Patient_ID,
-TN_Co_Res,
-Payer_A,
-Payer_B,
-Payer_C,
-Amount_Counter,
-Race,
-LOS,
-DRG_Rank,
-Inpat_Record_Flag,
-ER_Record_Flag,
-ASTC_Record_Flag,
-Obs_23hr_Record_Flag,
-CON_Flag,
-Cumulative_Record_Flag,
-Reportable_Flag,
-TN_Co_Unk,
-Processing_Period,
-MS_MDC,
-MS_DRG,
-MS_DRG_4digit,
-HAC,
-Admit_From_ED_Flag,
-Wrong_Claim
)
keepall<-c()
for(i in 1:492){
keep<-grep(ICD_Filtered[i,1],train$Diag1)
keepall<-keep+keepall
}
train<-train[keep,]
View(train)
keep<-grep(ICD_Filtered[i,1],train$Diag1)
#Filters out unnecessary columns
train <-df %>% select(
-Type_Bill,
-Fed_Tax_SubID,
-Fed_Tax_Num,
-Admission_Type,
-Admission_Source,
-Do_Not_Resuscitate,
-Accident_St,
-starts_with("Units_Service"), #[1:18]
-Primary_Health_Plan_Id,
-Secondary_Health_Plan_Id,
-Tertiary_Health_Plan_Id,
-Primary_Patient_Rel_Insr,
-Secondary_Patient_Rel_Insr,
-Tertiary_Patient_Rel_Insr,
-Dx_Px_Qualifier,
-starts_with("POA"), #[1:18]
-starts_with("Patient_Reason_Visit"),#[1:3],
-Prospect_Pay_Code,
-starts_with("Ecode"), #[1:3]
-starts_with("E_POA"), #[1:3]
-Type_ER_Visit,
-Outcome_ER_Visit,
-Inpatient_Flag,
-ER_Flag,
-PET_Flag,
-ASTC_Flag,
-Lithotripsy_Flag,
-MRI_MRA_Flag,
-Megavolt_Rad_Flag,
-CT_Flag,
-Fatal_Error_Flag,
-starts_with("Record_Num"), #[1:2]
-Bill_End,
-MUL,
-Patient_ID,
-TN_Co_Res,
-Payer_A,
-Payer_B,
-Payer_C,
-Amount_Counter,
-Race,
-LOS,
-DRG_Rank,
-Inpat_Record_Flag,
-ER_Record_Flag,
-ASTC_Record_Flag,
-Obs_23hr_Record_Flag,
-CON_Flag,
-Cumulative_Record_Flag,
-Reportable_Flag,
-TN_Co_Unk,
-Processing_Period,
-MS_MDC,
-MS_DRG,
-MS_DRG_4digit,
-HAC,
-Admit_From_ED_Flag,
-Wrong_Claim
)
keep<-grep(ICD_Filtered[i,1],train$Diag1)
keep<-grep(as.character(ICD_Filtered[i,1]),train$Diag1)
ICD_Filtered[1,1]
ICD_Filtered[2,1]
ICD_Filtered[3,1]
library(gsheet)
# Reading in doc of IDC10codes
codes<-gsheet2tbl("https://docs.google.com/document/d/1e53UDsuHZwQAyVc8vAG69Al_tjXbnv6C/edit?usp=sharing")
# Reading in doc of IDC10codes
codes<-gsheet2tbl("https://docs.google.com/document/d/1e53UDsuHZwQAyVc8vAG69Al_tjXbnv6C/edit")
# Reading in doc of IDC10codes
codes<-gsheet2tbl("https://docs.google.com/document/d/1e53UDsuHZwQAyVc8vAG69Al_tjXbnv6C/edit?usp=sharing&ouid=101883700449258151197&rtpof=true&sd=true")
# Reading in doc of IDC10codes
codes<-gsheet2tbl("C:\Users\alane\Downloads\Supplementary Tables 1 and 2.docx")
# Reading in doc of IDC10codes
codes<-gsheet2tbl("C:/Users/alane/Downloads/Supplementary Tables 1 and 2.docx")
# Reading in doc of IDC10codes
codes<-gsheet::gsheet2tbl("C:/Users/alane/Downloads/Supplementary Tables 1 and 2.docx")
# Reading in doc of IDC10codes
codes<-gsheet::gsheet2tbl("https://docs.google.com/document/d/1e53UDsuHZwQAyVc8vAG69Al_tjXbnv6C/edit")
install.packages("officer")
library(officer)
######################## Libraries and Data sets ####################
# June 23rd 2022 | Start of exploration and cleaning!
#####################################################################
library(tidyverse)
setwd("D:/DataLab/syndemic")
read.csv("masterdata.csv")
df<-read.csv("masterdata.csv")
View(df)
df<-df %>% select(-starts_with("HCPC_Rate"),-X...1)
df<-df %>% select(-starts_with("HCPC_Rate"),-X....1.)
View(df)
write_csv(df, "mdata.csv")
colnames(df)
paste0(colnames(df),collapse = " ")
View(df)
df<-df %>% select(-starts_with("HCPC_Rate"),
-X....1.,
-Tot_Charges_Summed,
-Tot_Charges_Analysis,
-Tot_Charges_Recorded,
-Obs_Unit_Flag.
-CostWt,
-starts_with("Proc")
)
df<-read.csv("masterdata.csv")
library(RSQLite)
# Reading in sqlite
portaldb <- dbConnect(SQLite(), "discharges_anon")
# List tables in database
dbListTables(portaldb)
# Column names
dbListFields(portaldb, "discharges_anon")
df<-df %>% select(-starts_with("HCPC_Rate"),
-X....1.,
-Tot_Charges_Summed,
-Tot_Charges_Analysis,
-Tot_Charges_Recorded,
-Obs_Unit_Flag.
-CostWt,
-starts_with("Proc"),
-Bill_Number,
-Record_Seq_Num,
-Form_Type
)
df<-df %>% select(-starts_with("HCPC_Rate"),
-X....1.,
-Tot_Charges_Summed,
-Tot_Charges_Analysis,
-Tot_Charges_Recorded,
-Obs_Unit_Flag,
-CostWt,
-starts_with("Proc"),
-Bill_Number,
-Record_Seq_Num,
-Form_Type
)
View(df)
df<-read.csv("masterdata.csv")
df<-df %>% select(-starts_with("HCPC_Rate"),
-X....1.,
-Tot_Charges_Summed,
-Tot_Charges_Analysis,
-Tot_Charges_Recorded,
-Obs_Unit_Flag,
-CostWt,
-starts_with("Proc"),
-Bill_Number,
-Record_Seq_Num,
-Form_Type,
-Accident_Code,
-Admit_Diag_Cd
)
write_csv(df, "mdata.csv")
######################## Libraries and Data sets ####################
# June 27rd 2022 | Start of exploration!
#####################################################################
library(tidyverse)
setwd("D:/DataLab/syndemic")
data<-read_csv("mdata.csv")
dbDisconnect(portaldb)
# First decent graph hopefully
zip<-data %>% group_by(Patient_Zip) %>% summarise(total = sum(Total_Tot_Chrg))
View(zip)
ggplot(data = zip, aes( x = Patient_Zip , y = total)) %>%
geom_bar()
ggplot(data = zip, aes( x = Patient_Zip , y = total)) +
geom_bar()
ggplot(data = zip, aes( x = Patient_Zip , y = total)) +
geom_bar( stat = identity)
ggplot(data = zip, aes( x = Patient_Zip , y = total)) +
geom_bar( stat = "identity" )
# First decent graph hopefully
zip<-data %>% group_by(Patient_Zip) %>% summarise(total = sum(Total_Tot_Chrg)) %>% arrange(des(total))
# First decent graph hopefully
zip<-data %>% group_by(Patient_Zip) %>% summarise(total = sum(Total_Tot_Chrg)) %>% arrange(desc(total))
# First decent graph hopefully
zip<-data %>% group_by(Patient_Zip) %>% summarise(total = sum(Total_Tot_Chrg)) %>%
arrange(desc(total)) %>% head(20)
ggplot(data = zip, aes( x = Patient_Zip , y = total)) +
geom_bar( stat = "identity" )
ggplot(data = zip, aes( x = reorder(-Patient_Zip) , y = total)) +
geom_bar( stat = "identity" )
ggplot(data = zip, aes( x = reorder(Patient_Zip) , y = total)) +
geom_bar( stat = "identity" )
ggplot(data = zip, aes( x = reorder(Patient_Zip, -) , y = total)) +
geom_bar( stat = "identity" )
?reorder
ggplot(data = zip, aes( x = reorder(Patient_Zip,-total) , y = total)) +
geom_bar( stat = "identity" )
ggplot(data = zip, aes( x = reorder(Patient_Zip,-total) , y = total)) +
geom_bar( stat = "identity" ) +
theme(axis.text.x = element_text(angle = 90))
library(ggthemes)
ggplot(data = zip, aes( x = reorder(Patient_Zip,-total) , y = total)) +
geom_bar( stat = "identity" ) +
theme(axis.text.x = element_text(angle = 90)) +
labs( title = "Top 20 Zip codes with highest total charges",
subtitle = "Tennessee",
caption = "End The Syndemic | DataLab 2022") +
theme_clean()
ggplot(data = zip, aes( x = reorder(Patient_Zip,-total) , y = total)) +
geom_bar( stat = "identity" ) +
theme_clean()+
theme(axis.text.x = element_text(angle = 90)) +
labs( title = "Top 20 Zip codes with highest total charges",
subtitle = "Tennessee",
caption = "End The Syndemic | DataLab 2022")
ggplot(data = zip, aes( x = reorder(Patient_Zip,-total) , y = total)) +
geom_bar( stat = "identity" ) +
theme_clean()+
theme(axis.text.x = element_text(angle = 90)) +
labs( title = "Top 20 Zip codes with highest total charges",
subtitle = "Tennessee",
caption = "End The Syndemic | DataLab 2022")+
xlab("Anonymized Zipcode")
ggplot(data = zip, aes( x = reorder(Patient_Zip,-total) , y = total/1000000000)) +
geom_bar( stat = "identity" ) +
theme_clean()+
theme(axis.text.x = element_text(angle = 90)) +
labs( title = "Top 20 Zip codes with highest total charges",
subtitle = "Tennessee",
caption = "End The Syndemic | DataLab 2022")+
xlab("Anonymized Zipcode")
ggplot(data = zip, aes( x = reorder(Patient_Zip,-total) , y = total/1000000000)) +
geom_bar( stat = "identity" ) +
theme_clean()+
theme(axis.text.x = element_text(angle = 90)) +
labs( title = "Top 20 Zip codes with highest total charges",
subtitle = "Tennessee",
caption = "End The Syndemic | DataLab 2022")+
xlab("Anonymized Zipcode")+
ylab("Total (In Billions)")
ggplot(data = zip, aes( x = reorder(Patient_Zip,-total) , y = total/1000000000, color = total)) +
geom_bar( stat = "identity" ) +
theme_clean()+
theme(axis.text.x = element_text(angle = 90)) +
labs( title = "Top 20 Zip codes with highest total charges",
subtitle = "Tennessee",
caption = "End The Syndemic | DataLab 2022")+
xlab("Anonymized Zipcode")+
ylab("Total (In Billions)")
ggplot(data = zip, aes( x = reorder(Patient_Zip,-total) , y = total/1000000000, fill = total)) +
geom_bar( stat = "identity" ) +
theme_clean()+
theme(axis.text.x = element_text(angle = 90)) +
labs( title = "Top 20 Zip codes with highest total charges",
subtitle = "Tennessee",
caption = "End The Syndemic | DataLab 2022")+
xlab("Anonymized Zipcode")+
ylab("Total (In Billions)")
ggplot(data = zip, aes( x = reorder(Patient_Zip,-total) , y = total/1000000000, fill = total)) +
geom_bar( stat = "identity" ) +
theme_clean()+
theme(axis.text.x = element_text(angle = 90)) +
labs( title = "Top 20 Zip codes with highest total charges",
subtitle = "Tennessee",
caption = "End The Syndemic | DataLab 2022")+
xlab("Anonymized Zipcode")+
ylab("Total (In Billions)")+
theme(legend.position = none)
ggplot(data = zip, aes( x = reorder(Patient_Zip,-total) , y = total/1000000000, fill = total)) +
geom_bar( stat = "identity" ) +
theme_clean()+
theme(axis.text.x = element_text(angle = 90)) +
labs( title = "Top 20 Zip codes with highest total charges",
subtitle = "Tennessee",
caption = "End The Syndemic | DataLab 2022")+
xlab("Anonymized Zipcode")+
ylab("Total (In Billions)")+
theme(legend.position = "none")
# First decent graph hopefully
zip<-data %>%filter(TN_Res_Flag) %>%
group_by(Patient_Zip) %>%
summarise(total = sum(Total_Tot_Chrg)) %>%
arrange(desc(total)) %>%
head(20)
# First decent graph hopefully
zip<-data %>% filter(TN_Res_Flag == "Y") %>%
group_by(Patient_Zip) %>%
summarise(total = sum(Total_Tot_Chrg)) %>%
arrange(desc(total)) %>%
head(20)
# First helpful graph
ggplot(data = zip, aes( x = reorder(Patient_Zip,-total) , y = total/1000000, fill = total)) +
geom_bar( stat = "identity" ) +
theme_clean() +
theme(axis.text.x = element_text(angle = 90)) +
labs( title = "Top 20 Zip codes with highest total charges",
subtitle = "Tennessee",
caption = "End The Syndemic | DataLab 2022") +
xlab("Anonymized Zipcode") +
ylab("Total (In Millions)") +
theme(legend.position = "none")
# First helpful graph
ggplot(data = zip, aes( x = reorder(Patient_Zip,-total) , y = total/100000000, fill = total)) +
geom_bar( stat = "identity" ) +
theme_clean() +
theme(axis.text.x = element_text(angle = 90)) +
labs( title = "Top 20 Zip codes with highest total charges",
subtitle = "Tennessee",
caption = "End The Syndemic | DataLab 2022") +
xlab("Anonymized Zipcode") +
ylab("Total (In Millions)") +
theme(legend.position = "none")
# First helpful graph
ggplot(data = zip, aes( x = reorder(Patient_Zip,-total) , y = total/100000000000, fill = total)) +
geom_bar( stat = "identity" ) +
theme_clean() +
theme(axis.text.x = element_text(angle = 90)) +
labs( title = "Top 20 Zip codes with highest total charges",
subtitle = "Tennessee",
caption = "End The Syndemic | DataLab 2022") +
xlab("Anonymized Zipcode") +
ylab("Total (In Millions)") +
theme(legend.position = "none")
# First decent graph hopefully
zip<-data %>% filter(TN_Res_Flag == "Y") %>%
group_by(Patient_Zip) %>%
summarise(total = sum(Total_Tot_Chrg)) %>%
arrange(desc(total)) %>%
head(15)
# First helpful graph
ggplot(data = zip, aes( x = reorder(Patient_Zip,-total) , y = total/100000000000, fill = total)) +
geom_bar( stat = "identity" ) +
theme_clean() +
theme(axis.text.x = element_text(angle = 90)) +
labs( title = "Top 20 Zip codes with highest total charges",
subtitle = "Tennessee",
caption = "End The Syndemic | DataLab 2022") +
xlab("Anonymized Zipcode") +
ylab("Total (In Billions)") +
theme(legend.position = "none")
# First decent graph hopefully
df<-data %>% filter(TN_Res_Flag == "Y")
# First helpful graph
ggplot(data = zip, aes( x = reorder(Patient_Zip,-total) , y = total/100000000000, fill = total)) +
geom_bar( stat = "identity" ) +
theme_clean() +
theme(axis.text.x = element_text(angle = 90)) +
labs( title = "Top 20 Zip codes with highest total charges",
subtitle = "Tennessee",
caption = "End The Syndemic | DataLab 2022") +
xlab("Anonymized Zipcode") +
ylab("Total (In Billions)") +
theme(legend.position = "none")
