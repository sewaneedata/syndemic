scale_fill_manual(values=c("#74A9CF",
"#08306B"),
name = "Type of Condition") +
scale_y_continuous(labels = scales::percent) +
labs(title = "Comparison of Primary Diagnosis Conditions",
y = "Percentage of Visits to the ER") +geom_test(aes(label = scales::percent(precent)))
#Plot of % by SCP or Williamson (DODGE GRAPH)
ggplot(data = tn_diag3, aes(x = scp,y = precent/100, fill = type)) +
geom_col(position = "dodge",
aes(label = scales::percent(precent)))+
labs(title = "Comparison of Primary Diagnosis Conditions",
y = "Percentage of Visits",
x = '') +
scale_fill_manual(values=c("#74A9CF",
"#08306B"),
name = "Type of Condition") +
scale_y_continuous(labels = scales::percent) +
labs(title = "Comparison of Primary Diagnosis Conditions",
y = "Percentage of Visits to the ER") +geom_text(aes(label = scales::percent(precent)))
library(ggrepel)
install.packages("ggrepel")
library(ggrepel)
#Plot of % by SCP or Williamson (DODGE GRAPH)
ggplot(data = tn_diag3, aes(x = scp,y = precent/100, fill = type)) +
geom_col(position = "dodge",
aes(label = scales::percent(precent)))+
labs(title = "Comparison of Primary Diagnosis Conditions",
y = "Percentage of Visits",
x = '') +
scale_fill_manual(values=c("#74A9CF",
"#08306B"),
name = "Type of Condition") +
scale_y_continuous(labels = scales::percent) +
labs(title = "Comparison of Primary Diagnosis Conditions",
y = "Percentage of Visits to the ER") + geom_text(aes(label = scales::percent(precent)))
# Code to make graph by SCP and Williamson
tn_diag3 <- tn_diag3 %>% mutate(scp = ifelse(county == "Franklin" | county == "Marion" | county == "Grundy", "SCP",
ifelse(county == "Williamson", "Williamson", "Other")))
library(ggrepel)
#Plot of % by SCP or Williamson (DODGE GRAPH)
ggplot(data = tn_diag3, aes(x = scp,y = precent/100, fill = type)) +
geom_col(position = "dodge",
aes(label = scales::percent(precent)))+
labs(title = "Comparison of Primary Diagnosis Conditions",
y = "Percentage of Visits",
x = '') +
scale_fill_manual(values=c("#74A9CF",
"#08306B"),
name = "Type of Condition") +
scale_y_continuous(labels = scales::percent) +
labs(title = "Comparison of Primary Diagnosis Conditions",
y = "Percentage of Visits to the ER") + geom_text(aes(label = scales::percent(precent)))
#Plot of % by SCP or Williamson (DODGE GRAPH)
ggplot(data = tn_diag3, aes(x = scp,y = precent/100, fill = type)) +
geom_col(position = "dodge",
aes(label = scales::percent(precent)))+
labs(title = "Comparison of Primary Diagnosis Conditions",
y = "Percentage of Visits",
x = '') +
scale_fill_manual(values=c("#74A9CF",
"#08306B"),
name = "Type of Condition") +
scale_y_continuous(labels = scales::percent) +
labs(title = "Comparison of Primary Diagnosis Conditions",
y = "Percentage of Visits to the ER") #+ geom_text(aes(label = scales::percent(precent)))
#Plot of % by SCP or Williamson (DODGE GRAPH)
ggplot(data = tn_diag3, aes(x = scp,y = precent/100, fill = type)) +
geom_col(position = "dodge")+
labs(title = "Comparison of Primary Diagnosis Conditions",
y = "Percentage of Visits",
x = '') +
scale_fill_manual(values=c("#74A9CF",
"#08306B"),
name = "Type of Condition") +
scale_y_continuous(labels = scales::percent) +
labs(title = "Comparison of Primary Diagnosis Conditions",
y = "Percentage of Visits to the ER") + geom_text(aes(label = scales::percent(precent)))
#Plot of % by SCP or Williamson (DODGE GRAPH)
ggplot(data = tn_diag3, aes(x = scp,y = precent/100, fill = type)) +
geom_col(position = "dodge")+
labs(title = "Comparison of Primary Diagnosis Conditions",
y = "Percentage of Visits",
x = '') +
scale_fill_manual(values=c("#74A9CF",
"#08306B"),
name = "Type of Condition") +
scale_y_continuous(labels = scales::percent) +
labs(title = "Comparison of Primary Diagnosis Conditions",
y = "Percentage of Visits to the ER") + geom_text(aes(label = precent))
# Code to make graph by SCP and Williamson
tn_diag3 <- tn_diag3 %>% mutate(scp = ifelse(county == "Franklin" | county == "Marion" | county == "Grundy", "SCP",
ifelse(county == "Williamson", "Williamson", "Other"))) %>% group_by(scp)
library(ggrepel)
#Plot of % by SCP or Williamson (DODGE GRAPH)
ggplot(data = tn_diag3, aes(x = scp,y = precent/100, fill = type)) +
geom_col(position = "dodge")+
labs(title = "Comparison of Primary Diagnosis Conditions",
y = "Percentage of Visits",
x = '') +
scale_fill_manual(values=c("#74A9CF",
"#08306B"),
name = "Type of Condition") +
scale_y_continuous(labels = scales::percent) +
labs(title = "Comparison of Primary Diagnosis Conditions",
y = "Percentage of Visits to the ER") + geom_text(aes(label = precent))
# Code to make graph by SCP and Williamson
tn_diag3 <- tn_diag3 %>% mutate(scp = ifelse(county == "Franklin" | county == "Marion" | county == "Grundy", "SCP",
ifelse(county == "Williamson", "Williamson", "Other"))) %>%
group_by(scp) %>%
summarize(mean_prec = mean(precent))
#Filter out "other" conditions
tn_diag3 <- tn_diag2 %>% filter(Condition != "Other", county != "Other")
# Code to make graph by SCP and Williamson
tn_diag3 <- tn_diag3 %>% mutate(scp = ifelse(county == "Franklin" | county == "Marion" | county == "Grundy", "SCP",
ifelse(county == "Williamson", "Williamson", "Other"))) %>%
group_by(scp, Condition) %>%
summarize(mean_prec = mean(precent))
#Filter out "other" conditions
tn_diag3 <- tn_diag2 %>% filter(Condition != "Other", county != "Other")
# Code to make graph by SCP and Williamson
tn_diag3 <- tn_diag3 %>% mutate(scp = ifelse(county == "Franklin" | county == "Marion" | county == "Grundy", "SCP",
ifelse(county == "Williamson", "Williamson", "Other"))) %>%
group_by(scp, Type) %>%
summarize(mean_prec = mean(precent))
# Code to make graph by SCP and Williamson
tn_diag3 <- tn_diag3 %>% mutate(scp = ifelse(county == "Franklin" | county == "Marion" | county == "Grundy", "SCP",
ifelse(county == "Williamson", "Williamson", "Other"))) %>%
group_by(scp, type) %>%
summarize(mean_prec = mean(precent))
#Plot of % by SCP or Williamson (DODGE GRAPH)
ggplot(data = tn_diag3, aes(x = scp,y = precent/100, fill = type)) +
geom_col(position = "dodge")+
labs(title = "Comparison of Primary Diagnosis Conditions",
y = "Percentage of Visits",
x = '') +
scale_fill_manual(values=c("#74A9CF",
"#08306B"),
name = "Type of Condition") +
scale_y_continuous(labels = scales::percent) +
labs(title = "Comparison of Primary Diagnosis Conditions",
y = "Percentage of Visits to the ER") + geom_text(aes(label = precent))
#Plot of % by SCP or Williamson (DODGE GRAPH)
ggplot(data = tn_diag3, aes(x = scp,y = precent/100, fill = type)) +
geom_col(position = "dodge")+
labs(title = "Comparison of Primary Diagnosis Conditions",
y = "Percentage of Visits",
x = '') +
scale_fill_manual(values=c("#74A9CF",
"#08306B"),
name = "Type of Condition") +
scale_y_continuous(labels = scales::percent) +
labs(title = "Comparison of Primary Diagnosis Conditions",
y = "Percentage of Visits to the ER") + geom_text(aes(label = mean_prec))
#Plot of % by SCP or Williamson (DODGE GRAPH)
ggplot(data = tn_diag3, aes(x = scp,y = mean_prec/100, fill = type)) +
geom_col(position = "dodge")+
labs(title = "Comparison of Primary Diagnosis Conditions",
y = "Percentage of Visits",
x = '') +
scale_fill_manual(values=c("#74A9CF",
"#08306B"),
name = "Type of Condition") +
scale_y_continuous(labels = scales::percent) +
labs(title = "Comparison of Primary Diagnosis Conditions",
y = "Percentage of Visits to the ER") + geom_text(aes(label = mean_prec))
#Plot of % by SCP or Williamson (DODGE GRAPH)
ggplot(data = tn_diag3, aes(x = scp,y = mean_prec/100, fill = type)) +
geom_col(position = "dodge")+
labs(title = "Comparison of Primary Diagnosis Conditions",
y = "Percentage of Visits",
x = '') +
scale_fill_manual(values=c("#74A9CF",
"#08306B"),
name = "Type of Condition") +
scale_y_continuous(labels = scales::percent) +
labs(title = "Comparison of Primary Diagnosis Conditions",
y = "Percentage of Visits to the ER") + geom_text(aes(label = mean_prec), vjust = 0)
#Plot of % by SCP or Williamson (DODGE GRAPH)
ggplot(data = tn_diag3, aes(x = scp,y = mean_prec/100, fill = type)) +
geom_col(position = "dodge", aes(label = mean_prec), vjust = 0)+
labs(title = "Comparison of Primary Diagnosis Conditions",
y = "Percentage of Visits",
x = '') +
scale_fill_manual(values=c("#74A9CF",
"#08306B"),
name = "Type of Condition") +
scale_y_continuous(labels = scales::percent) +
labs(title = "Comparison of Primary Diagnosis Conditions",
y = "Percentage of Visits to the ER") #+ geom_text(aes(label = mean_prec), vjust = 0)
y = "Percentage of Visits to the ER") + geom_text(aes(label = round(mean_prec),position = position_dodge(width = 0.9), vjust = 0)
#Plot of % by SCP or Williamson (DODGE GRAPH)
ggplot(data = tn_diag3, aes(x = scp,y = mean_prec/100, fill = type)) +
geom_col(position = "dodge")+
labs(title = "Comparison of Primary Diagnosis Conditions",
y = "Percentage of Visits",
x = '') +
scale_fill_manual(values=c("#74A9CF",
"#08306B"),
name = "Type of Condition") +
scale_y_continuous(labels = scales::percent) +
labs(title = "Comparison of Primary Diagnosis Conditions",
y = "Percentage of Visits to the ER") + geom_text(aes(label = round(mean_prec)),position = position_dodge(width = 0.9), vjust = 0)
#Plot of % by SCP or Williamson (DODGE GRAPH)
ggplot(data = tn_diag3, aes(x = scp,y = mean_prec/100, fill = type)) +
geom_col(position = "dodge")+
labs(title = "Comparison of Primary Diagnosis Conditions",
y = "Percentage of Visits",
x = '') +
scale_fill_manual(values=c("#74A9CF",
"#08306B"),
name = "Type of Condition") +
scale_y_continuous(labels = scales::percent) +
labs(title = "Comparison of Primary Diagnosis Conditions",
y = "Percentage of Visits to the ER") + geom_text(aes(label = round(mean_prec)),position = position_dodge(width = 0.9), vjust = .5)
#Plot of % by SCP or Williamson (DODGE GRAPH)
ggplot(data = tn_diag3, aes(x = scp,y = mean_prec/100, fill = type)) +
geom_col(position = "dodge")+
labs(title = "Comparison of Primary Diagnosis Conditions",
y = "Percentage of Visits",
x = '') +
scale_fill_manual(values=c("#74A9CF",
"#08306B"),
name = "Type of Condition") +
scale_y_continuous(labels = scales::percent) +
labs(title = "Comparison of Primary Diagnosis Conditions",
y = "Percentage of Visits to the ER") + geom_text(aes(label = round(mean_prec)),position = position_dodge(width = 0.9), vjust = -.5)
#Plot of % by SCP or Williamson (DODGE GRAPH)
ggplot(data = tn_diag3, aes(x = scp,y = mean_prec/100, fill = type)) +
geom_col(position = "dodge")+
labs(title = "Comparison of Primary Diagnosis Conditions",
y = "Percentage of Visits",
x = '') +
scale_fill_manual(values=c("#74A9CF",
"#08306B"),
name = "Type of Condition") +
scale_y_continuous(labels = scales::percent) +
labs(title = "Comparison of Primary Diagnosis Conditions",
y = "Percentage of Visits to the ER") + geom_text(aes(label = round(mean_prec + "%")),position = position_dodge(width = 0.9), vjust = -.5)
#Plot of % by SCP or Williamson (DODGE GRAPH)
ggplot(data = tn_diag3, aes(x = scp,y = mean_prec/100, fill = type)) +
geom_col(position = "dodge")+
labs(title = "Comparison of Primary Diagnosis Conditions",
y = "Percentage of Visits",
x = '') +
scale_fill_manual(values=c("#74A9CF",
"#08306B"),
name = "Type of Condition") +
scale_y_continuous(labels = scales::percent) +
labs(title = "Comparison of Primary Diagnosis Conditions",
y = "Percentage of Visits to the ER") + geom_text(aes(label = round(mean_prec)+ "%"),position = position_dodge(width = 0.9), vjust = -.5)
#Plot of % by SCP or Williamson (DODGE GRAPH)
ggplot(data = tn_diag3, aes(x = scp,y = mean_prec/100, fill = type)) +
geom_col(position = "dodge")+
labs(title = "Comparison of Primary Diagnosis Conditions",
y = "Percentage of Visits",
x = '') +
scale_fill_manual(values=c("#74A9CF",
"#08306B"),
name = "Type of Condition") +
scale_y_continuous(labels = scales::percent) +
labs(title = "Comparison of Primary Diagnosis Conditions",
y = "Percentage of Visits to the ER") + geom_text(aes(label = round(mean_prec),"%"),position = position_dodge(width = 0.9), vjust = -.5)
#Plot of % by SCP or Williamson (DODGE GRAPH)
ggplot(data = tn_diag3, aes(x = scp,y = mean_prec/100, fill = type)) +
geom_col(position = "dodge")+
labs(title = "Comparison of Primary Diagnosis Conditions",
y = "Percentage of Visits",
x = '') +
scale_fill_manual(values=c("#74A9CF",
"#08306B"),
name = "Type of Condition") +
scale_y_continuous(labels = scales::percent) +
labs(title = "Comparison of Primary Diagnosis Conditions",
y = "Percentage of Visits to the ER") + geom_text(aes(label = round(mean_prec)"%"),position = position_dodge(width = 0.9), vjust = -.5)
#Plot of % by SCP or Williamson (DODGE GRAPH)
ggplot(data = tn_diag3, aes(x = scp,y = mean_prec/100, fill = type)) +
geom_col(position = "dodge")+
labs(title = "Comparison of Primary Diagnosis Conditions",
y = "Percentage of Visits",
x = '') +
scale_fill_manual(values=c("#74A9CF",
"#08306B"),
name = "Type of Condition") +
scale_y_continuous(labels = scales::percent) +
labs(title = "Comparison of Primary Diagnosis Conditions",
y = "Percentage of Visits to the ER") + geom_text(aes(label = scales::percent(round(mean_prec))),position = position_dodge(width = 0.9), vjust = -.5)
#Plot of % by SCP or Williamson (DODGE GRAPH)
ggplot(data = tn_diag3, aes(x = scp,y = mean_prec/100, fill = type)) +
geom_col(position = "dodge")+
labs(title = "Comparison of Primary Diagnosis Conditions",
y = "Percentage of Visits",
x = '') +
scale_fill_manual(values=c("#74A9CF",
"#08306B"),
name = "Type of Condition") +
scale_y_continuous(labels = scales::percent) +
labs(title = "Comparison of Primary Diagnosis Conditions",
y = "Percentage of Visits to the ER") + geom_text(aes(label = scales::percent(round(mean_prec))/100),position = position_dodge(width = 0.9), vjust = -.5)
#Plot of % by SCP or Williamson (DODGE GRAPH)
ggplot(data = tn_diag3, aes(x = scp,y = mean_prec/100, fill = type)) +
geom_col(position = "dodge")+
labs(title = "Comparison of Primary Diagnosis Conditions",
y = "Percentage of Visits",
x = '') +
scale_fill_manual(values=c("#74A9CF",
"#08306B"),
name = "Type of Condition") +
scale_y_continuous(labels = scales::percent) +
labs(title = "Comparison of Primary Diagnosis Conditions",
y = "Percentage of Visits to the ER") + geom_text(aes(label = scales::percent(round(mean_prec)/100)),position = position_dodge(width = 0.9), vjust = -.5)
#Plot of % by SCP or Williamson (DODGE GRAPH)
ggplot(data = tn_diag3, aes(x = scp,y = mean_prec/100, fill = type)) +
geom_col(position = "dodge")+
labs(title = "Comparison of Primary Diagnosis Conditions",
y = "Percentage of Visits",
x = '') +
scale_fill_manual(values=c("#74A9CF",
"#08306B"),
name = "Type of Condition") +
scale_y_continuous(labels = scales::percent) +
labs(title = "Comparison of Primary Diagnosis Conditions",
y = "Percentage of Visits to the ER") + geom_text(aes(label = scales::percent(mean_prec)),position = position_dodge(width = 0.9), vjust = -.5)
#Plot of % by SCP or Williamson (DODGE GRAPH)
ggplot(data = tn_diag3, aes(x = scp,y = mean_prec/100, fill = type)) +
geom_col(position = "dodge")+
labs(title = "Comparison of Primary Diagnosis Conditions",
y = "Percentage of Visits",
x = '') +
scale_fill_manual(values=c("#74A9CF",
"#08306B"),
name = "Type of Condition") +
scale_y_continuous(labels = scales::percent) +
labs(title = "Comparison of Primary Diagnosis Conditions",
y = "Percentage of Visits to the ER") + geom_text(aes(label = scales::percent(mean_prec/100)),position = position_dodge(width = 0.9), vjust = -.5)
write.csv(tn_diag2, "tn_conditions.csv")
zips<-read_csv("zip_code_database.csv")
library(readr)
library(RSQLite)
# List tables in database
dbListTables(portaldb)
library(RSQLite)
# Reading in sqlite
portaldb <- dbConnect(SQLite(), 'discharges_phi')
# List tables in database
dbListTables(portaldb)
# Column names
dbListFields(portaldb, 'discharges_phi')
# Query description
# Where I selected all rows I wanted to keep since couldnt write a csv with all columns
res<-"SELECT * FROM discharges_phi WHERE Patient_Zip IN ('37301','37305', '37313', '37339', '37356','37365', '37366', '37374', '37375', '37383', '37387', '37397')"
# Creating query
ex<-dbGetQuery(portaldb, res)
#############################
# COL SCRUB
##############################
library(dplyr)
library(tidyverse)
df <- select (df,-c(Data_Yr, Bill_Number, Record_Seq_Num, Form_Type, Fed_Tax_SubID,
Fed_Tax_Num, Do_Not_Resuscitate, Accident_St, Rev_Cd1,
Rev_Cd2, Rev_Cd3, Rev_Cd4, Rev_Cd5, Rev_Cd6, Rev_Cd7, Rev_Cd8,
Rev_Cd9, Rev_Cd10, Rev_Cd11, Rev_Cd12, Rev_Cd13, Rev_Cd14, Rev_Cd15,
Rev_Cd16,Rev_Cd17, Rev_Cd18, Rev_Cd19, Rev_Cd20, Rev_Cd21, Rev_Cd22,
Rev_Cd23, HCPC_Rate_HIPPS_Rate_Cd1, HCPC_Rate_HIPPS_Rate_Cd2,
HCPC_Rate_HIPPS_Rate_Cd3, HCPC_Rate_HIPPS_Rate_Cd4, HCPC_Rate_HIPPS_Rate_Cd5,
HCPC_Rate_HIPPS_Rate_Cd6, HCPC_Rate_HIPPS_Rate_Cd7, HCPC_Rate_HIPPS_Rate_Cd8,
HCPC_Rate_HIPPS_Rate_Cd9, HCPC_Rate_HIPPS_Rate_Cd10, HCPC_Rate_HIPPS_Rate_Cd11,
HCPC_Rate_HIPPS_Rate_Cd12, HCPC_Rate_HIPPS_Rate_Cd13, HCPC_Rate_HIPPS_Rate_Cd14,
HCPC_Rate_HIPPS_Rate_Cd15, HCPC_Rate_HIPPS_Rate_Cd16, HCPC_Rate_HIPPS_Rate_Cd17,
HCPC_Rate_HIPPS_Rate_Cd18, HCPC_Rate_HIPPS_Rate_Cd19, HCPC_Rate_HIPPS_Rate_Cd20,
HCPC_Rate_HIPPS_Rate_Cd21, HCPC_Rate_HIPPS_Rate_Cd22, HCPC_Rate_HIPPS_Rate_Cd23,
Units_Service1, Units_Service2, Units_Service3, Units_Service4, Units_Service5,
Units_Service6, Units_Service7, Units_Service8, Units_Service9, Units_Service10,
Units_Service11, Units_Service12, Units_Service13, Units_Service14, Units_Service15,
Units_Service16, Units_Service17, Units_Service18, Units_Service19, Units_Service20,
Units_Service21, Units_Service22, Units_Service23, Tot_Chrg_by_Rev_Cd1,
Tot_Chrg_by_Rev_Cd2, Tot_Chrg_by_Rev_Cd3, Tot_Chrg_by_Rev_Cd4, Tot_Chrg_by_Rev_Cd5,
Tot_Chrg_by_Rev_Cd6, Tot_Chrg_by_Rev_Cd7, Tot_Chrg_by_Rev_Cd8, Tot_Chrg_by_Rev_Cd9,
Tot_Chrg_by_Rev_Cd10, Tot_Chrg_by_Rev_Cd11, Tot_Chrg_by_Rev_Cd12, Tot_Chrg_by_Rev_Cd13,
Tot_Chrg_by_Rev_Cd14, Tot_Chrg_by_Rev_Cd15, Tot_Chrg_by_Rev_Cd16, Tot_Chrg_by_Rev_Cd17,
Tot_Chrg_by_Rev_Cd18, Tot_Chrg_by_Rev_Cd19, Tot_Chrg_by_Rev_Cd20, Tot_Chrg_by_Rev_Cd21,
Tot_Chrg_by_Rev_Cd22, Tot_Chrg_by_Rev_Cd23, Non_Cvrd_Chrg_by_Rev_Cd1, Non_Cvrd_Chrg_by_Rev_Cd2,
Non_Cvrd_Chrg_by_Rev_Cd3, Non_Cvrd_Chrg_by_Rev_Cd4, Non_Cvrd_Chrg_by_Rev_Cd5, Non_Cvrd_Chrg_by_Rev_Cd6,
Non_Cvrd_Chrg_by_Rev_Cd7, Non_Cvrd_Chrg_by_Rev_Cd8, Non_Cvrd_Chrg_by_Rev_Cd9, Non_Cvrd_Chrg_by_Rev_Cd10,
Non_Cvrd_Chrg_by_Rev_Cd11, Non_Cvrd_Chrg_by_Rev_Cd12, Non_Cvrd_Chrg_by_Rev_Cd13, Non_Cvrd_Chrg_by_Rev_Cd14,
Non_Cvrd_Chrg_by_Rev_Cd15, Non_Cvrd_Chrg_by_Rev_Cd16, Non_Cvrd_Chrg_by_Rev_Cd17, Non_Cvrd_Chrg_by_Rev_Cd18,
Non_Cvrd_Chrg_by_Rev_Cd19, Non_Cvrd_Chrg_by_Rev_Cd20, Non_Cvrd_Chrg_by_Rev_Cd21, Non_Cvrd_Chrg_by_Rev_Cd22,
Non_Cvrd_Chrg_by_Rev_Cd23, Primary_Health_Plan_Id, Secondary_Health_Plan_Id, Tertiary_Health_Plan_Id,
National_Provider_Id, Dx_Px_Qualifier, Admit_Diag_Cd, POA1, POA2, POA3, POA4, POA5, POA6, POA7, POA8,
POA9, POA10, POA11, POA12, POA13, POA14, POA15, POA16, POA17, POA18, Prospect_Pay_Code,
Inpatient_Flag, ASTC_Flag, Obs_Unit_Flag, ER_Flag, Lithotripsy_Flag, PET_Flag, MRI_MRA_Flag,
Megavolt_Rad_Flag, CT_Flag, Fatal_Error_Flag, Bill_End, MUL, Record_Num1, Tot_Charges_Recorded,
Tot_Charges_Analysis, LOS, Record_Num2, DRG_Rank, Inpat_Record_Flag, ASTC_Record_Flag, Obs_23hr_Record_Flag,
CON_Flag, Cumulative_Record_Flag, Amount_Counter, Reportable_Flag, Hospital_Id_JAR, MS_DRG,
MS_DRG_4digit, HAC, CostWt, Admit_From_ED_Flag, Wrong_Claim, Tot_Charges_Summed, Admit_Diag_Cd,
Payer_A, Payer_B, Payer_C))
#############################
# COL SCRUB
##############################
library(dplyr)
library(tidyverse)
scp <- select (ex,-c(Data_Yr, Bill_Number, Record_Seq_Num, Form_Type, Fed_Tax_SubID,
Fed_Tax_Num, Do_Not_Resuscitate, Accident_St, Rev_Cd1,
Rev_Cd2, Rev_Cd3, Rev_Cd4, Rev_Cd5, Rev_Cd6, Rev_Cd7, Rev_Cd8,
Rev_Cd9, Rev_Cd10, Rev_Cd11, Rev_Cd12, Rev_Cd13, Rev_Cd14, Rev_Cd15,
Rev_Cd16,Rev_Cd17, Rev_Cd18, Rev_Cd19, Rev_Cd20, Rev_Cd21, Rev_Cd22,
Rev_Cd23, HCPC_Rate_HIPPS_Rate_Cd1, HCPC_Rate_HIPPS_Rate_Cd2,
HCPC_Rate_HIPPS_Rate_Cd3, HCPC_Rate_HIPPS_Rate_Cd4, HCPC_Rate_HIPPS_Rate_Cd5,
HCPC_Rate_HIPPS_Rate_Cd6, HCPC_Rate_HIPPS_Rate_Cd7, HCPC_Rate_HIPPS_Rate_Cd8,
HCPC_Rate_HIPPS_Rate_Cd9, HCPC_Rate_HIPPS_Rate_Cd10, HCPC_Rate_HIPPS_Rate_Cd11,
HCPC_Rate_HIPPS_Rate_Cd12, HCPC_Rate_HIPPS_Rate_Cd13, HCPC_Rate_HIPPS_Rate_Cd14,
HCPC_Rate_HIPPS_Rate_Cd15, HCPC_Rate_HIPPS_Rate_Cd16, HCPC_Rate_HIPPS_Rate_Cd17,
HCPC_Rate_HIPPS_Rate_Cd18, HCPC_Rate_HIPPS_Rate_Cd19, HCPC_Rate_HIPPS_Rate_Cd20,
HCPC_Rate_HIPPS_Rate_Cd21, HCPC_Rate_HIPPS_Rate_Cd22, HCPC_Rate_HIPPS_Rate_Cd23,
Units_Service1, Units_Service2, Units_Service3, Units_Service4, Units_Service5,
Units_Service6, Units_Service7, Units_Service8, Units_Service9, Units_Service10,
Units_Service11, Units_Service12, Units_Service13, Units_Service14, Units_Service15,
Units_Service16, Units_Service17, Units_Service18, Units_Service19, Units_Service20,
Units_Service21, Units_Service22, Units_Service23, Tot_Chrg_by_Rev_Cd1,
Tot_Chrg_by_Rev_Cd2, Tot_Chrg_by_Rev_Cd3, Tot_Chrg_by_Rev_Cd4, Tot_Chrg_by_Rev_Cd5,
Tot_Chrg_by_Rev_Cd6, Tot_Chrg_by_Rev_Cd7, Tot_Chrg_by_Rev_Cd8, Tot_Chrg_by_Rev_Cd9,
Tot_Chrg_by_Rev_Cd10, Tot_Chrg_by_Rev_Cd11, Tot_Chrg_by_Rev_Cd12, Tot_Chrg_by_Rev_Cd13,
Tot_Chrg_by_Rev_Cd14, Tot_Chrg_by_Rev_Cd15, Tot_Chrg_by_Rev_Cd16, Tot_Chrg_by_Rev_Cd17,
Tot_Chrg_by_Rev_Cd18, Tot_Chrg_by_Rev_Cd19, Tot_Chrg_by_Rev_Cd20, Tot_Chrg_by_Rev_Cd21,
Tot_Chrg_by_Rev_Cd22, Tot_Chrg_by_Rev_Cd23, Non_Cvrd_Chrg_by_Rev_Cd1, Non_Cvrd_Chrg_by_Rev_Cd2,
Non_Cvrd_Chrg_by_Rev_Cd3, Non_Cvrd_Chrg_by_Rev_Cd4, Non_Cvrd_Chrg_by_Rev_Cd5, Non_Cvrd_Chrg_by_Rev_Cd6,
Non_Cvrd_Chrg_by_Rev_Cd7, Non_Cvrd_Chrg_by_Rev_Cd8, Non_Cvrd_Chrg_by_Rev_Cd9, Non_Cvrd_Chrg_by_Rev_Cd10,
Non_Cvrd_Chrg_by_Rev_Cd11, Non_Cvrd_Chrg_by_Rev_Cd12, Non_Cvrd_Chrg_by_Rev_Cd13, Non_Cvrd_Chrg_by_Rev_Cd14,
Non_Cvrd_Chrg_by_Rev_Cd15, Non_Cvrd_Chrg_by_Rev_Cd16, Non_Cvrd_Chrg_by_Rev_Cd17, Non_Cvrd_Chrg_by_Rev_Cd18,
Non_Cvrd_Chrg_by_Rev_Cd19, Non_Cvrd_Chrg_by_Rev_Cd20, Non_Cvrd_Chrg_by_Rev_Cd21, Non_Cvrd_Chrg_by_Rev_Cd22,
Non_Cvrd_Chrg_by_Rev_Cd23, Primary_Health_Plan_Id, Secondary_Health_Plan_Id, Tertiary_Health_Plan_Id,
National_Provider_Id, Dx_Px_Qualifier, Admit_Diag_Cd, POA1, POA2, POA3, POA4, POA5, POA6, POA7, POA8,
POA9, POA10, POA11, POA12, POA13, POA14, POA15, POA16, POA17, POA18, Prospect_Pay_Code,
Inpatient_Flag, ASTC_Flag, Obs_Unit_Flag, ER_Flag, Lithotripsy_Flag, PET_Flag, MRI_MRA_Flag,
Megavolt_Rad_Flag, CT_Flag, Fatal_Error_Flag, Bill_End, MUL, Record_Num1, Tot_Charges_Recorded,
Tot_Charges_Analysis, LOS, Record_Num2, DRG_Rank, Inpat_Record_Flag, ASTC_Record_Flag, Obs_23hr_Record_Flag,
CON_Flag, Cumulative_Record_Flag, Amount_Counter, Reportable_Flag, Hospital_Id_JAR, MS_DRG,
MS_DRG_4digit, HAC, CostWt, Admit_From_ED_Flag, Wrong_Claim, Tot_Charges_Summed, Admit_Diag_Cd,
Payer_A, Payer_B, Payer_C))
#Batch 2
scp <- select (scp,-c(Attend_MD, Attend_MD_TN_Lic_Num, Attend_MD_UPIN,
Operate_MD, Other_Prov_MD1, Other_Prov_MD2, Other_Prov_MD_TN_Lic_Num1,
Other_Prov_MD_TN_Lic_Num2, Other_Prov_MD_UPIN1, Other_Prov_MD_UPIN2,
Primary_Insr_Group_Num, Secondary_Insr_Group_Num, Tertiary_Insr_Group_Num,
Infant_Age_Months))
#Batch 3
scp <- select (scp,-c(Accident_Code, Operate_MD_TN_Lic_Num,Operate_MD_UPIN))
# Remove Columns Cont.
scp <- select(scp, -starts_with(c('Ecode', 'E_POA', 'Proc')))
# Inital CSV FILE (included removal of admit_hr col)
write.csv(scp, "scp_data2", row.names = TRUE)
install.packages("flexdashboard")
install.packages("shiny")
install.packages("DT")
install.packages("plotly")
install.packages("leaflet")
install.packages("leaflet.extras")
install.packages("gsheet")
install.packages("rgdal")
install.packages("raster")
install.packages("tigris")
getwd()
setwd("~/syndemic")
setwd("/Users/erteam/Desktop/Syndemic Project/syndemic")
?renderPlot
install.packages("patchwork")
library(patchwork)
library(flexdashboard)
library(shiny)
library(tidyverse)
library(DT)
library(plotly)
library(leaflet)
library(leaflet.extras)
library(gsheet)
library(rgdal)
library(raster)
library(tigris)
library(RColorBrewer)
library(ggVennDiagram)
library(forcats)
library(lubridate)
library(patchwork)
setwd("/Users/erteam/Desktop/Syndemic Project/syndemic")
# Reading in data of locations of SEP
locations<-gsheet2tbl("https://docs.google.com/spreadsheets/d/1sb4P_7-UkcpkmENZ_DpMI45wRY7oItIFbv-0suLmz7U/edit?usp=sharing")
# Creating a column named label
locations<-locations %>% mutate(label = paste0("Name : ",name,"<br/>"," Address :",address,"<br/>","Phone :",phone,"<br/>" ) %>% lapply(htmltools::HTML))
# Reading in master data
masterdata<-read_csv("masterdataphi.csv")
# Reading in population by county data
popbycounty<-read_csv("SDC_TN_PL20_CountyPopChange.csv")
popbycounty<-popbycounty %>% dplyr::select(County,`Population 2020`) %>% rename(county = County) %>% mutate(county = paste(county,"County"))
# Reading in data of zip codes and their county name
zips<-read.csv("countybyid.csv")
# Merging master data with county by ids
masterdata<-inner_join(zips,masterdata, by = "...1" ) %>% filter(state == "TN")
masterdata<-inner_join(popbycounty,masterdata, by = "county")
# Reading in spatial polygon data for map
s <- shapefile("/Users/erteam/Desktop/Syndemic Project/tl_2021_us_county")
boundaries <-subset(s, s@data$STATEFP == "47")
# Making color pallet based on SUD in county
paldata<-masterdata %>% filter(sud) %>% group_by(county) %>% summarise(total = n())
# Adding county total to spatial data frame
boundaries<-geo_join(boundaries, paldata, by_sp ="NAMELSAD" , by_df ="county")
boundaries<-geo_join(boundaries, popbycounty, by_sp = "NAMELSAD", by_df ="county")
boundaries@data<-boundaries@data %>% mutate(percap = (total/Population.2020)*100)
pull(boundaries@data$percap) %>% mean() %>% print
mean(boundaries@data$percap)
?subplot()
?layout()
mean(boundaries@data$percap)
getwd()
