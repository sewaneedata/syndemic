df$Diag13,
df$Diag14,
df$Diag15,
df$Diag16,
df$Diag17,
df$Diag18
)
ICD_Filtered[1,2]
keep<-(ICD_Filtered[i,1])
ICD_Filtered[1,1]
ICD_Filtered[2,1]
keepall<-c()
for(i in 1:492){
keep<-(ICD_Filtered[i,1],train1$Diag1)
keepall<-keep
}
keepall<-c()
for(i in 1:492){
keep<-grep(ICD_Filtered[i,1],train1$Diag1)
keepall<-keep
}
for(i in 1:492){
keep<-grep(ICD_Filtered[i,1],train$Diag1)
keepall<-keep
}
train1<-train1[keep,]
train<-train[keep,]
train<-train[keep,]
View(train)
keepall<-c()
for(i in 1:492){
keep<-grep(ICD_Filtered[i,1],train$Diag1)
keepall<-keep+keepall
}
train<-train[keep,]
#Filters out unnecessary columns
train <-df %>% select(
-Type_Bill,
-Fed_Tax_SubID,
-Fed_Tax_Num,
-Admission_Type,
-Admission_Source,
-Do_Not_Resuscitate,
-Accident_St,
-starts_with("Units_Service"), #[1:18]
-Primary_Health_Plan_Id,
-Secondary_Health_Plan_Id,
-Tertiary_Health_Plan_Id,
-Primary_Patient_Rel_Insr,
-Secondary_Patient_Rel_Insr,
-Tertiary_Patient_Rel_Insr,
-Dx_Px_Qualifier,
-starts_with("POA"), #[1:18]
-starts_with("Patient_Reason_Visit"),#[1:3],
-Prospect_Pay_Code,
-starts_with("Ecode"), #[1:3]
-starts_with("E_POA"), #[1:3]
-Type_ER_Visit,
-Outcome_ER_Visit,
-Inpatient_Flag,
-ER_Flag,
-PET_Flag,
-ASTC_Flag,
-Lithotripsy_Flag,
-MRI_MRA_Flag,
-Megavolt_Rad_Flag,
-CT_Flag,
-Fatal_Error_Flag,
-starts_with("Record_Num"), #[1:2]
-Bill_End,
-MUL,
-Patient_ID,
-TN_Co_Res,
-Payer_A,
-Payer_B,
-Payer_C,
-Amount_Counter,
-Race,
-LOS,
-DRG_Rank,
-Inpat_Record_Flag,
-ER_Record_Flag,
-ASTC_Record_Flag,
-Obs_23hr_Record_Flag,
-CON_Flag,
-Cumulative_Record_Flag,
-Reportable_Flag,
-TN_Co_Unk,
-Processing_Period,
-MS_MDC,
-MS_DRG,
-MS_DRG_4digit,
-HAC,
-Admit_From_ED_Flag,
-Wrong_Claim
)
keepall<-c()
for(i in 1:492){
keep<-grep(ICD_Filtered[i,1],train$Diag1)
keepall<-keep+keepall
}
train<-train[keep,]
View(train)
keep<-grep(ICD_Filtered[i,1],train$Diag1)
#Filters out unnecessary columns
train <-df %>% select(
-Type_Bill,
-Fed_Tax_SubID,
-Fed_Tax_Num,
-Admission_Type,
-Admission_Source,
-Do_Not_Resuscitate,
-Accident_St,
-starts_with("Units_Service"), #[1:18]
-Primary_Health_Plan_Id,
-Secondary_Health_Plan_Id,
-Tertiary_Health_Plan_Id,
-Primary_Patient_Rel_Insr,
-Secondary_Patient_Rel_Insr,
-Tertiary_Patient_Rel_Insr,
-Dx_Px_Qualifier,
-starts_with("POA"), #[1:18]
-starts_with("Patient_Reason_Visit"),#[1:3],
-Prospect_Pay_Code,
-starts_with("Ecode"), #[1:3]
-starts_with("E_POA"), #[1:3]
-Type_ER_Visit,
-Outcome_ER_Visit,
-Inpatient_Flag,
-ER_Flag,
-PET_Flag,
-ASTC_Flag,
-Lithotripsy_Flag,
-MRI_MRA_Flag,
-Megavolt_Rad_Flag,
-CT_Flag,
-Fatal_Error_Flag,
-starts_with("Record_Num"), #[1:2]
-Bill_End,
-MUL,
-Patient_ID,
-TN_Co_Res,
-Payer_A,
-Payer_B,
-Payer_C,
-Amount_Counter,
-Race,
-LOS,
-DRG_Rank,
-Inpat_Record_Flag,
-ER_Record_Flag,
-ASTC_Record_Flag,
-Obs_23hr_Record_Flag,
-CON_Flag,
-Cumulative_Record_Flag,
-Reportable_Flag,
-TN_Co_Unk,
-Processing_Period,
-MS_MDC,
-MS_DRG,
-MS_DRG_4digit,
-HAC,
-Admit_From_ED_Flag,
-Wrong_Claim
)
keep<-grep(ICD_Filtered[i,1],train$Diag1)
keep<-grep(as.character(ICD_Filtered[i,1]),train$Diag1)
ICD_Filtered[1,1]
ICD_Filtered[2,1]
ICD_Filtered[3,1]
library(gsheet)
# Reading in doc of IDC10codes
codes<-gsheet2tbl("https://docs.google.com/document/d/1e53UDsuHZwQAyVc8vAG69Al_tjXbnv6C/edit?usp=sharing")
# Reading in doc of IDC10codes
codes<-gsheet2tbl("https://docs.google.com/document/d/1e53UDsuHZwQAyVc8vAG69Al_tjXbnv6C/edit")
# Reading in doc of IDC10codes
codes<-gsheet2tbl("https://docs.google.com/document/d/1e53UDsuHZwQAyVc8vAG69Al_tjXbnv6C/edit?usp=sharing&ouid=101883700449258151197&rtpof=true&sd=true")
# Reading in doc of IDC10codes
codes<-gsheet2tbl("C:\Users\alane\Downloads\Supplementary Tables 1 and 2.docx")
# Reading in doc of IDC10codes
codes<-gsheet2tbl("C:/Users/alane/Downloads/Supplementary Tables 1 and 2.docx")
# Reading in doc of IDC10codes
codes<-gsheet::gsheet2tbl("C:/Users/alane/Downloads/Supplementary Tables 1 and 2.docx")
# Reading in doc of IDC10codes
codes<-gsheet::gsheet2tbl("https://docs.google.com/document/d/1e53UDsuHZwQAyVc8vAG69Al_tjXbnv6C/edit")
install.packages("officer")
library(officer)
library(tigris)
options(tigris_use_cache = TRUE)
temp <- tigris::zctas(starts_with = 370:385)
tnz <-  as(temp, 'Spatial')
leaflet() %>%
addProviderTiles(providers$OpenStreetMap) %>%
addMarkers(data = locations, label = locations$address ) %>%
addPolygons(tnz)
library(leaflet)
leaflet() %>%
addProviderTiles(providers$OpenStreetMap) %>%
addMarkers(data = locations, label = locations$address ) %>%
addPolygons(tnz)
leaflet() %>%
addProviderTiles(providers$OpenStreetMap) %>%
addMarkers(data = locations, label = locations$address ) %>%
addPolygons(tnz)
leaflet() %>%
addProviderTiles(providers$OpenStreetMap) %>%
addMarkers(data = locations, label = locations$address )
# Map of SEP trial run
locations<-gsheet2tbl("https://docs.google.com/spreadsheets/d/1sb4P_7-UkcpkmENZ_DpMI45wRY7oItIFbv-0suLmz7U/edit?usp=sharing")
# Map of SEP trial run
locations<-gsheet2tbl("https://docs.google.com/spreadsheets/d/1sb4P_7-UkcpkmENZ_DpMI45wRY7oItIFbv-0suLmz7U/edit?usp=sharing")
######################## Libraries and Data sets ####################
# June 27rd 2022 | Start of exploration!
#####################################################################
library(tidyverse)
library(gsheet)
library(ggthemes)
library(leaflet)
library(leaflet.extras)
# Map of SEP trial run
locations<-gsheet2tbl("https://docs.google.com/spreadsheets/d/1sb4P_7-UkcpkmENZ_DpMI45wRY7oItIFbv-0suLmz7U/edit?usp=sharing")
library(tigris)
options(tigris_use_cache = TRUE)
temp <- tigris::zctas(starts_with = 370:385)
tnz <-  as(temp, 'Spatial')
leaflet() %>%
addProviderTiles(providers$OpenStreetMap) %>%
addMarkers(data = locations, label = locations$address )
leaflet() %>%
addProviderTiles(providers$OpenStreetMap) %>%
addMarkers(data = locations, label = locations$address ) %>%
addPolygons(tnz)
plot(tnz)
library(dplyr)
library(readr)
library(ggplot2)
library(leaflet)
library(rgdal)
library(raster)
library(sp)
library(rasterVis)
library(htmltools)
library(RColorBrewer)
library(geosphere)
library(tigris)
options(tigris_use_cache = TRUE)
temp <- tigris::zctas(starts_with = 370:385)
tnz <-  as(temp, 'Spatial')
leaflet() %>%
addProviderTiles(providers$OpenStreetMap) %>%
addMarkers(data = locations, label = locations$address )
plot(tnz)
leaflet() %>%
addProviderTiles(providers$OpenStreetMap) %>%
addMarkers(data = locations, label = locations$address ) %>%
addPolygons(tnz)
leaflet() %>%
addProviderTiles(providers$OpenStreetMap) %>%
addMarkers(data = locations, label = locations$address )
plot(tnz)
leaflet() %>%
addProviderTiles(providers$OpenStreetMap) %>%
addMarkers(data = locations, label = locations$address )
leaflet() %>%
addProviderTiles(providers$OpenStreetMap) %>%
addMarkers(data = locations, label = locations$address )
leaflet() %>%
addProviderTiles(providers$OpenStreetMap) %>%
addMarkers(data = locations, label = locations$address ) %>%
addPolylines(tnz)
install.packages("ggmap")
library(ggmap)
gmap('Tennessee')
qmap('Tennessee')
qmap('Liverpool')
qmap('Tennessee')
?register_google
ggmap_show_api_key()
showing_key()
library(shiny)
library(shinydashboard)
library(shinythemes)
runApp('D:/DataLab/syndemic/Dashboard')
valueBox("# of people in with SUD in selected zipcodes",
value = df_map() %>% filter(sud) %>% nrow(),
icon = "fa-user",
color = "darkyellow")
# New GIS STUFF------------------------------------------------------
library(tigris)
options(tigris_use_cache = TRUE)
temp <- tigris::zctas(starts_with = 370:385)
View(temp)
temp <- tigris::zctas(cb = TRUE,starts_with = 370:385)
View(temp)
library(tigris)
options(tigris_use_cache = TRUE)
temp <- tigris::zctas(cb = TRUE,starts_with = 370:385)
?addPolygon
?addPolygons
library(tigris)
options(tigris_use_cache = TRUE)
temp <- tigris::zctas(cb = TRUE,starts_with = 370:385)
View(temp)
View(temp[[8]][[40]])
library(tigris)
options(tigris_use_cache = TRUE)
temp <- tigris::zctas(starts_with = 370:385)
View(temp)
install.packages("maps")
library(maps)
library(leaflet)
library(leaflet.extras)
leaflet(locations) %>%
addProviderTiles(providers$OpenStreetMap) %>%
addMarkers(label = ~label) %>%
addControl()
install.packages("rgdal")
install.packages("rgdal")
library("rgdal")
locations<-gsheet2tbl("https://docs.google.com/spreadsheets/d/1sb4P_7-UkcpkmENZ_DpMI45wRY7oItIFbv-0suLmz7U/edit?usp=sharing")
library("gsheet")
library("rgdal")
locations<-gsheet2tbl("https://docs.google.com/spreadsheets/d/1sb4P_7-UkcpkmENZ_DpMI45wRY7oItIFbv-0suLmz7U/edit?usp=sharing")
locations<-locations %>% mutate(label = paste(name,address,phone, sep = "\n"))
leaflet(locations) %>%
addProviderTiles(providers$OpenStreetMap) %>%
addMarkers(label = ~label)
library(dplyr)
locations<-gsheet2tbl("https://docs.google.com/spreadsheets/d/1sb4P_7-UkcpkmENZ_DpMI45wRY7oItIFbv-0suLmz7U/edit?usp=sharing")
locations<-locations %>% mutate(label = paste(name,address,phone, sep = "\n"))
leaflet(locations) %>%
addProviderTiles(providers$OpenStreetMap) %>%
addMarkers(label = ~label)
library(leaflet)
locations<-gsheet2tbl("https://docs.google.com/spreadsheets/d/1sb4P_7-UkcpkmENZ_DpMI45wRY7oItIFbv-0suLmz7U/edit?usp=sharing")
locations<-locations %>% mutate(label = paste(name,address,phone, sep = "\n"))
leaflet(locations) %>%
addProviderTiles(providers$OpenStreetMap) %>%
addMarkers(label = ~label)
getwd()
boundaries <- rgdal::readOGR(dsn = "../syndemic",
layer = "Counties_and_Unitary_Authorities_(December_2016)_Boundaries")
boundaries <- rgdal::readOGR(dsn = "../syndemic",
layer = "tn_counties.shp")
boundaries <- rgdal::readOGR(dsn = "D:/DataLab/syndemic",
layer = "tn_counties.shp")
boundaries <- rgdal::readOGR(dsn = "D:/DataLab/syndemic",
layer = "tn_counties")
boundaries <- rgdal::readOGR(dsn = "D:/DataLab/syndemic",
layer = "tn_counties")
boundaries <- rgdal::readOGR(dsn = "D:/DataLab/syndemic",
layer = "tn_counties")
boundaries <- rgdal::readOGR("D:/DataLab/syndemic/tn_counties.shp")
boundaries <- rgdal::readOGR("D:/DataLab/syndemic/tn_counties")
library(raster)
boundaries <- shapefile("D:/DataLab/syndemic/tn_counties.shp")
boundaries <- shapefile("D:/DataLab/syndemic/tn_counties.shx")
leaflet(locations) %>%
addProviderTiles(providers$OpenStreetMap) %>%
addMarkers(label = ~label) %>%
addPolygons(data = boundaries,
color = "#9A77C7")
boundaries@data
View(boundaries)
boundaries <-rgdal::readOGR(dsn = "D:/DataLab/syndemic",
layer = "tn_counties")
leaflet(locations) %>%
addProviderTiles(providers$OpenStreetMap) %>%
addMarkers(label = ~label) %>%
addPolygons(data = boundareis,
color = "#9A77C7")
leaflet(locations) %>%
addProviderTiles(providers$OpenStreetMap) %>%
addMarkers(label = ~label) %>%
addPolygons(data = boundaries,
color = "#9A77C7")
View(boundaries)
boundaries <-rgdal::readOGR(dsn = "D:/DataLab/syndemic",
layer = "tncounties")
boundaries <-rgdal::readOGR(dsn = "D:/DataLab/syndemic",
layer = "tncounty")
leaflet(locations) %>%
addProviderTiles(providers$OpenStreetMap) %>%
addMarkers(label = ~label) %>%
addPolygons(data = boundaries,
color = "#9A77C7")
View(boundaries)
plot(boundaries)
locations<-gsheet2tbl("https://docs.google.com/spreadsheets/d/1sb4P_7-UkcpkmENZ_DpMI45wRY7oItIFbv-0suLmz7U/edit?usp=sharing")
locations<-locations %>% mutate(label = paste(name,address,phone, sep = "\n"))
boundaries <-rgdal::readOGR(dsn = "D:/DataLab/syndemic",
layer = "tncounty")
leaflet(locations) %>%
addProviderTiles(providers$OpenStreetMap) %>%
addMarkers(label = ~label) %>%
addPolygons(data = boundaries,
color = "#9A77C7")
boundaries <-rgdal::readOGR(dsn = "D:/DataLab/syndemic",
layer = "tl_2016_47_cousub")
leaflet(locations) %>%
addProviderTiles(providers$OpenStreetMap) %>%
addMarkers(label = ~label) %>%
addPolygons(data = boundaries,
color = "#9A77C7")
# Reading in spatial polygon data for map
s <- shapefile("D:/DataLab/syndemic/tl_2021_us_county")
library(raster)
# Reading in spatial polygon data for map
s <- shapefile("D:/DataLab/syndemic/tl_2021_us_county")
library(flexdashboard)
library(shiny)
library(tidyverse)
library(DT)
library(plotly)
library(leaflet)
library(leaflet.extras)
library(gsheet)
library(rgdal)
library(raster)
library(tigris)
library(RColorBrewer)
library(ggVennDiagram)
library(forcats)
library(lubridate)
pdf(NULL)
setwd("D:/DataLab/syndemic")
# Reading in master data
masterdata<-read_csv("masterdata.csv")
# Reading in spatial polygon data for map
s <- shapefile("D:/DataLab/tl_2021_us_county")
boundaries <-subset(s, s@data$STATEFP == "47")
View(boundaries)
# Adding county total to spatial data frame
boundaries<-geo_join(boundaries, paldata, by_sp ="NAMELSAD" , by_df ="county")
# Making color pallet based on SUD in county
paldata<-masterdata %>% filter(sud) %>% group_by(county) %>% summarise(total = n())
# Reading in population by county data
popbycounty<-read_csv("SDC_TN_PL20_CountyPopChange.csv")
popbycounty<-popbycounty %>% dplyr::select(County,`Population 2020`) %>% rename(county = County) %>% mutate(county = paste(county,"County"))
# Reading in data of zip codes and their county name
zips<-read.csv("countybyid.csv")
# Merging master data with county by ids
masterdata<-inner_join(zips,masterdata, by = "...1" ) %>% filter(state == "TN")
masterdata<-inner_join(popbycounty,masterdata, by = "county")
# Reading in spatial polygon data for map
s <- shapefile("D:/DataLab/tl_2021_us_county")
boundaries <-subset(s, s@data$STATEFP == "47")
# Making color pallet based on SUD in county
paldata<-masterdata %>% filter(sud) %>% group_by(county) %>% summarise(total = n())
# Adding county total to spatial data frame
boundaries<-geo_join(boundaries, paldata, by_sp ="NAMELSAD" , by_df ="county")
boundaries<-geo_join(boundaries, popbycounty, by_sp = "NAME", by_df ="county")
boundaries@data<-boundaries@data %>% mutate(percap = total/Population.202)
boundaries@data<-boundaries@data %>% mutate(percap = total/Population.2020)
View(boundaries)
library(flexdashboard)
library(shiny)
library(tidyverse)
library(DT)
library(plotly)
library(leaflet)
library(leaflet.extras)
library(gsheet)
library(rgdal)
library(raster)
library(tigris)
library(RColorBrewer)
library(ggVennDiagram)
library(forcats)
library(lubridate)
library(flexdashboard)
library(shiny)
library(tidyverse)
library(DT)
library(plotly)
library(leaflet)
library(leaflet.extras)
library(gsheet)
library(rgdal)
library(raster)
library(tigris)
library(RColorBrewer)
library(ggVennDiagram)
library(forcats)
library(lubridate)
pdf(NULL)
setwd("D:/DataLab/syndemic")
# Reading in data of locations of SEP
locations<-gsheet2tbl("https://docs.google.com/spreadsheets/d/1sb4P_7-UkcpkmENZ_DpMI45wRY7oItIFbv-0suLmz7U/edit?usp=sharing")
# Creating a column named label
locations<-locations %>% mutate(label = paste0("Name : ",name,"<br/>"," Address :",address,"<br/>","Phone :",phone,"<br/>" ) %>% lapply(htmltools::HTML))
# Reading in master data
masterdata<-read_csv("masterdata.csv")
# Reading in population by county data
popbycounty<-read_csv("SDC_TN_PL20_CountyPopChange.csv")
popbycounty<-popbycounty %>% dplyr::select(County,`Population 2020`) %>% rename(county = County) %>% mutate(county = paste(county,"County"))
# Reading in data of zip codes and their county name
zips<-read.csv("countybyid.csv")
# Merging master data with county by ids
masterdata<-inner_join(zips,masterdata, by = "...1" ) %>% filter(state == "TN")
masterdata<-inner_join(popbycounty,masterdata, by = "county")
# Reading in spatial polygon data for map
s <- shapefile("D:/DataLab/tl_2021_us_county")
boundaries <-subset(s, s@data$STATEFP == "47")
# Making color pallet based on SUD in county
paldata<-masterdata %>% filter(sud) %>% group_by(county) %>% summarise(total = n())
# Adding county total to spatial data frame
boundaries<-geo_join(boundaries, paldata, by_sp ="NAMELSAD" , by_df ="county")
View(boundaries)
boundaries<-geo_join(boundaries, popbycounty, by_sp = "NAME", by_df ="county")
View(boundaries)
View(popbycounty)
