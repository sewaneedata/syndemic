<<<<<<< HEAD
df$Diag2,
df$Diag3,
df$Diag4,
df$Diag5,
df$Diag6,
df$Diag7,
df$Diag8,
df$Diag9,
df$Diag10,
df$Diag11,
df$Diag12,
df$Diag13,
df$Diag14,
df$Diag15,
df$Diag16,
df$Diag17,
df$Diag18,
)
View(df)
df <- df$Diag1 %>%
paste(df$Diag1,
df$Diag2,
df$Diag3,
df$Diag4,
df$Diag5,
df$Diag6,
df$Diag7,
df$Diag8,
df$Diag9,
df$Diag10,
df$Diag11,
df$Diag12,
df$Diag13,
df$Diag14,
df$Diag15,
df$Diag16,
df$Diag17,
df$Diag18,
)
df <- df$Diag1 %>%
paste(df$Diag1,
df$Diag2,
df$Diag3,
df$Diag4,
df$Diag5,
df$Diag6,
df$Diag7,
df$Diag8,
df$Diag9,
df$Diag10,
df$Diag11,
df$Diag12,
df$Diag13,
df$Diag14,
df$Diag15,
df$Diag16,
df$Diag17,
df$Diag18
)
df <- read_csv("D:/DataLab/DataLab_2022/jacobzip.csv")
#Filters out unnecessary columns
train <-df %>% select(
-Type_Bill,
-Fed_Tax_SubID,
-Fed_Tax_Num,
-Admission_Type,
-Admission_Source,
-Do_Not_Resuscitate,
-Accident_St,
-starts_with("Units_Service"), #[1:18]
-Primary_Health_Plan_Id,
-Secondary_Health_Plan_Id,
-Tertiary_Health_Plan_Id,
-Primary_Patient_Rel_Insr,
-Secondary_Patient_Rel_Insr,
-Tertiary_Patient_Rel_Insr,
-Dx_Px_Qualifier,
-starts_with("POA"), #[1:18]
-starts_with("Patient_Reason_Visit"),#[1:3],
-Prospect_Pay_Code,
-starts_with("Ecode"), #[1:3]
-starts_with("E_POA"), #[1:3]
-Type_ER_Visit,
-Outcome_ER_Visit,
-Inpatient_Flag,
-ER_Flag,
=======
<<<<<<< HEAD
caption = 'End the Syndemic | DataLab 2022',
x = 'Primary Payer',
y = 'Cost Paid (in billions of US dollars)',
subtitle = 'In 2019') +
scale_fill_manual(md2, values = c('black', 'red'),
labels = c('Privately Funded', 'Government Funded', '', '', ''),
name = 'Color Legend:') +
theme(legend.position = 'bottom')
#Plots government vs private total funding for syndemic patients
ggplot(data = md_big_gov,
aes(y = total/100000000000,
x = gov,
fill = gov ) ) +
geom_col() +
labs(title = 'Costs Paid by the Government vs Commercial Providers',
caption = 'End the Syndemic | DataLab 2022',
x = 'Primary Payer',
y = 'Cost Paid (in billions of US dollars)',
subtitle = 'In 2019') +
scale_fill_manual(md2, values = c('black', 'red')) +
theme(legend.position = '0') +
theme(axis.text.x = element_text(angle = 90))
#Plots the top 5 primary payers by their costs paid for syndemic patients
ggplot(data = md2,
aes(y = total/100000000000,
x = reorder(Primary_Payer_Class_Cd, -total),
fill = gov ) ) +
geom_col() +
labs(title = 'Costs Paid by Top Payers',
caption = 'End the Syndemic | DataLab 2022',
x = 'Primary Payer',
y = 'Cost Paid (in billions of US dollars)',
subtitle = 'In 2019') +
scale_fill_manual(md2, values = c('black', 'red'),
labels = c('Privately Funded', 'Government Funded', '', '', ''),
name = 'Color Legend:') +
theme(legend.position = 'bottom') +
theme(axis.text.x = element_text(angle = 90))
#Plots the top 5 primary payers by their costs paid for syndemic patients
ggplot(data = md2,
aes(y = total/100000000000,
x = reorder(Primary_Payer_Class_Cd, -total),
fill = gov ) ) +
geom_col() +
labs(title = 'Costs Paid by Top Payers',
caption = 'End the Syndemic | DataLab 2022',
x = 'Primary Payer',
y = 'Cost Paid (in billions of US dollars)',
subtitle = 'In 2019') +
scale_fill_manual(md2, values = c('black', 'red'),
labels = c('Privately Funded', 'Government Funded', '', '', ''),
name = 'Color Legend:') +
theme(legend.position = 'bottom')
theme(text = element_text(size=20)
theme(legend.position = 'bottom') +
#Plots the top 5 primary payers by their costs paid for syndemic patients
ggplot(data = md2,
aes(y = total/100000000000,
x = reorder(Primary_Payer_Class_Cd, -total),
fill = gov ) ) +
geom_col() +
labs(title = 'Costs Paid by Top Payers',
caption = 'End the Syndemic | DataLab 2022',
x = 'Primary Payer',
y = 'Cost Paid (in billions of US dollars)',
subtitle = 'In 2019') +
scale_fill_manual(md2, values = c('black', 'red'),
labels = c('Privately Funded', 'Government Funded', '', '', ''),
name = 'Color Legend:') +
theme(legend.position = 'bottom') +
theme(text = element_text(size=20))
#Plots the top 5 primary payers by their costs paid for syndemic patients
ggplot(data = md2,
aes(y = total/100000000000,
x = reorder(Primary_Payer_Class_Cd, -total),
fill = gov ) ) +
geom_col() +
labs(title = 'Costs Paid by Top Payers',
caption = 'End the Syndemic | DataLab 2022',
x = 'Primary Payer',
y = 'Cost Paid (in billions of US dollars)',
subtitle = 'In 2019') +
scale_fill_manual(md2, values = c('black', 'red'),
labels = c('Privately Funded', 'Government Funded', '', '', ''),
name = 'Color Legend:') +
theme(legend.position = 'bottom') +
theme(text = element_text(size=2))
#Plots the top 5 primary payers by their costs paid for syndemic patients
ggplot(data = md2,
aes(y = total/100000000000,
x = reorder(Primary_Payer_Class_Cd, -total),
fill = gov ) ) +
geom_col() +
labs(title = 'Costs Paid by Top Payers',
caption = 'End the Syndemic | DataLab 2022',
x = 'Primary Payer',
y = 'Cost Paid (in billions of US dollars)',
subtitle = 'In 2019') +
scale_fill_manual(md2, values = c('black', 'red'),
labels = c('Privately Funded', 'Government Funded', '', '', ''),
name = 'Color Legend:') +
theme(legend.position = 'bottom') +
theme(text = element_text(size=10))
#Plots the top 5 primary payers by their costs paid for syndemic patients
ggplot(data = md2,
aes(y = total/100000000000,
x = reorder(Primary_Payer_Class_Cd, -total),
fill = gov ) ) +
geom_col() +
labs(title = 'Costs Paid by Top Payers',
caption = 'End the Syndemic | DataLab 2022',
x = 'Primary Payer',
y = 'Cost Paid (in billions of US dollars)',
subtitle = 'In 2019') +
scale_fill_manual(md2, values = c('black', 'red'),
labels = c('Privately Funded', 'Government Funded', '', '', ''),
name = 'Color Legend:') +
theme(legend.position = 'bottom')
#Plots the top 5 primary payers by their costs paid for syndemic patients
ggplot(data = md2,
aes(y = total/100000000000,
x = reorder(Primary_Payer_Class_Cd, -total),
fill = gov ) ) +
geom_col() +
labs(title = 'Costs Paid by Top Payers',
caption = 'End the Syndemic | DataLab 2022',
x = 'Primary Payer',
y = 'Cost Paid (in billions of US dollars)',
subtitle = 'In 2019') +
scale_fill_manual(md2, values = c('black', 'red'),
labels = c('Privately Funded', 'Government Funded', '', '', ''),
name = 'Color Legend:') +
theme(legend.position = 'bottom') +
par(mar = c(2, 2, 2, 2))
#Plots the top 5 primary payers by their costs paid for syndemic patients
ggplot(data = md2,
aes(y = total/100000000000,
x = reorder(Primary_Payer_Class_Cd, -total),
fill = gov ) ) +
geom_col() +
labs(title = 'Costs Paid by Top Payers',
caption = 'End the Syndemic | DataLab 2022',
x = 'Primary Payer',
y = 'Cost Paid (in billions of US dollars)',
subtitle = 'In 2019') +
scale_fill_manual(md2, values = c('black', 'red'),
labels = c('Privately Funded', 'Government Funded', '', '', ''),
name = 'Color Legend:') +
theme(legend.position = 'bottom') +
par(mar = c(2, 2, 2, 2, 2))
#Plots the top 5 primary payers by their costs paid for syndemic patients
ggplot(data = md2,
aes(y = total/100000000000,
x = reorder(Primary_Payer_Class_Cd, -total),
fill = gov ) ) +
geom_col() +
labs(title = 'Costs Paid by Top Payers',
caption = 'End the Syndemic | DataLab 2022',
x = 'Primary Payer',
y = 'Cost Paid (in billions of US dollars)',
subtitle = 'In 2019') +
scale_fill_manual(md2, values = c('black', 'red'),
labels = c('Privately Funded', 'Government Funded', '', '', ''),
name = 'Color Legend:') +
theme(legend.position = 'bottom') +
par(mar = c(2, 2, 2, 2))
?margin
#Plots the top 5 primary payers by their costs paid for syndemic patients
ggplot(data = md2,
aes(y = total/100000000000,
x = reorder(Primary_Payer_Class_Cd, -total),
fill = gov ) ) +
geom_col() +
labs(title = 'Costs Paid by Top Payers',
caption = 'End the Syndemic | DataLab 2022',
x = 'Primary Payer',
y = 'Cost Paid (in billions of US dollars)',
subtitle = 'In 2019') +
scale_fill_manual(md2, values = c('black', 'red'),
labels = c('Privately Funded', 'Government Funded', '', '', ''),
name = 'Color Legend:') +
theme(legend.position = 'bottom',
plot.margin = (2,2,2,2))
#Plots the top 5 primary payers by their costs paid for syndemic patients
ggplot(data = md2,
aes(y = total/100000000000,
x = reorder(Primary_Payer_Class_Cd, -total),
fill = gov ) ) +
geom_col() +
labs(title = 'Costs Paid by Top Payers',
caption = 'End the Syndemic | DataLab 2022',
x = 'Primary Payer',
y = 'Cost Paid (in billions of US dollars)',
subtitle = 'In 2019') +
scale_fill_manual(md2, values = c('black', 'red'),
labels = c('Privately Funded', 'Government Funded', '', '', ''),
name = 'Color Legend:') +
theme(legend.position = 'bottom',
plot.margin = (2, 2, 2, 2))
#Plots the top 5 primary payers by their costs paid for syndemic patients
ggplot(data = md2,
aes(y = total/100000000000,
x = reorder(Primary_Payer_Class_Cd, -total),
fill = gov ) ) +
geom_col() +
labs(title = 'Costs Paid by Top Payers',
caption = 'End the Syndemic | DataLab 2022',
x = 'Primary Payer',
y = 'Cost Paid (in billions of US dollars)',
subtitle = 'In 2019') +
scale_fill_manual(md2, values = c('black', 'red'),
labels = c('Privately Funded', 'Government Funded', '', '', ''),
name = 'Color Legend:') +
theme(legend.position = 'bottom',
plot.margin = margin(2, 2, 2, 2))
#Plots the top 5 primary payers by their costs paid for syndemic patients
ggplot(data = md2,
aes(y = total/100000000000,
x = reorder(Primary_Payer_Class_Cd, -total),
fill = gov ) ) +
geom_col() +
labs(title = 'Costs Paid by Top Payers',
caption = 'End the Syndemic | DataLab 2022',
x = 'Primary Payer',
y = 'Cost Paid (in billions of US dollars)',
subtitle = 'In 2019') +
scale_fill_manual(md2, values = c('black', 'red'),
labels = c('Privately Funded', 'Government Funded', '', '', ''),
name = 'Color Legend:') +
theme(legend.position = 'bottom',
plot.margin = margin(20, 2, 2, 2))
#Plots the top 5 primary payers by their costs paid for syndemic patients
ggplot(data = md2,
aes(y = total/100000000000,
x = reorder(Primary_Payer_Class_Cd, -total),
fill = gov ) ) +
geom_col() +
labs(title = 'Costs Paid by Top Payers',
caption = 'End the Syndemic | DataLab 2022',
x = 'Primary Payer',
y = 'Cost Paid (in billions of US dollars)',
subtitle = 'In 2019') +
scale_fill_manual(md2, values = c('black', 'red'),
labels = c('Privately Funded', 'Government Funded', '', '', ''),
name = 'Color Legend:') +
theme(legend.position = 'bottom',
plot.margin = margin(20, 20, 2, 2))
#Plots the top 5 primary payers by their costs paid for syndemic patients
ggplot(data = md2,
aes(y = total/100000000000,
x = reorder(Primary_Payer_Class_Cd, -total),
fill = gov ) ) +
geom_col() +
labs(title = 'Costs Paid by Top Payers',
caption = 'End the Syndemic | DataLab 2022',
x = 'Primary Payer',
y = 'Cost Paid (in billions of US dollars)',
subtitle = 'In 2019') +
scale_fill_manual(md2, values = c('black', 'red'),
labels = c('Privately Funded', 'Government Funded', '', '', ''),
name = 'Color Legend:') +
theme(legend.position = 'bottom',
plot.margin = margin(20, 20, 20, 20))
#Plots the top 5 primary payers by their costs paid for syndemic patients
ggplot(data = md2,
aes(y = total/100000000000,
x = reorder(Primary_Payer_Class_Cd, -total),
fill = gov ) ) +
geom_col() +
labs(title = 'Costs Paid by Top Payers',
caption = 'End the Syndemic | DataLab 2022',
x = 'Primary Payer',
y = 'Cost Paid (in billions of US dollars)',
subtitle = 'In 2019') +
scale_fill_manual(md2, values = c('black', 'red'),
labels = c('Privately Funded', 'Government Funded', '', '', ''),
name = 'Color Legend:') +
theme(legend.position = 'bottom',
plot.margin = margin(20, 20, 200, 20))
#Plots the top 5 primary payers by their costs paid for syndemic patients
ggplot(data = md2,
aes(y = total/100000000000,
x = reorder(Primary_Payer_Class_Cd, -total),
fill = gov ) ) +
geom_col() +
labs(title = 'Costs Paid by Top Payers',
caption = 'End the Syndemic | DataLab 2022',
x = 'Primary Payer',
y = 'Cost Paid (in billions of US dollars)',
subtitle = 'In 2019') +
scale_fill_manual(md2, values = c('black', 'red'),
labels = c('Privately Funded', 'Government Funded', '', '', ''),
name = 'Color Legend:') +
theme(legend.position = 'bottom',
plot.margin = margin(20, 20, 20, 20))
#Plots the top 5 primary payers by their costs paid for syndemic patients
ggplot(data = md2,
aes(y = total/100000000000,
x = reorder(Primary_Payer_Class_Cd, -total),
fill = gov ) ) +
geom_col() +
labs(title = 'Costs Paid by Top Payers',
caption = 'End the Syndemic | DataLab 2022',
x = 'Primary Payer',
y = 'Cost Paid (in billions of US dollars)',
subtitle = 'In 2019') +
scale_fill_manual(md2, values = c('black', 'red'),
labels = c('Privately Funded', 'Government Funded', '', '', ''),
name = 'Color Legend:') +
theme(legend.position = 'bottom',
plot.margin = margin(20, 20, 1, 20))
#Plots the top 5 primary payers by their costs paid for syndemic patients
ggplot(data = md2,
aes(y = total/100000000000,
x = reorder(Primary_Payer_Class_Cd, -total),
fill = gov ) ) +
geom_col() +
labs(title = 'Costs Paid by Top Payers',
caption = 'End the Syndemic | DataLab 2022',
x = 'Primary Payer',
y = 'Cost Paid (in billions of US dollars)',
subtitle = 'In 2019') +
scale_fill_manual(md2, values = c('black', 'red'),
labels = c('Privately Funded', 'Government Funded', '', '', ''),
name = 'Color Legend:') +
theme(legend.position = 'bottom')
#Plots the top 5 primary payers by their costs paid for syndemic patients
ggplot(data = md2,
aes(y = total/100000000000,
x = reorder(Primary_Payer_Class_Cd, -total),
fill = gov ) ) +
geom_col() +
labs(title = 'Costs Paid by Top Payers',
caption = 'End the Syndemic | DataLab 2022',
x = 'Primary Payer',
y = 'Cost Paid (in billions of US dollars)',
subtitle = 'In 2019') +
scale_fill_manual(md2, values = c('black', 'red'),
labels = c('Privately Funded', 'Government Funded', '', '', ''),
name = 'Color Legend:') +
theme(legend.position = 'bottom') +
theme(axis.text.x = element_text(angle = 75))
#Plots the top 5 primary payers by their costs paid for syndemic patients
ggplot(data = md2,
aes(y = total/100000000000,
x = reorder(Primary_Payer_Class_Cd, -total),
fill = gov ) ) +
geom_col() +
labs(title = 'Costs Paid by Top Payers',
caption = 'End the Syndemic | DataLab 2022',
x = 'Primary Payer',
y = 'Cost Paid (in billions of US dollars)',
subtitle = 'In 2019') +
scale_fill_manual(md2, values = c('black', 'red'),
labels = c('Privately Funded', 'Government Funded', '', '', ''),
name = 'Color Legend:') +
theme(legend.position = 'bottom') +
theme(axis.text.x = element_text(angle = 60))
#Plots the top 5 primary payers by their costs paid for syndemic patients
ggplot(data = md2,
aes(y = total/100000000000,
x = reorder(Primary_Payer_Class_Cd, -total),
fill = gov ) ) +
geom_col() +
labs(title = 'Costs Paid by Top Payers',
caption = 'End the Syndemic | DataLab 2022',
x = 'Primary Payer',
y = 'Cost Paid (in billions of US dollars)',
subtitle = 'In 2019') +
scale_fill_manual(md2, values = c('black', 'red'),
labels = c('Privately Funded', 'Government Funded', '', '', ''),
name = 'Color Legend:') +
theme(legend.position = 'bottom') +
theme(axis.text.x = element_text(angle = 120))
#Plots the top 5 primary payers by their costs paid for syndemic patients
ggplot(data = md2,
aes(y = total/100000000000,
x = reorder(Primary_Payer_Class_Cd, -total),
fill = gov ) ) +
geom_col() +
labs(title = 'Costs Paid by Top Payers',
caption = 'End the Syndemic | DataLab 2022',
x = 'Primary Payer',
y = 'Cost Paid (in billions of US dollars)',
subtitle = 'In 2019') +
scale_fill_manual(md2, values = c('black', 'red'),
labels = c('Privately Funded', 'Government Funded', '', '', ''),
name = 'Color Legend:') +
theme(legend.position = 'bottom') +
theme(axis.text.x = element_text(angle = 20))
#Plots the top 5 primary payers by their costs paid for syndemic patients
ggplot(data = md2,
aes(y = total/100000000000,
x = reorder(Primary_Payer_Class_Cd, -total),
fill = gov ) ) +
geom_col() +
labs(title = 'Costs Paid by Top Payers',
caption = 'End the Syndemic | DataLab 2022',
x = 'Primary Payer',
y = 'Cost Paid (in billions of US dollars)',
subtitle = 'In 2019') +
scale_fill_manual(md2, values = c('black', 'red'),
labels = c('Privately Funded', 'Government Funded', '', '', ''),
name = 'Color Legend:') +
theme(legend.position = 'bottom') +
theme(axis.text.x = element_text(angle = 10))
#Plots the top 5 primary payers by their costs paid for syndemic patients
ggplot(data = md2,
aes(y = total/100000000000,
x = reorder(Primary_Payer_Class_Cd, -total),
fill = gov ) ) +
geom_col() +
labs(title = 'Costs Paid by Top Payers',
caption = 'End the Syndemic | DataLab 2022',
x = 'Primary Payer',
y = 'Cost Paid (in billions of US dollars)',
subtitle = 'In 2019') +
scale_fill_manual(md2, values = c('black', 'red'),
labels = c('Privately Funded', 'Government Funded', '', '', ''),
name = 'Color Legend:') +
theme(legend.position = 'bottom') +
theme(axis.text.x = element_text(angle = 2))
#Plots the top 5 primary payers by their costs paid for syndemic patients
ggplot(data = md2,
aes(y = total/100000000000,
x = reorder(Primary_Payer_Class_Cd, -total),
fill = gov ) ) +
geom_col() +
labs(title = 'Costs Paid by Top Payers',
caption = 'End the Syndemic | DataLab 2022',
x = 'Primary Payer',
y = 'Cost Paid (in billions of US dollars)',
subtitle = 'In 2019') +
scale_fill_manual(md2, values = c('black', 'red'),
labels = c('Privately Funded', 'Government Funded', '', '', ''),
name = 'Color Legend:') +
theme(legend.position = 'bottom') +
theme(axis.text.x = element_text(angle = 5))
#Plots the top 5 primary payers by their costs paid for syndemic patients
ggplot(data = md2,
aes(y = total/100000000000,
x = reorder(Primary_Payer_Class_Cd, -total),
fill = gov ) ) +
geom_col() +
labs(title = 'Costs Paid by Top Payers',
caption = 'End the Syndemic | DataLab 2022',
x = 'Primary Payer',
y = 'Cost Paid (in billions of US dollars)',
subtitle = 'In 2019') +
scale_fill_manual(md2, values = c('black', 'red'),
labels = c('Privately Funded', 'Government Funded', '', '', ''),
name = 'Color Legend:') +
theme(legend.position = 'bottom') +
theme(axis.text.x = element_text(angle = 10))
#Plots government vs private total funding for syndemic patients
ggplot(data = md_big_gov,
aes(y = total/100000000000,
x = gov,
fill = gov ) ) +
geom_col() +
labs(title = 'Costs Paid by the Government vs Commercial Providers',
caption = 'End the Syndemic | DataLab 2022',
x = 'Primary Payer',
y = 'Cost Paid (in billions of US dollars)',
subtitle = 'In 2019') +
scale_fill_manual(md2, values = c('black', 'red')) +
theme(legend.position = '0')
#Plots the top 5 primary payers by their costs paid for syndemic patients
ggplot(data = md2,
aes(y = total/100000000000,
x = reorder(Primary_Payer_Class_Cd, -total),
fill = gov ) ) +
geom_col() +
labs(title = 'Costs Paid by Top Payers',
caption = 'End the Syndemic | DataLab 2022',
x = 'Primary Payer',
y = 'Cost Paid (in billions of US dollars)',
subtitle = 'In 2019') +
scale_fill_manual(md2, values = c('black', 'red'),
labels = c('Privately Funded', 'Government Funded', '', '', ''),
name = 'Color Legend:') +
theme(legend.position = 'bottom') +
theme(axis.text.x = element_text(angle = 10))
#Plots the top 5 primary payers by their costs paid for syndemic patients
ggplot(data = md2,
aes(y = total/100000000000,
x = reorder(Primary_Payer_Class_Cd, -total),
fill = gov ) ) +
geom_col() +
labs(title = 'Costs Paid by Top Payers',
caption = 'End the Syndemic | DataLab 2022',
x = 'Primary Payer',
y = 'Cost Paid (in billions of US dollars)',
subtitle = 'In 2019') +
scale_fill_manual(md2, values = c('red', 'black'),
labels = c('Privately Funded', 'Government Funded', '', '', ''),
name = 'Color Legend:') +
theme(legend.position = 'bottom') +
theme(axis.text.x = element_text(angle = 10))
#Plots government vs private total funding for syndemic patients
ggplot(data = md_big_gov,
aes(y = total/100000000000,
x = gov,
fill = gov ) ) +
geom_col() +
labs(title = 'Costs Paid by the Government vs Commercial Providers',
caption = 'End the Syndemic | DataLab 2022',
x = 'Primary Payer',
y = 'Cost Paid (in billions of US dollars)',
subtitle = 'In 2019') +
scale_fill_manual(md2, values = c('black', 'red')) +
theme(legend.position = '0')
=======
>>>>>>> db04401e85a21eaf7b32317b12ad64cafa809b0d
-PET_Flag,
-ASTC_Flag,
-Lithotripsy_Flag,
-MRI_MRA_Flag,
-Megavolt_Rad_Flag,
-CT_Flag,
-Fatal_Error_Flag,
-starts_with("Record_Num"), #[1:2]
-Bill_End,
-MUL,
-Patient_ID,
-TN_Co_Res,
-Payer_A,
-Payer_B,
-Payer_C,
-Amount_Counter,
-Race,
-LOS,
-DRG_Rank,
-Inpat_Record_Flag,
-ER_Record_Flag,
-ASTC_Record_Flag,
-Obs_23hr_Record_Flag,
-CON_Flag,
-Cumulative_Record_Flag,
-Reportable_Flag,
-TN_Co_Unk,
-Processing_Period,
-MS_MDC,
-MS_DRG,
-MS_DRG_4digit,
-HAC,
-Admit_From_ED_Flag,
-Wrong_Claim
)
train1 <- train$Diag1 %>%
paste(df$Diag1,
df$Diag2,
df$Diag3,
df$Diag4,
df$Diag5,
df$Diag6,
df$Diag7,
df$Diag8,
df$Diag9,
df$Diag10,
df$Diag11,
df$Diag12,
df$Diag13,
df$Diag14,
df$Diag15,
df$Diag16,
df$Diag17,
df$Diag18
)
keep<-grep(ICD_Filtered$X2, df$Diag1)
View(ICD_Filtered)
#Reads and formats ICD-10 2019 Codebook
ICD <- readr::read_delim("D:/DataLab/syndemic/icd10cm_order_2019.txt", delim = ' ', col_names = FALSE) %>%
select(-X1, -X3, -X4) %>%
unite(col = 'Details', X5:X62, sep = ' ', na.rm = TRUE)
#Filters Codebook to only words we deem relevant
ICD_Filtered <- ICD %>%
filter(grepl('endocarditis |
sepsis |
osteomyelitis |
Human immunodef virus|
HIV |
syphilis |
gonorrhoea |
chlamydia |
trichomoniasis |
sexually transmitted infection |
hepatitis A |
hepatitis B |
hepatitis C |
hepatitis D |
hepatitis E |
substance use',
Details,
ignore.case = TRUE))
View(ICD_Filtered)
#Filters Codebook to only words we deem relevant
ICD_Filtered <- ICD %>%
filter(grepl('endocarditis|sepsis|osteomyelitis|Human immunodef virus|HIV|syphilis|gonorrhoea|chlamydia|trichomoniasis|sexually transmitted infection|hepatitis A|hepatitis B|hepatitis C|hepatitis D|hepatitis E|substance use',
Details,
ignore.case = TRUE))
#Filters out unnecessary columns
train <-df %>% select(
-Type_Bill,
-Fed_Tax_SubID,
-Fed_Tax_Num,
-Admission_Type,
-Admission_Source,
-Do_Not_Resuscitate,
-Accident_St,
-starts_with("Units_Service"), #[1:18]
-Primary_Health_Plan_Id,
-Secondary_Health_Plan_Id,
-Tertiary_Health_Plan_Id,
-Primary_Patient_Rel_Insr,
-Secondary_Patient_Rel_Insr,
-Tertiary_Patient_Rel_Insr,
-Dx_Px_Qualifier,
-starts_with("POA"), #[1:18]
-starts_with("Patient_Reason_Visit"),#[1:3],
-Prospect_Pay_Code,
-starts_with("Ecode"), #[1:3]
-starts_with("E_POA"), #[1:3]
-Type_ER_Visit,
-Outcome_ER_Visit,
-Inpatient_Flag,
-ER_Flag,
-PET_Flag,
-ASTC_Flag,
-Lithotripsy_Flag,
-MRI_MRA_Flag,
-Megavolt_Rad_Flag,
-CT_Flag,
-Fatal_Error_Flag,
-starts_with("Record_Num"), #[1:2]
-Bill_End,
-MUL,
-Patient_ID,
-TN_Co_Res,
-Payer_A,
-Payer_B,
-Payer_C,
-Amount_Counter,
-Race,
-LOS,
-DRG_Rank,
-Inpat_Record_Flag,
-ER_Record_Flag,
-ASTC_Record_Flag,
-Obs_23hr_Record_Flag,
-CON_Flag,
-Cumulative_Record_Flag,
-Reportable_Flag,
-TN_Co_Unk,
-Processing_Period,
-MS_MDC,
-MS_DRG,
-MS_DRG_4digit,
-HAC,
-Admit_From_ED_Flag,
-Wrong_Claim
)
train1 <- train$Diag1 %>%
paste(df$Diag1,
df$Diag2,
df$Diag3,
df$Diag4,
df$Diag5,
df$Diag6,
df$Diag7,
df$Diag8,
df$Diag9,
df$Diag10,
df$Diag11,
df$Diag12,
df$Diag13,
df$Diag14,
df$Diag15,
df$Diag16,
df$Diag17,
df$Diag18
)
ICD_Filtered[1,2]
keep<-(ICD_Filtered[i,1])
ICD_Filtered[1,1]
ICD_Filtered[2,1]
keepall<-c()
for(i in 1:492){
keep<-(ICD_Filtered[i,1],train1$Diag1)
keepall<-keep
}
keepall<-c()
for(i in 1:492){
keep<-grep(ICD_Filtered[i,1],train1$Diag1)
keepall<-keep
}
for(i in 1:492){
keep<-grep(ICD_Filtered[i,1],train$Diag1)
keepall<-keep
}
train1<-train1[keep,]
train<-train[keep,]
train<-train[keep,]
View(train)
keepall<-c()
for(i in 1:492){
keep<-grep(ICD_Filtered[i,1],train$Diag1)
keepall<-keep+keepall
}
train<-train[keep,]
#Filters out unnecessary columns
train <-df %>% select(
-Type_Bill,
-Fed_Tax_SubID,
-Fed_Tax_Num,
-Admission_Type,
-Admission_Source,
-Do_Not_Resuscitate,
-Accident_St,
-starts_with("Units_Service"), #[1:18]
-Primary_Health_Plan_Id,
-Secondary_Health_Plan_Id,
-Tertiary_Health_Plan_Id,
-Primary_Patient_Rel_Insr,
-Secondary_Patient_Rel_Insr,
-Tertiary_Patient_Rel_Insr,
-Dx_Px_Qualifier,
-starts_with("POA"), #[1:18]
-starts_with("Patient_Reason_Visit"),#[1:3],
-Prospect_Pay_Code,
-starts_with("Ecode"), #[1:3]
-starts_with("E_POA"), #[1:3]
-Type_ER_Visit,
-Outcome_ER_Visit,
-Inpatient_Flag,
-ER_Flag,
-PET_Flag,
-ASTC_Flag,
-Lithotripsy_Flag,
-MRI_MRA_Flag,
-Megavolt_Rad_Flag,
-CT_Flag,
-Fatal_Error_Flag,
-starts_with("Record_Num"), #[1:2]
-Bill_End,
-MUL,
-Patient_ID,
-TN_Co_Res,
-Payer_A,
-Payer_B,
-Payer_C,
-Amount_Counter,
-Race,
-LOS,
-DRG_Rank,
-Inpat_Record_Flag,
-ER_Record_Flag,
-ASTC_Record_Flag,
-Obs_23hr_Record_Flag,
-CON_Flag,
-Cumulative_Record_Flag,
-Reportable_Flag,
-TN_Co_Unk,
-Processing_Period,
-MS_MDC,
-MS_DRG,
-MS_DRG_4digit,
-HAC,
-Admit_From_ED_Flag,
-Wrong_Claim
)
keepall<-c()
for(i in 1:492){
keep<-grep(ICD_Filtered[i,1],train$Diag1)
keepall<-keep+keepall
}
train<-train[keep,]
View(train)
keep<-grep(ICD_Filtered[i,1],train$Diag1)
#Filters out unnecessary columns
train <-df %>% select(
-Type_Bill,
-Fed_Tax_SubID,
-Fed_Tax_Num,
-Admission_Type,
-Admission_Source,
-Do_Not_Resuscitate,
-Accident_St,
-starts_with("Units_Service"), #[1:18]
-Primary_Health_Plan_Id,
-Secondary_Health_Plan_Id,
-Tertiary_Health_Plan_Id,
-Primary_Patient_Rel_Insr,
-Secondary_Patient_Rel_Insr,
-Tertiary_Patient_Rel_Insr,
-Dx_Px_Qualifier,
-starts_with("POA"), #[1:18]
-starts_with("Patient_Reason_Visit"),#[1:3],
-Prospect_Pay_Code,
-starts_with("Ecode"), #[1:3]
-starts_with("E_POA"), #[1:3]
-Type_ER_Visit,
-Outcome_ER_Visit,
-Inpatient_Flag,
-ER_Flag,
-PET_Flag,
-ASTC_Flag,
-Lithotripsy_Flag,
-MRI_MRA_Flag,
-Megavolt_Rad_Flag,
-CT_Flag,
-Fatal_Error_Flag,
-starts_with("Record_Num"), #[1:2]
-Bill_End,
-MUL,
-Patient_ID,
-TN_Co_Res,
-Payer_A,
-Payer_B,
-Payer_C,
-Amount_Counter,
-Race,
-LOS,
-DRG_Rank,
-Inpat_Record_Flag,
-ER_Record_Flag,
-ASTC_Record_Flag,
-Obs_23hr_Record_Flag,
-CON_Flag,
-Cumulative_Record_Flag,
-Reportable_Flag,
-TN_Co_Unk,
-Processing_Period,
-MS_MDC,
-MS_DRG,
-MS_DRG_4digit,
-HAC,
-Admit_From_ED_Flag,
-Wrong_Claim
)
keep<-grep(ICD_Filtered[i,1],train$Diag1)
keep<-grep(as.character(ICD_Filtered[i,1]),train$Diag1)
ICD_Filtered[1,1]
ICD_Filtered[2,1]
ICD_Filtered[3,1]
library(gsheet)
# Reading in doc of IDC10codes
codes<-gsheet2tbl("https://docs.google.com/document/d/1e53UDsuHZwQAyVc8vAG69Al_tjXbnv6C/edit?usp=sharing")
# Reading in doc of IDC10codes
codes<-gsheet2tbl("https://docs.google.com/document/d/1e53UDsuHZwQAyVc8vAG69Al_tjXbnv6C/edit")
# Reading in doc of IDC10codes
codes<-gsheet2tbl("https://docs.google.com/document/d/1e53UDsuHZwQAyVc8vAG69Al_tjXbnv6C/edit?usp=sharing&ouid=101883700449258151197&rtpof=true&sd=true")
# Reading in doc of IDC10codes
codes<-gsheet2tbl("C:\Users\alane\Downloads\Supplementary Tables 1 and 2.docx")
# Reading in doc of IDC10codes
codes<-gsheet2tbl("C:/Users/alane/Downloads/Supplementary Tables 1 and 2.docx")
# Reading in doc of IDC10codes
codes<-gsheet::gsheet2tbl("C:/Users/alane/Downloads/Supplementary Tables 1 and 2.docx")
# Reading in doc of IDC10codes
codes<-gsheet::gsheet2tbl("https://docs.google.com/document/d/1e53UDsuHZwQAyVc8vAG69Al_tjXbnv6C/edit")
install.packages("officer")
library(officer)
#
data %>% filter(sud&sstvi) %>% tally()
######################## Libraries and Data sets ####################
# June 27rd 2022 | Start of exploration!
#####################################################################
library(tidyverse)
library(ggthemes)
setwd("D:/DataLab/syndemic")
data<-read_csv("masterdata.csv")
#
data %>% filter(sud&sstvi) %>% tally()
<<<<<<< HEAD
#
data %>% filter(sud&(endo|ost)) %>% tally()
#
data %>% filter(sud) %>% tally()
library(leaflet)
leaflet()
leaflet() %>% addProviderTiles(providers$HERE.basicMap)
leaflet() %>% addProviderTiles(providers$OpenStreetMap)
library(gsheet)
# Map of SEP trial run
locations<-gsheet2tbl("https://docs.google.com/spreadsheets/d/1sb4P_7-UkcpkmENZ_DpMI45wRY7oItIFbv-0suLmz7U/edit?usp=sharing")
View(locations)
leaflet() %>%
addProviderTiles(providers$OpenStreetMap) %>%
addMarkers(data = locations )
leaflet() %>%
addProviderTiles(providers$OpenStreetMap) %>%
addMarkers(data = locations, color = "red" )
leaflet() %>%
addProviderTiles(providers$OpenStreetMap) %>%
addMarkers(data = locations, label = locations$address )
library(leaflet.extras)
leaflet() %>%
addProviderTiles(providers$OpenStreetMap) %>%
addMarkers(data = locations, label = locations$address ) %>% addControlGPS()
leaflet() %>%
addProviderTiles(providers$OpenStreetMap) %>%
addMarkers(data = locations, label = locations$address ) %>% addControlGPS(options = gpsOptions())
leaflet() %>%
addProviderTiles(providers$OpenStreetMap) %>%
addMarkers(data = locations, label = locations$address ) %>% addControlGPS(options = gpsOptions(activate = TRUE))
leaflet() %>%
addProviderTiles(providers$OpenStreetMap) %>%
addMarkers(data = locations, label = locations$address ) %>% addControlGPS(position = "topleft", activate = TRUE,
autoCenter = TRUE, maxZoom = 60,
setView = TRUE))
leaflet() %>%
addProviderTiles(providers$OpenStreetMap) %>%
addMarkers(data = locations, label = locations$address ) %>% addControlGPS(position = "topleft", activate = TRUE,
autoCenter = TRUE, maxZoom = 60,
setView = TRUE)
leaflet() %>%
addProviderTiles(providers$OpenStreetMap) %>%
addMarkers(data = locations, label = locations$address ) %>% addControlGPS( activate = TRUE,
autoCenter = TRUE, maxZoom = 60,
setView = TRUE)
leaflet() %>%
addProviderTiles(providers$OpenStreetMap) %>%
addMarkers(data = locations, label = locations$address ) %>% addControlGPS( activate = TRUE, maxZoom = 60,
setView = TRUE)
leaflet() %>%
addProviderTiles(providers$OpenStreetMap) %>%
addMarkers(data = locations, label = locations$address ) %>% addControlGPS( activate = TRUE,
setView = TRUE)
leaflet() %>%
addProviderTiles(providers$OpenStreetMap) %>%
addMarkers(data = locations, label = locations$address ) %>% addControlGPS( activate = TRUE)
leaflet() %>%
addProviderTiles(providers$OpenStreetMap) %>%
addMarkers(data = locations, label = locations$address ) %>% addControlGPS( options = gpsOptions(position = "topleft", activate = TRUE,
autoCenter = TRUE, maxZoom = 60,
setView = TRUE))
leaflet() %>%
addProviderTiles(providers$OpenStreetMap) %>%
addMarkers(data = locations, label = locations$address ) %>%
addControlGPS( options = gpsOptions(position = "topleft", activate = TRUE, autoCenter = TRUE, maxZoom = 60, setView = TRUE)) %>%
activateGPS()
=======
View(data)
>>>>>>> 80b3bfc9bcdfbe180df1c940638e416530e9dfda
>>>>>>> db04401e85a21eaf7b32317b12ad64cafa809b0d
