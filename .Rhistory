scale_y_continuous(labels = scales::percent) +
labs(title = "Comparison of Primary Diagnosis Conditions",
y = "Percentage of Visits to the ER")
#Plot of % by SCP or Williamson (DODGE GRAPH)
ggplot(data = tn_diag3, aes(x = scp,y = precent/100, fill = type)) +
geom_col(position = "dodge",
aes(label = scales::precent(precent)))+
labs(title = "Comparison of Primary Diagnosis Conditions",
y = "Percentage of Visits",
x = '') +
scale_fill_manual(values=c("#74A9CF",
"#08306B"),
name = "Type of Condition") +
scale_y_continuous(labels = scales::percent) +
labs(title = "Comparison of Primary Diagnosis Conditions",
y = "Percentage of Visits to the ER")
#Plot of % by SCP or Williamson (DODGE GRAPH)
ggplot(data = tn_diag3, aes(x = scp,y = precent/100, fill = type)) +
geom_col(position = "dodge",
aes(label = scales::percent(precent)))+
labs(title = "Comparison of Primary Diagnosis Conditions",
y = "Percentage of Visits",
x = '') +
scale_fill_manual(values=c("#74A9CF",
"#08306B"),
name = "Type of Condition") +
scale_y_continuous(labels = scales::percent) +
labs(title = "Comparison of Primary Diagnosis Conditions",
y = "Percentage of Visits to the ER")
#Plot of % by SCP or Williamson (DODGE GRAPH)
ggplot(data = tn_diag3, aes(x = scp,y = precent/100, fill = type)) +
geom_col(position = "dodge",
aes(label = scales::percent(precent)))+
labs(title = "Comparison of Primary Diagnosis Conditions",
y = "Percentage of Visits",
x = '') +
scale_fill_manual(values=c("#74A9CF",
"#08306B"),
name = "Type of Condition") +
scale_y_continuous(labels = scales::percent) +
labs(title = "Comparison of Primary Diagnosis Conditions",
y = "Percentage of Visits to the ER") +geom_test(aes(label = scales::percent(precent)))
#Plot of % by SCP or Williamson (DODGE GRAPH)
ggplot(data = tn_diag3, aes(x = scp,y = precent/100, fill = type)) +
geom_col(position = "dodge",
aes(label = scales::percent(precent)))+
labs(title = "Comparison of Primary Diagnosis Conditions",
y = "Percentage of Visits",
x = '') +
scale_fill_manual(values=c("#74A9CF",
"#08306B"),
name = "Type of Condition") +
scale_y_continuous(labels = scales::percent) +
labs(title = "Comparison of Primary Diagnosis Conditions",
y = "Percentage of Visits to the ER") +geom_text(aes(label = scales::percent(precent)))
library(ggrepel)
install.packages("ggrepel")
library(ggrepel)
#Plot of % by SCP or Williamson (DODGE GRAPH)
ggplot(data = tn_diag3, aes(x = scp,y = precent/100, fill = type)) +
geom_col(position = "dodge",
aes(label = scales::percent(precent)))+
labs(title = "Comparison of Primary Diagnosis Conditions",
y = "Percentage of Visits",
x = '') +
scale_fill_manual(values=c("#74A9CF",
"#08306B"),
name = "Type of Condition") +
scale_y_continuous(labels = scales::percent) +
labs(title = "Comparison of Primary Diagnosis Conditions",
y = "Percentage of Visits to the ER") + geom_text(aes(label = scales::percent(precent)))
# Code to make graph by SCP and Williamson
tn_diag3 <- tn_diag3 %>% mutate(scp = ifelse(county == "Franklin" | county == "Marion" | county == "Grundy", "SCP",
ifelse(county == "Williamson", "Williamson", "Other")))
library(ggrepel)
#Plot of % by SCP or Williamson (DODGE GRAPH)
ggplot(data = tn_diag3, aes(x = scp,y = precent/100, fill = type)) +
geom_col(position = "dodge",
aes(label = scales::percent(precent)))+
labs(title = "Comparison of Primary Diagnosis Conditions",
y = "Percentage of Visits",
x = '') +
scale_fill_manual(values=c("#74A9CF",
"#08306B"),
name = "Type of Condition") +
scale_y_continuous(labels = scales::percent) +
labs(title = "Comparison of Primary Diagnosis Conditions",
y = "Percentage of Visits to the ER") + geom_text(aes(label = scales::percent(precent)))
#Plot of % by SCP or Williamson (DODGE GRAPH)
ggplot(data = tn_diag3, aes(x = scp,y = precent/100, fill = type)) +
geom_col(position = "dodge",
aes(label = scales::percent(precent)))+
labs(title = "Comparison of Primary Diagnosis Conditions",
y = "Percentage of Visits",
x = '') +
scale_fill_manual(values=c("#74A9CF",
"#08306B"),
name = "Type of Condition") +
scale_y_continuous(labels = scales::percent) +
labs(title = "Comparison of Primary Diagnosis Conditions",
y = "Percentage of Visits to the ER") #+ geom_text(aes(label = scales::percent(precent)))
#Plot of % by SCP or Williamson (DODGE GRAPH)
ggplot(data = tn_diag3, aes(x = scp,y = precent/100, fill = type)) +
geom_col(position = "dodge")+
labs(title = "Comparison of Primary Diagnosis Conditions",
y = "Percentage of Visits",
x = '') +
scale_fill_manual(values=c("#74A9CF",
"#08306B"),
name = "Type of Condition") +
scale_y_continuous(labels = scales::percent) +
labs(title = "Comparison of Primary Diagnosis Conditions",
y = "Percentage of Visits to the ER") + geom_text(aes(label = scales::percent(precent)))
#Plot of % by SCP or Williamson (DODGE GRAPH)
ggplot(data = tn_diag3, aes(x = scp,y = precent/100, fill = type)) +
geom_col(position = "dodge")+
labs(title = "Comparison of Primary Diagnosis Conditions",
y = "Percentage of Visits",
x = '') +
scale_fill_manual(values=c("#74A9CF",
"#08306B"),
name = "Type of Condition") +
scale_y_continuous(labels = scales::percent) +
labs(title = "Comparison of Primary Diagnosis Conditions",
y = "Percentage of Visits to the ER") + geom_text(aes(label = precent))
# Code to make graph by SCP and Williamson
tn_diag3 <- tn_diag3 %>% mutate(scp = ifelse(county == "Franklin" | county == "Marion" | county == "Grundy", "SCP",
ifelse(county == "Williamson", "Williamson", "Other"))) %>% group_by(scp)
library(ggrepel)
#Plot of % by SCP or Williamson (DODGE GRAPH)
ggplot(data = tn_diag3, aes(x = scp,y = precent/100, fill = type)) +
geom_col(position = "dodge")+
labs(title = "Comparison of Primary Diagnosis Conditions",
y = "Percentage of Visits",
x = '') +
scale_fill_manual(values=c("#74A9CF",
"#08306B"),
name = "Type of Condition") +
scale_y_continuous(labels = scales::percent) +
labs(title = "Comparison of Primary Diagnosis Conditions",
y = "Percentage of Visits to the ER") + geom_text(aes(label = precent))
# Code to make graph by SCP and Williamson
tn_diag3 <- tn_diag3 %>% mutate(scp = ifelse(county == "Franklin" | county == "Marion" | county == "Grundy", "SCP",
ifelse(county == "Williamson", "Williamson", "Other"))) %>%
group_by(scp) %>%
summarize(mean_prec = mean(precent))
#Filter out "other" conditions
tn_diag3 <- tn_diag2 %>% filter(Condition != "Other", county != "Other")
# Code to make graph by SCP and Williamson
tn_diag3 <- tn_diag3 %>% mutate(scp = ifelse(county == "Franklin" | county == "Marion" | county == "Grundy", "SCP",
ifelse(county == "Williamson", "Williamson", "Other"))) %>%
group_by(scp, Condition) %>%
summarize(mean_prec = mean(precent))
#Filter out "other" conditions
tn_diag3 <- tn_diag2 %>% filter(Condition != "Other", county != "Other")
# Code to make graph by SCP and Williamson
tn_diag3 <- tn_diag3 %>% mutate(scp = ifelse(county == "Franklin" | county == "Marion" | county == "Grundy", "SCP",
ifelse(county == "Williamson", "Williamson", "Other"))) %>%
group_by(scp, Type) %>%
summarize(mean_prec = mean(precent))
# Code to make graph by SCP and Williamson
tn_diag3 <- tn_diag3 %>% mutate(scp = ifelse(county == "Franklin" | county == "Marion" | county == "Grundy", "SCP",
ifelse(county == "Williamson", "Williamson", "Other"))) %>%
group_by(scp, type) %>%
summarize(mean_prec = mean(precent))
#Plot of % by SCP or Williamson (DODGE GRAPH)
ggplot(data = tn_diag3, aes(x = scp,y = precent/100, fill = type)) +
geom_col(position = "dodge")+
labs(title = "Comparison of Primary Diagnosis Conditions",
y = "Percentage of Visits",
x = '') +
scale_fill_manual(values=c("#74A9CF",
"#08306B"),
name = "Type of Condition") +
scale_y_continuous(labels = scales::percent) +
labs(title = "Comparison of Primary Diagnosis Conditions",
y = "Percentage of Visits to the ER") + geom_text(aes(label = precent))
#Plot of % by SCP or Williamson (DODGE GRAPH)
ggplot(data = tn_diag3, aes(x = scp,y = precent/100, fill = type)) +
geom_col(position = "dodge")+
labs(title = "Comparison of Primary Diagnosis Conditions",
y = "Percentage of Visits",
x = '') +
scale_fill_manual(values=c("#74A9CF",
"#08306B"),
name = "Type of Condition") +
scale_y_continuous(labels = scales::percent) +
labs(title = "Comparison of Primary Diagnosis Conditions",
y = "Percentage of Visits to the ER") + geom_text(aes(label = mean_prec))
#Plot of % by SCP or Williamson (DODGE GRAPH)
ggplot(data = tn_diag3, aes(x = scp,y = mean_prec/100, fill = type)) +
geom_col(position = "dodge")+
labs(title = "Comparison of Primary Diagnosis Conditions",
y = "Percentage of Visits",
x = '') +
scale_fill_manual(values=c("#74A9CF",
"#08306B"),
name = "Type of Condition") +
scale_y_continuous(labels = scales::percent) +
labs(title = "Comparison of Primary Diagnosis Conditions",
y = "Percentage of Visits to the ER") + geom_text(aes(label = mean_prec))
#Plot of % by SCP or Williamson (DODGE GRAPH)
ggplot(data = tn_diag3, aes(x = scp,y = mean_prec/100, fill = type)) +
geom_col(position = "dodge")+
labs(title = "Comparison of Primary Diagnosis Conditions",
y = "Percentage of Visits",
x = '') +
scale_fill_manual(values=c("#74A9CF",
"#08306B"),
name = "Type of Condition") +
scale_y_continuous(labels = scales::percent) +
labs(title = "Comparison of Primary Diagnosis Conditions",
y = "Percentage of Visits to the ER") + geom_text(aes(label = mean_prec), vjust = 0)
#Plot of % by SCP or Williamson (DODGE GRAPH)
ggplot(data = tn_diag3, aes(x = scp,y = mean_prec/100, fill = type)) +
geom_col(position = "dodge", aes(label = mean_prec), vjust = 0)+
labs(title = "Comparison of Primary Diagnosis Conditions",
y = "Percentage of Visits",
x = '') +
scale_fill_manual(values=c("#74A9CF",
"#08306B"),
name = "Type of Condition") +
scale_y_continuous(labels = scales::percent) +
labs(title = "Comparison of Primary Diagnosis Conditions",
y = "Percentage of Visits to the ER") #+ geom_text(aes(label = mean_prec), vjust = 0)
y = "Percentage of Visits to the ER") + geom_text(aes(label = round(mean_prec),position = position_dodge(width = 0.9), vjust = 0)
#Plot of % by SCP or Williamson (DODGE GRAPH)
ggplot(data = tn_diag3, aes(x = scp,y = mean_prec/100, fill = type)) +
geom_col(position = "dodge")+
labs(title = "Comparison of Primary Diagnosis Conditions",
y = "Percentage of Visits",
x = '') +
scale_fill_manual(values=c("#74A9CF",
"#08306B"),
name = "Type of Condition") +
scale_y_continuous(labels = scales::percent) +
labs(title = "Comparison of Primary Diagnosis Conditions",
y = "Percentage of Visits to the ER") + geom_text(aes(label = round(mean_prec)),position = position_dodge(width = 0.9), vjust = 0)
#Plot of % by SCP or Williamson (DODGE GRAPH)
ggplot(data = tn_diag3, aes(x = scp,y = mean_prec/100, fill = type)) +
geom_col(position = "dodge")+
labs(title = "Comparison of Primary Diagnosis Conditions",
y = "Percentage of Visits",
x = '') +
scale_fill_manual(values=c("#74A9CF",
"#08306B"),
name = "Type of Condition") +
scale_y_continuous(labels = scales::percent) +
labs(title = "Comparison of Primary Diagnosis Conditions",
y = "Percentage of Visits to the ER") + geom_text(aes(label = round(mean_prec)),position = position_dodge(width = 0.9), vjust = .5)
#Plot of % by SCP or Williamson (DODGE GRAPH)
ggplot(data = tn_diag3, aes(x = scp,y = mean_prec/100, fill = type)) +
geom_col(position = "dodge")+
labs(title = "Comparison of Primary Diagnosis Conditions",
y = "Percentage of Visits",
x = '') +
scale_fill_manual(values=c("#74A9CF",
"#08306B"),
name = "Type of Condition") +
scale_y_continuous(labels = scales::percent) +
labs(title = "Comparison of Primary Diagnosis Conditions",
y = "Percentage of Visits to the ER") + geom_text(aes(label = round(mean_prec)),position = position_dodge(width = 0.9), vjust = -.5)
#Plot of % by SCP or Williamson (DODGE GRAPH)
ggplot(data = tn_diag3, aes(x = scp,y = mean_prec/100, fill = type)) +
geom_col(position = "dodge")+
labs(title = "Comparison of Primary Diagnosis Conditions",
y = "Percentage of Visits",
x = '') +
scale_fill_manual(values=c("#74A9CF",
"#08306B"),
name = "Type of Condition") +
scale_y_continuous(labels = scales::percent) +
labs(title = "Comparison of Primary Diagnosis Conditions",
y = "Percentage of Visits to the ER") + geom_text(aes(label = round(mean_prec + "%")),position = position_dodge(width = 0.9), vjust = -.5)
#Plot of % by SCP or Williamson (DODGE GRAPH)
ggplot(data = tn_diag3, aes(x = scp,y = mean_prec/100, fill = type)) +
geom_col(position = "dodge")+
labs(title = "Comparison of Primary Diagnosis Conditions",
y = "Percentage of Visits",
x = '') +
scale_fill_manual(values=c("#74A9CF",
"#08306B"),
name = "Type of Condition") +
scale_y_continuous(labels = scales::percent) +
labs(title = "Comparison of Primary Diagnosis Conditions",
y = "Percentage of Visits to the ER") + geom_text(aes(label = round(mean_prec)+ "%"),position = position_dodge(width = 0.9), vjust = -.5)
#Plot of % by SCP or Williamson (DODGE GRAPH)
ggplot(data = tn_diag3, aes(x = scp,y = mean_prec/100, fill = type)) +
geom_col(position = "dodge")+
labs(title = "Comparison of Primary Diagnosis Conditions",
y = "Percentage of Visits",
x = '') +
scale_fill_manual(values=c("#74A9CF",
"#08306B"),
name = "Type of Condition") +
scale_y_continuous(labels = scales::percent) +
labs(title = "Comparison of Primary Diagnosis Conditions",
y = "Percentage of Visits to the ER") + geom_text(aes(label = round(mean_prec),"%"),position = position_dodge(width = 0.9), vjust = -.5)
#Plot of % by SCP or Williamson (DODGE GRAPH)
ggplot(data = tn_diag3, aes(x = scp,y = mean_prec/100, fill = type)) +
geom_col(position = "dodge")+
labs(title = "Comparison of Primary Diagnosis Conditions",
y = "Percentage of Visits",
x = '') +
scale_fill_manual(values=c("#74A9CF",
"#08306B"),
name = "Type of Condition") +
scale_y_continuous(labels = scales::percent) +
labs(title = "Comparison of Primary Diagnosis Conditions",
y = "Percentage of Visits to the ER") + geom_text(aes(label = round(mean_prec)"%"),position = position_dodge(width = 0.9), vjust = -.5)
#Plot of % by SCP or Williamson (DODGE GRAPH)
ggplot(data = tn_diag3, aes(x = scp,y = mean_prec/100, fill = type)) +
geom_col(position = "dodge")+
labs(title = "Comparison of Primary Diagnosis Conditions",
y = "Percentage of Visits",
x = '') +
scale_fill_manual(values=c("#74A9CF",
"#08306B"),
name = "Type of Condition") +
scale_y_continuous(labels = scales::percent) +
labs(title = "Comparison of Primary Diagnosis Conditions",
y = "Percentage of Visits to the ER") + geom_text(aes(label = scales::percent(round(mean_prec))),position = position_dodge(width = 0.9), vjust = -.5)
#Plot of % by SCP or Williamson (DODGE GRAPH)
ggplot(data = tn_diag3, aes(x = scp,y = mean_prec/100, fill = type)) +
geom_col(position = "dodge")+
labs(title = "Comparison of Primary Diagnosis Conditions",
y = "Percentage of Visits",
x = '') +
scale_fill_manual(values=c("#74A9CF",
"#08306B"),
name = "Type of Condition") +
scale_y_continuous(labels = scales::percent) +
labs(title = "Comparison of Primary Diagnosis Conditions",
y = "Percentage of Visits to the ER") + geom_text(aes(label = scales::percent(round(mean_prec))/100),position = position_dodge(width = 0.9), vjust = -.5)
#Plot of % by SCP or Williamson (DODGE GRAPH)
ggplot(data = tn_diag3, aes(x = scp,y = mean_prec/100, fill = type)) +
geom_col(position = "dodge")+
labs(title = "Comparison of Primary Diagnosis Conditions",
y = "Percentage of Visits",
x = '') +
scale_fill_manual(values=c("#74A9CF",
"#08306B"),
name = "Type of Condition") +
scale_y_continuous(labels = scales::percent) +
labs(title = "Comparison of Primary Diagnosis Conditions",
y = "Percentage of Visits to the ER") + geom_text(aes(label = scales::percent(round(mean_prec)/100)),position = position_dodge(width = 0.9), vjust = -.5)
#Plot of % by SCP or Williamson (DODGE GRAPH)
ggplot(data = tn_diag3, aes(x = scp,y = mean_prec/100, fill = type)) +
geom_col(position = "dodge")+
labs(title = "Comparison of Primary Diagnosis Conditions",
y = "Percentage of Visits",
x = '') +
scale_fill_manual(values=c("#74A9CF",
"#08306B"),
name = "Type of Condition") +
scale_y_continuous(labels = scales::percent) +
labs(title = "Comparison of Primary Diagnosis Conditions",
y = "Percentage of Visits to the ER") + geom_text(aes(label = scales::percent(mean_prec)),position = position_dodge(width = 0.9), vjust = -.5)
#Plot of % by SCP or Williamson (DODGE GRAPH)
ggplot(data = tn_diag3, aes(x = scp,y = mean_prec/100, fill = type)) +
geom_col(position = "dodge")+
labs(title = "Comparison of Primary Diagnosis Conditions",
y = "Percentage of Visits",
x = '') +
scale_fill_manual(values=c("#74A9CF",
"#08306B"),
name = "Type of Condition") +
scale_y_continuous(labels = scales::percent) +
labs(title = "Comparison of Primary Diagnosis Conditions",
y = "Percentage of Visits to the ER") + geom_text(aes(label = scales::percent(mean_prec/100)),position = position_dodge(width = 0.9), vjust = -.5)
write.csv(tn_diag2, "tn_conditions.csv")
getwd()
# Chunk 1: setup
library(flexdashboard)
library(shiny)
library(tidyverse)
library(DT)
library(plotly)
library(leaflet)
library(leaflet.extras)
library(gsheet)
library(rgdal)
library(raster)
library(tigris)
library(RColorBrewer)
library(ggVennDiagram)
library(forcats)
library(lubridate)
library(patchwork)
library(tidyr)
pdf(NULL)
setwd("/Users/erteam/Desktop/Syndemic Project/syndemic")
# Reading in data of locations of SEP
locations<-gsheet2tbl("https://docs.google.com/spreadsheets/d/1sb4P_7-UkcpkmENZ_DpMI45wRY7oItIFbv-0suLmz7U/edit?usp=sharing")
# Creating a column named label
locations<-locations %>% mutate(label = paste0("Name : ",name,"<br/>"," Address :",address,"<br/>","Phone :",phone,"<br/>" ) %>% lapply(htmltools::HTML))
# Reading in master data
masterdata<-read_csv("masterdataphi.csv")
# Reading in population by county data
popbycounty<-read_csv("SDC_TN_PL20_CountyPopChange.csv")
popbycounty<-popbycounty %>% dplyr::select(County,`Population 2020`) %>% rename(county = County) %>% mutate(county = paste(county,"County"))
# Reading in data of zip codes and their county name
zips<-read.csv("countybyid.csv")
# Merging master data with county by ids
masterdata<-inner_join(zips,masterdata, by = "...1" ) %>% filter(state == "TN")
masterdata<-inner_join(popbycounty,masterdata, by = "county")
masterdata<-masterdata %>% separate(col=Patient_Race_Ethnicity,into=c( "Race", "Ethnicity"),sep= 1)
# Reading in spatial polygon data for map
s <- shapefile("/Users/erteam/Desktop/Syndemic Project/tl_2021_us_county")
boundaries <-subset(s, s@data$STATEFP == "47")
# Making color pallet based on SUD in county
paldata<-masterdata %>% filter(sud) %>% group_by(county) %>% summarise(total = n())
# Adding county total to spatial data frame
boundaries<-geo_join(boundaries, paldata, by_sp ="NAMELSAD" , by_df ="county")
boundaries<-geo_join(boundaries, popbycounty, by_sp = "NAMELSAD", by_df ="county")
boundaries@data<-boundaries@data %>% mutate(percap = (total/Population.2020)*100)
mean(boundaries@data$percap)
# Making palette for shading of map
pal <- colorNumeric(
palette = "Blues",
domain = boundaries@data$percap)
#
syringes <- makeAwesomeIcon(
icon = "hospital user",
iconColor = "#FAFBFE",
markerColor ="purple",
library = "fa"
)
#Formats data, adds a months column, makes an age groups column and then a quarter columns for the year
md_phi_jacob <-
masterdata %>%
mutate(creation_dt = mdy(creation_dt)) %>%
mutate(months = month(creation_dt)) %>%
mutate(Age_Groups = ifelse(Age %in% 0:17, '0-17',
ifelse(Age %in% 18:24, '18-24',
ifelse(Age %in% 25:34, '25-34',
ifelse(Age %in% 35:44, '35-44',
ifelse(Age %in% 45:54, '45-54',
ifelse(Age %in% 55:64, '55-64', '65+'))))))) %>%
mutate(quarter = ifelse(months %in% 1:3, 1,
ifelse(months %in% 4:6, 2,
ifelse(months %in% 7:9, 3, 4)))) %>%
filter(!Age_Groups == '65+', !Age_Groups == '0-17')
# Chunk 2: reactive
df_map<-reactive({
if("All" %in% input$county_select){
return(boundaries)
}
# Select only counties that have been selected!
df<-subset(boundaries, boundaries@data$NAMELSAD %in% input$county_select)
return(df)
})
df1<-reactive({
if("All" %in% input$race & "All" %in% input$eth ){
df<-md_phi_jacob %>% filter(Patient_Sex %in% input$gender)%>%
filter(sud&endo) %>%
group_by(Age_Groups, quarter) %>%
tally()
return(df)
}
#select
if("All" %in% input$race & !("All" %in% input$eth) ){
df<-md_phi_jacob %>% filter(Ethnicity %in% input$eth)%>%
filter(Patient_Sex %in% input$gender)%>%
filter(sud&endo) %>%
group_by(Age_Groups, quarter) %>%
tally()
return(df)
}
# Select
if(!("All" %in% input$race) & "All" %in% input$eth){
df<-md_phi_jacob %>% filter(Race %in% input$Race)%>%
filter(Patient_Sex %in% input$gender)%>%
filter(sud&endo) %>%
group_by(Age_Groups, quarter) %>%
tally()
return(df)
}
else{
df<-md_phi_jacob %>% filter(Race %in% input$Race,Ethnicity %in% input$eth)%>%
filter(Patient_Sex %in% input$gender)%>%
filter(sud&endo) %>%
group_by(Age_Groups, quarter) %>%
tally()
return(df)
}
})
knitr::include_graphics("/Users/erteam/Desktop/Syndemic Project/syndemic/HomePage.png")
View(md_phi_jacob)
ggplot(data = md_phi_jacob,
aes(x = quarter)) +
geom_bar()
source("~/Desktop/Syndemic Project/syndemic/syndemic_graphs_jacob.R", echo=TRUE)
zips<-read_csv("zip_code_database.csv")
zips<-zips%>% select(zip,state,county)
setwd("~/Desktop/Syndemic Project/syndemic")
zips<-read_csv("zip_code_database.csv")
zips<-zips%>% select(zip,state,county)
zips<-zips %>% select(zip,state,county)
zips<-zips %>% select(zip,state,county)
?ggVennDiagram
#Creates a venn diagram showing overlap in SUDS and syndemic related ICD-10s
ggVennDiagram(syndemic_list,
label_size = 4,
label_alpha = 0.3,
label = c('both')) +
theme(legend.position = '0') +
labs(title = 'Hospitalization overlap for substance use disorder (SUDs) and infectious sequela of interest',
subtitle = 'TN Hospitals 2019 | Inpatient and Outpatient',
caption = 'End the Syndemic | DataLab 2022') +
scale_color_manual(values = c('black','black')) +
scale_fill_gradientn(colors = c('#555555', '#C11701', '#555555', '#1B365D'))
