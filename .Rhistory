<<<<<<< HEAD
=======
<<<<<<< HEAD
=======
<<<<<<< HEAD
label = c('count')) +
theme(legend.position = '0') +
labs(caption = 'End the Syndemic | DataLab 2022',
title = 'Hospitalizations overlap for substance use disorder (SUDs) and infectious sequela of interest',
subtitle = 'TN Hospitals 2019') +
scale_fill_distiller(palette = "RdBu", direction = 1) +
scale_color_brewer(palette = "Set1")
#Creates a list of SUDs & ENDO or SSTVI for the ggvenn package to read
syndemic_list <-
list('SUDs' = which(md$sud),
'SSTVIs or Endocarditis' = which(md$endo | md$sstvi))
#Creates a venn diagram showing overlap in SUDS and syndemic related ICD-10s
ggVennDiagram(syndemic_list,
label_size = 4,
label_alpha = 0.3,
label = c('count')) +
theme(legend.position = '0') +
labs(caption = 'End the Syndemic | DataLab 2022',
title = 'Hospitalizations overlap for substance use disorder (SUDs) and infectious sequela of interest',
subtitle = 'TN Hospitals 2019') +
scale_fill_distiller(palette = "RdBu", direction = 1) +
scale_color_brewer(palette = "Set1")
for (i in range(5)),
print('Up my sleeves')
source("~/DataLab/Syndemic/syndemic/syndemic_graphs_jacob.R", echo=TRUE)
######################## Trends in hospitalization incidence rates by age group ----
age <- md %>% mutate(Ages = ifelse(Age %in% 0:17, 0-17, 'ttt'))
View(age)
######################## Trends in hospitalization incidence rates by age group ----
age <- md %>% mutate(Ages = ifelse(Age %in% 0:17, '0-17', 'ttt'))
######################## Trends in hospitalization incidence rates by age group ----
age <- md %>% mutate(Ages = ifelse(Age %in% 0:17, '0-17',
Age %in% 18:24, '18-24',
Age %in% 25:34, '25-34',
Age %in% 35:44, '35-44',
Age %in% 45:54, '45-54',
Age %in% 55:64, '55-64', '65+'))
######################## Trends in hospitalization incidence rates by age group ----
age <- md %>% mutate(Ages = ifelse(Age %in% 0:17, '0-17',
Age %in% 18:24, '18-24',
Age %in% 25:34, '25-34',
Age %in% 35:44, '35-44',
Age %in% 45:54, '45-54',
Age %in% 55:64, '55-64', '65+'))
######################## Trends in hospitalization incidence rates by age group ----
age <- md %>% mutate(Ages = ifelse(Age %in% 0:17, '0-17',
ifelse(Age %in% 18:24, '18-24',
ifelse(Age %in% 25:34, '25-34',
ifelse(Age %in% 35:44, '35-44',
ifelse(Age %in% 45:54, '45-54',
ifelse(Age %in% 55:64, '55-64', '65+'))))))))
######################## Trends in hospitalization incidence rates by age group ----
age <- md %>% mutate(Ages = ifelse(Age %in% 0:17, '0-17',
ifelse(Age %in% 18:24, '18-24',
ifelse(Age %in% 25:34, '25-34',
ifelse(Age %in% 35:44, '35-44',
ifelse(Age %in% 45:54, '45-54',
ifelse(Age %in% 55:64, '55-64', '65+')))))))
View(age)
#Adds same age groups as used in michigan study to the master dataset
md <- md %>% mutate(Age_Groups = ifelse(Age %in% 0:17, '0-17',
ifelse(Age %in% 18:24, '18-24',
ifelse(Age %in% 25:34, '25-34',
ifelse(Age %in% 35:44, '35-44',
ifelse(Age %in% 45:54, '45-54',
ifelse(Age %in% 55:64, '55-64', '65+')))))))
View(md)
source("~/DataLab/Syndemic/syndemic/syndemic_graphs_jacob.R", echo=TRUE)
?palette
#Creates a venn diagram showing overlap in SUDS and syndemic related ICD-10s
ggVennDiagram(syndemic_list,
label_size = 4,
label_alpha = 0.3,
label = c('count')) +
theme(legend.position = '0') +
labs(caption = 'End the Syndemic | DataLab 2022',
title = 'Hospitalizations overlap for substance use disorder (SUDs) and infectious sequela of interest',
subtitle = 'TN Hospitals 2019') +
scale_fill_distiller(palette = "Set1", direction = 1) +
scale_color_brewer(palette = "Set1")
#Creates a venn diagram showing overlap in SUDS and syndemic related ICD-10s
ggVennDiagram(syndemic_list,
label_size = 4,
label_alpha = 0.3,
label = c('count')) +
theme(legend.position = '0') +
labs(caption = 'End the Syndemic | DataLab 2022',
title = 'Hospitalizations overlap for substance use disorder (SUDs) and infectious sequela of interest',
subtitle = 'TN Hospitals 2019') +
scale_fill_distiller(palette = "Set2", direction = 1) +
scale_color_brewer(palette = "Set1")
#Creates a venn diagram showing overlap in SUDS and syndemic related ICD-10s
ggVennDiagram(syndemic_list,
label_size = 4,
label_alpha = 0.3,
label = c('count')) +
theme(legend.position = '0') +
labs(caption = 'End the Syndemic | DataLab 2022',
title = 'Hospitalizations overlap for substance use disorder (SUDs) and infectious sequela of interest',
subtitle = 'TN Hospitals 2019') +
scale_fill_distiller(palette = "Set3", direction = 1) +
scale_color_brewer(palette = "Set1")
#Creates a venn diagram showing overlap in SUDS and syndemic related ICD-10s
ggVennDiagram(syndemic_list,
label_size = 4,
label_alpha = 0.3,
label = c('count')) +
theme(legend.position = '0') +
labs(caption = 'End the Syndemic | DataLab 2022',
title = 'Hospitalizations overlap for substance use disorder (SUDs) and infectious sequela of interest',
subtitle = 'TN Hospitals 2019') +
scale_fill_distiller(palette = "Set3", direction = 1) +
scale_color_brewer(palette = "Set3")
#Creates a venn diagram showing overlap in SUDS and syndemic related ICD-10s
ggVennDiagram(syndemic_list,
label_size = 4,
label_alpha = 0.3,
label = c('count')) +
theme(legend.position = '0') +
labs(caption = 'End the Syndemic | DataLab 2022',
title = 'Hospitalizations overlap for substance use disorder (SUDs) and infectious sequela of interest',
subtitle = 'TN Hospitals 2019') +
scale_fill_distiller(palette = "Set3", direction = 1) +
scale_color_brewer(palette = "Set2")
#Creates a venn diagram showing overlap in SUDS and syndemic related ICD-10s
ggVennDiagram(syndemic_list,
label_size = 4,
label_alpha = 0.3,
label = c('count')) +
theme(legend.position = '0') +
labs(caption = 'End the Syndemic | DataLab 2022',
title = 'Hospitalizations overlap for substance use disorder (SUDs) and infectious sequela of interest',
subtitle = 'TN Hospitals 2019') +
scale_fill_distiller(palette = "Set3", direction = 3) +
scale_color_brewer(palette = "Set2")
#Creates a venn diagram showing overlap in SUDS and syndemic related ICD-10s
ggVennDiagram(syndemic_list,
label_size = 4,
label_alpha = 0.3,
label = c('count')) +
theme(legend.position = '0') +
labs(caption = 'End the Syndemic | DataLab 2022',
title = 'Hospitalizations overlap for substance use disorder (SUDs) and infectious sequela of interest',
subtitle = 'TN Hospitals 2019') +
scale_fill_distiller(palette = "Set3", direction = 1) +
scale_color_brewer(palette = "Set2")
#Creates a venn diagram showing overlap in SUDS and syndemic related ICD-10s
ggVennDiagram(syndemic_list,
label_size = 4,
label_alpha = 0.3,
label = c('count')) +
theme(legend.position = '0') +
labs(caption = 'End the Syndemic | DataLab 2022',
title = 'Hospitalizations overlap for substance use disorder (SUDs) and infectious sequela of interest',
subtitle = 'TN Hospitals 2019') +
scale_fill_distiller(palette = "Blues", direction = 1) +
scale_color_brewer(palette = "Set2")
#Creates a venn diagram showing overlap in SUDS and syndemic related ICD-10s
ggVennDiagram(syndemic_list,
label_size = 4,
label_alpha = 0.3,
label = c('count')) +
theme(legend.position = '0') +
labs(caption = 'End the Syndemic | DataLab 2022',
title = 'Hospitalizations overlap for substance use disorder (SUDs) and infectious sequela of interest',
subtitle = 'TN Hospitals 2019') +
scale_fill_distiller(palette = "OrRd", direction = 1) +
scale_color_brewer(palette = "Set2")
source("~/DataLab/Syndemic/syndemic/syndemic_graphs_jacob.R", echo=TRUE)
library(RColorBrewer)
#Creates palette we will use
mycols <- colors()[c(8, 5, 30, 53, 118, 72)]
#Creates a venn diagram showing overlap in SUDS and syndemic related ICD-10s
ggVennDiagram(syndemic_list,
label_size = 4,
label_alpha = 0.3,
label = c('count')) +
theme(legend.position = '0') +
labs(title = 'Hospitalization overlap for substance use disorder (SUDs) and infectious sequela of interest',
subtitle = 'TN Hospitals 2019 | Inpatient and Outpatient',
caption = 'End the Syndemic | DataLab 2022') +
scale_fill_distiller(palette = "mycols", direction = 1) +
scale_color_brewer(palette = "Set2")
########################
library(tidyverse)
library(ggVennDiagram)
library(forcats)
library(lubridate)
#Creates a venn diagram showing overlap in SUDS and syndemic related ICD-10s
ggVennDiagram(syndemic_list,
label_size = 4,
label_alpha = 0.3,
label = c('count')) +
theme(legend.position = '0') +
labs(title = 'Hospitalization overlap for substance use disorder (SUDs) and infectious sequela of interest',
subtitle = 'TN Hospitals 2019 | Inpatient and Outpatient',
caption = 'End the Syndemic | DataLab 2022') +
scale_fill_distiller(palette = "mycols", direction = 1) +
=======
<<<<<<< HEAD
=======
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
filter(grepl('endocarditis |
sepsis |
osteomyelitis |
Human immunodef virus|
HIV |
syphilis |
gonorrhoea |
chlamydia |
trichomoniasis |
sexually transmitted infection |
hepatitis A |
hepatitis B |
hepatitis C |
hepatitis D |
hepatitis E |
substance use',
Details,
ignore.case = TRUE))
View(ICD_Filtered)
#Filters Codebook to only words we deem relevant
ICD_Filtered <- ICD %>%
filter(grepl('endocarditis|sepsis|osteomyelitis|Human immunodef virus|HIV|syphilis|gonorrhoea|chlamydia|trichomoniasis|sexually transmitted infection|hepatitis A|hepatitis B|hepatitis C|hepatitis D|hepatitis E|substance use',
Details,
ignore.case = TRUE))
#Filters out unnecessary columns
train <-df %>% select(
-Type_Bill,
-Fed_Tax_SubID,
-Fed_Tax_Num,
-Admission_Type,
-Admission_Source,
-Do_Not_Resuscitate,
-Accident_St,
-starts_with("Units_Service"), #[1:18]
-Primary_Health_Plan_Id,
-Secondary_Health_Plan_Id,
-Tertiary_Health_Plan_Id,
-Primary_Patient_Rel_Insr,
-Secondary_Patient_Rel_Insr,
-Tertiary_Patient_Rel_Insr,
-Dx_Px_Qualifier,
-starts_with("POA"), #[1:18]
-starts_with("Patient_Reason_Visit"),#[1:3],
-Prospect_Pay_Code,
-starts_with("Ecode"), #[1:3]
-starts_with("E_POA"), #[1:3]
-Type_ER_Visit,
-Outcome_ER_Visit,
-Inpatient_Flag,
-ER_Flag,
-PET_Flag,
-ASTC_Flag,
-Lithotripsy_Flag,
-MRI_MRA_Flag,
-Megavolt_Rad_Flag,
-CT_Flag,
-Fatal_Error_Flag,
-starts_with("Record_Num"), #[1:2]
-Bill_End,
-MUL,
-Patient_ID,
-TN_Co_Res,
-Payer_A,
-Payer_B,
-Payer_C,
-Amount_Counter,
-Race,
-LOS,
-DRG_Rank,
-Inpat_Record_Flag,
-ER_Record_Flag,
-ASTC_Record_Flag,
-Obs_23hr_Record_Flag,
-CON_Flag,
-Cumulative_Record_Flag,
-Reportable_Flag,
-TN_Co_Unk,
-Processing_Period,
-MS_MDC,
-MS_DRG,
-MS_DRG_4digit,
-HAC,
-Admit_From_ED_Flag,
-Wrong_Claim
=======
=======
>>>>>>> 81e1b20d6f1b39941438be5eb12032c1128e387d
=======
>>>>>>> 81e1b20d6f1b39941438be5eb12032c1128e387d
>>>>>>> e2e518018e1e563a36235d19e7f8d9bbce4d78cc
scale_color_brewer(palette = "Set2")
#Creates a venn diagram showing overlap in SUDS and syndemic related ICD-10s
ggVennDiagram(syndemic_list,
label_size = 4,
label_alpha = 0.3,
label = c('count')) +
theme(legend.position = '0') +
labs(title = 'Hospitalization overlap for substance use disorder (SUDs) and infectious sequela of interest',
subtitle = 'TN Hospitals 2019 | Inpatient and Outpatient',
caption = 'End the Syndemic | DataLab 2022') +
scale_fill_distiller(palette = mycols, direction = 1) +
scale_color_brewer(palette = "Set2")
#Creates a venn diagram showing overlap in SUDS and syndemic related ICD-10s
ggVennDiagram(syndemic_list,
label_size = 4,
label_alpha = 0.3,
>>>>>>> d937f23b5f4ede4fdec0653f24d6af3a07359c47
label = c('count')) +
theme(legend.position = '0') +
labs(title = 'Hospitalization overlap for substance use disorder (SUDs) and infectious sequela of interest',
subtitle = 'TN Hospitals 2019 | Inpatient and Outpatient',
caption = 'End the Syndemic | DataLab 2022') +
scale_fill_distiller(palette = 'Set2', direction = 1) +
scale_color_brewer(palette = mycols)
"Set2"
#Creates a venn diagram showing overlap in SUDS and syndemic related ICD-10s
ggVennDiagram(syndemic_list,
label_size = 4,
label_alpha = 0.3,
label = c('count')) +
theme(legend.position = '0') +
labs(title = 'Hospitalization overlap for substance use disorder (SUDs) and infectious sequela of interest',
subtitle = 'TN Hospitals 2019 | Inpatient and Outpatient',
caption = 'End the Syndemic | DataLab 2022') +
scale_fill_distiller(palette = 'Set2', direction = 1) +
scale_color_brewer(palette = "Set2")
library(RColorBrewer)
#Creates a venn diagram showing overlap in SUDS and syndemic related ICD-10s
ggVennDiagram(syndemic_list,
label_size = 4,
label_alpha = 0.3,
label = c('count')) +
theme(legend.position = '0') +
labs(title = 'Hospitalization overlap for substance use disorder (SUDs) and infectious sequela of interest',
subtitle = 'TN Hospitals 2019 | Inpatient and Outpatient',
caption = 'End the Syndemic | DataLab 2022') +
scale_fill_distiller(palette = 'mycols', direction = 1) +
scale_color_brewer(palette = "Set2")
#Creates a venn diagram showing overlap in SUDS and syndemic related ICD-10s
ggVennDiagram(syndemic_list,
label_size = 4,
label_alpha = 0.3,
label = c('count')) +
theme(legend.position = '0') +
labs(title = 'Hospitalization overlap for substance use disorder (SUDs) and infectious sequela of interest',
subtitle = 'TN Hospitals 2019 | Inpatient and Outpatient',
caption = 'End the Syndemic | DataLab 2022') +
scale_fill_distiller(palette = mycols, direction = 1) +
scale_color_brewer(palette = "Set2")
source("~/DataLab/Syndemic/syndemic/syndemic_graphs_jacob.R", echo=TRUE)
library(lubridate)
source("~/DataLab/Syndemic/syndemic/syndemic_graphs_jacob.R", echo=TRUE)
?scale_color_manual
scale_color_manual(values = c('red','white','blue')
subtitle = 'TN Hospitals 2019 | Inpatient and Outpatient',
#Creates a venn diagram showing overlap in SUDS and syndemic related ICD-10s
ggVennDiagram(syndemic_list,
label_size = 4,
label_alpha = 0.3,
label = c('count')) +
theme(legend.position = '0') +
labs(title = 'Hospitalization overlap for substance use disorder (SUDs) and infectious sequela of interest',
subtitle = 'TN Hospitals 2019 | Inpatient and Outpatient',
caption = 'End the Syndemic | DataLab 2022') +
scale_color_manual(values = c('red','white','blue'))
#Creates a venn diagram showing overlap in SUDS and syndemic related ICD-10s
ggVennDiagram(syndemic_list,
label_size = 4,
label_alpha = 0.3,
label = c('count')) +
theme(legend.position = '0') +
labs(title = 'Hospitalization overlap for substance use disorder (SUDs) and infectious sequela of interest',
subtitle = 'TN Hospitals 2019 | Inpatient and Outpatient',
caption = 'End the Syndemic | DataLab 2022') +
scale_color_manual(values = c('red','white','blue', 'red'))
#Creates a venn diagram showing overlap in SUDS and syndemic related ICD-10s
ggVennDiagram(syndemic_list,
label_size = 4,
label_alpha = 0.3,
label = c('count')) +
theme(legend.position = '0') +
labs(title = 'Hospitalization overlap for substance use disorder (SUDs) and infectious sequela of interest',
subtitle = 'TN Hospitals 2019 | Inpatient and Outpatient',
caption = 'End the Syndemic | DataLab 2022') +
scale_color_manual(values = c('red','white','blue', 'red', 'red'))
#Creates a venn diagram showing overlap in SUDS and syndemic related ICD-10s
ggVennDiagram(syndemic_list,
label_size = 4,
label_alpha = 0.3,
label = c('count')) +
theme(legend.position = '0') +
labs(title = 'Hospitalization overlap for substance use disorder (SUDs) and infectious sequela of interest',
subtitle = 'TN Hospitals 2019 | Inpatient and Outpatient',
caption = 'End the Syndemic | DataLab 2022') +
scale_color_manual(values = c('red','white','blue'))
#Creates a venn diagram showing overlap in SUDS and syndemic related ICD-10s
ggVennDiagram(syndemic_list,
label_size = 4,
label_alpha = 0.3,
label = c('count')) +
theme(legend.position = '0') +
labs(title = 'Hospitalization overlap for substance use disorder (SUDs) and infectious sequela of interest',
subtitle = 'TN Hospitals 2019 | Inpatient and Outpatient',
caption = 'End the Syndemic | DataLab 2022') +
scale_color_manual(values = c('black','black','blue'))
#Creates a venn diagram showing overlap in SUDS and syndemic related ICD-10s
ggVennDiagram(syndemic_list,
label_size = 4,
label_alpha = 0.3,
label = c('count')) +
theme(legend.position = '0') +
labs(title = 'Hospitalization overlap for substance use disorder (SUDs) and infectious sequela of interest',
subtitle = 'TN Hospitals 2019 | Inpatient and Outpatient',
caption = 'End the Syndemic | DataLab 2022') +
scale_color_manual(values = c('black','black','blue', 'red'))
#Creates a venn diagram showing overlap in SUDS and syndemic related ICD-10s
ggVennDiagram(syndemic_list,
label_size = 4,
label_alpha = 0.3,
label = c('count')) +
theme(legend.position = '0') +
labs(title = 'Hospitalization overlap for substance use disorder (SUDs) and infectious sequela of interest',
subtitle = 'TN Hospitals 2019 | Inpatient and Outpatient',
caption = 'End the Syndemic | DataLab 2022') +
<<<<<<< HEAD
scale_color_manual(values = c('black','black','red'))
#Creates a venn diagram showing overlap in SUDS and syndemic related ICD-10s
ggVennDiagram(syndemic_list,
label_size = 4,
label_alpha = 0.3,
label = c('count')) +
theme(legend.position = '0') +
labs(title = 'Hospitalization overlap for substance use disorder (SUDs) and infectious sequela of interest',
subtitle = 'TN Hospitals 2019 | Inpatient and Outpatient',
caption = 'End the Syndemic | DataLab 2022') +
scale_color_manual(values = c('black','black','red'))
#Creates a venn diagram showing overlap in SUDS and syndemic related ICD-10s
ggVennDiagram(syndemic_list,
label_size = 4,
label_alpha = 0.3,
label = c('count')) +
theme(legend.position = '0') +
labs(title = 'Hospitalization overlap for substance use disorder (SUDs) and infectious sequela of interest',
subtitle = 'TN Hospitals 2019 | Inpatient and Outpatient',
caption = 'End the Syndemic | DataLab 2022') +
scale_color_manual(values = c('black','black')) +
scale_fill_manual(values = c('red'))
#Creates a venn diagram showing overlap in SUDS and syndemic related ICD-10s
ggVennDiagram(syndemic_list,
label_size = 4,
label_alpha = 0.3,
label = c('count')) +
theme(legend.position = '0') +
labs(title = 'Hospitalization overlap for substance use disorder (SUDs) and infectious sequela of interest',
subtitle = 'TN Hospitals 2019 | Inpatient and Outpatient',
caption = 'End the Syndemic | DataLab 2022') +
scale_color_manual(values = c('black','black')) +
scale_fill_discrete(values = c('red'))
manual
#Creates a venn diagram showing overlap in SUDS and syndemic related ICD-10s
ggVennDiagram(syndemic_list,
label_size = 4,
label_alpha = 0.3,
label = c('count')) +
theme(legend.position = '0') +
labs(title = 'Hospitalization overlap for substance use disorder (SUDs) and infectious sequela of interest',
subtitle = 'TN Hospitals 2019 | Inpatient and Outpatient',
caption = 'End the Syndemic | DataLab 2022') +
scale_color_manual(values = c('black','black')) +
scale_fill_manual(values = 'red')
#Creates a venn diagram showing overlap in SUDS and syndemic related ICD-10s
ggVennDiagram(syndemic_list,
label_size = 4,
label_alpha = 0.3,
label = c('count')) +
theme(legend.position = '0') +
labs(title = 'Hospitalization overlap for substance use disorder (SUDs) and infectious sequela of interest',
subtitle = 'TN Hospitals 2019 | Inpatient and Outpatient',
caption = 'End the Syndemic | DataLab 2022') +
scale_color_manual(values = c('black','black')) +
scale_fill_disteller(values = c('red'))
#Creates a venn diagram showing overlap in SUDS and syndemic related ICD-10s
ggVennDiagram(syndemic_list,
label_size = 4,
label_alpha = 0.3,
label = c('count')) +
theme(legend.position = '0') +
labs(title = 'Hospitalization overlap for substance use disorder (SUDs) and infectious sequela of interest',
subtitle = 'TN Hospitals 2019 | Inpatient and Outpatient',
caption = 'End the Syndemic | DataLab 2022') +
scale_color_manual(values = c('black','black')) +
scale_fill_distiller(values = c('red'))
#Creates a venn diagram showing overlap in SUDS and syndemic related ICD-10s
ggVennDiagram(syndemic_list,
label_size = 4,
label_alpha = 0.3,
label = c('count')) +
theme(legend.position = '0') +
labs(title = 'Hospitalization overlap for substance use disorder (SUDs) and infectious sequela of interest',
subtitle = 'TN Hospitals 2019 | Inpatient and Outpatient',
caption = 'End the Syndemic | DataLab 2022') +
scale_color_manual(values = c('black','black')) +
scale_fill_gradientn(values = c('red'))
#Creates a venn diagram showing overlap in SUDS and syndemic related ICD-10s
ggVennDiagram(syndemic_list,
label_size = 4,
label_alpha = 0.3,
label = c('count')) +
theme(legend.position = '0') +
labs(title = 'Hospitalization overlap for substance use disorder (SUDs) and infectious sequela of interest',
subtitle = 'TN Hospitals 2019 | Inpatient and Outpatient',
caption = 'End the Syndemic | DataLab 2022') +
scale_color_manual(values = c('black','black')) +
scale_fill_gradientn(colors = c('red'))
#Creates a venn diagram showing overlap in SUDS and syndemic related ICD-10s
ggVennDiagram(syndemic_list,
label_size = 4,
label_alpha = 0.3,
label = c('count')) +
theme(legend.position = '0') +
labs(title = 'Hospitalization overlap for substance use disorder (SUDs) and infectious sequela of interest',
subtitle = 'TN Hospitals 2019 | Inpatient and Outpatient',
caption = 'End the Syndemic | DataLab 2022') +
scale_color_manual(values = c('black','black')) +
scale_fill_gradientn(colors = c('red', 'blue'))
#Creates a venn diagram showing overlap in SUDS and syndemic related ICD-10s
ggVennDiagram(syndemic_list,
label_size = 4,
label_alpha = 0.3,
label = c('count')) +
theme(legend.position = '0') +
labs(title = 'Hospitalization overlap for substance use disorder (SUDs) and infectious sequela of interest',
subtitle = 'TN Hospitals 2019 | Inpatient and Outpatient',
caption = 'End the Syndemic | DataLab 2022') +
scale_color_manual(values = c('black','black')) +
scale_fill_gradientn(colors = c('red', 'blue', 'yellow'))
#Creates a venn diagram showing overlap in SUDS and syndemic related ICD-10s
ggVennDiagram(syndemic_list,
label_size = 4,
label_alpha = 0.3,
label = c('count')) +
theme(legend.position = '0') +
labs(title = 'Hospitalization overlap for substance use disorder (SUDs) and infectious sequela of interest',
subtitle = 'TN Hospitals 2019 | Inpatient and Outpatient',
caption = 'End the Syndemic | DataLab 2022') +
scale_color_manual(values = c('black','black')) +
scale_fill_gradientn(colors = c('red', 'blue', 'yellow', 'pink'))
#Creates a venn diagram showing overlap in SUDS and syndemic related ICD-10s
ggVennDiagram(syndemic_list,
label_size = 4,
label_alpha = 0.3,
label = c('count')) +
theme(legend.position = '0') +
labs(title = 'Hospitalization overlap for substance use disorder (SUDs) and infectious sequela of interest',
subtitle = 'TN Hospitals 2019 | Inpatient and Outpatient',
caption = 'End the Syndemic | DataLab 2022') +
scale_color_manual(values = c('black','black')) +
scale_fill_gradientn(colors = c('red', 'blue', 'yellow', 'pink', 'green'))
View(md)
source("~/DataLab/Syndemic/syndemic/syndemic_graphs_jacob.R", echo=TRUE)
md <- read_csv('masterdata.csv') %>% filter(TN_Res_Flag == TRUE)
md <- read_csv('masterdata.csv')
md <- read_csv('masterdata.csv') %>% filter(TN_Res_Flag == TRUE)
md <- read_csv('masterdata.csv')
md <- md %>% filter(TN_Res_Flag == TRUE)
md <- read_csv('masterdata.csv') #%>% filter(TN_Res_Flag == TRUE)
md <- read_csv('masterdata.csv') #%>% filter(TN_Res_Flag == TRUE)
md <- read_csv('masterdata.csv') %>% filter(TN_Res_Flag == 'Y')
source("~/DataLab/Syndemic/syndemic/syndemic_graphs_jacob.R", echo=TRUE)
source("~/DataLab/Syndemic/syndemic/syndemic_graphs_jacob.R", echo=TRUE)
setwd("~/DataLab/Syndemic/syndemic")
source("~/DataLab/Syndemic/syndemic/syndemic_graphs_jacob.R", echo=TRUE)
#Sets up an object that groups by primary payer,
#sums the total costs each payer paid for syndemic patients,
#only saves the top 5,
#and then adds a new column, gov, for if it was funded by the government or not
md_top_payers <- md %>%
filter(sud, endo | sstvi) %>%
group_by(Primary_Payer_Class_Cd) %>%
summarise(total = sum(Total_Tot_Chrg)) %>%
arrange(desc(total)) %>%
head(5) %>%
mutate(gov = ifelse(Primary_Payer_Class_Cd %in% c('M','K','J', '8'), TRUE, FALSE))
#Renames the primary payers to their common name
md_top_payers$Primary_Payer_Class_Cd <- fct_recode(md_top_payers$Primary_Payer_Class_Cd,
'Medicare' = 'M',
'Medicare Advantage' = 'K',
'Self-Pay' = 'P',
'Blue Care' = 'J',
'Americhoice' = '8')
#Plots the top 5 primary payers by their costs paid for syndemic patients
ggplot(data = md_top_payers,
aes(y = total/100000000,
x = reorder(Primary_Payer_Class_Cd, -total),
fill = gov ) ) +
geom_col() +
labs(title = 'Total Costs Covered by Top 5 Healthcare Providers',
subtitle = 'TN Hospitals 2019 | Inpatient and Outpatient',
caption = 'End the Syndemic | DataLab 2022',
x = 'Primary Provider',
y = 'Cost Paid (in millions of US dollars)') +
scale_fill_manual(md_top_payers, values = c('#1B365D', '#C11701'),
labels = c('Privately Funded', 'Government Funded', '', '', ''),
name = 'Color Legend:') +
theme(legend.position = 'bottom') +
theme(axis.text.x = element_text(angle = 10))
=======
scale_fill_distiller(palette = "mycols", direction = 1) +
scale_color_brewer(palette = "Set2")
#Creates palette we will use
mycols <- colors([c(8, 5, 30, 53, 118, 72)])
>>>>>>> 81e1b20d6f1b39941438be5eb12032c1128e387d
)
train1 <- train$Diag1 %>%
paste(df$Diag1,
df$Diag2,
df$Diag3,
df$Diag4,
df$Diag5,
df$Diag6,
df$Diag7,
df$Diag8,
df$Diag9,
df$Diag10,
df$Diag11,
df$Diag12,
>>>>>>> c3cee49447b7356e8d6936a456aa9498f81953b4
df$Diag13,
df$Diag14,
df$Diag15,
df$Diag16,
df$Diag17,
df$Diag18
)
ICD_Filtered[1,2]
keep<-(ICD_Filtered[i,1])
ICD_Filtered[1,1]
ICD_Filtered[2,1]
keepall<-c()
for(i in 1:492){
keep<-(ICD_Filtered[i,1],train1$Diag1)
keepall<-keep
}
keepall<-c()
for(i in 1:492){
keep<-grep(ICD_Filtered[i,1],train1$Diag1)
keepall<-keep
}
for(i in 1:492){
keep<-grep(ICD_Filtered[i,1],train$Diag1)
keepall<-keep
}
train1<-train1[keep,]
train<-train[keep,]
train<-train[keep,]
View(train)
keepall<-c()
for(i in 1:492){
keep<-grep(ICD_Filtered[i,1],train$Diag1)
keepall<-keep+keepall
}
train<-train[keep,]
#Filters out unnecessary columns
train <-df %>% select(
-Type_Bill,
-Fed_Tax_SubID,
-Fed_Tax_Num,
-Admission_Type,
-Admission_Source,
-Do_Not_Resuscitate,
-Accident_St,
-starts_with("Units_Service"), #[1:18]
-Primary_Health_Plan_Id,
-Secondary_Health_Plan_Id,
-Tertiary_Health_Plan_Id,
-Primary_Patient_Rel_Insr,
-Secondary_Patient_Rel_Insr,
-Tertiary_Patient_Rel_Insr,
>>>>>>> 865ac4d54e0522c08b45d894a058102be5320585
-Dx_Px_Qualifier,
-starts_with("POA"), #[1:18]
-starts_with("Patient_Reason_Visit"),#[1:3],
-Prospect_Pay_Code,
-starts_with("Ecode"), #[1:3]
-starts_with("E_POA"), #[1:3]
-Type_ER_Visit,
-Outcome_ER_Visit,
-Inpatient_Flag,
-ER_Flag,
-PET_Flag,
-ASTC_Flag,
-Lithotripsy_Flag,
-MRI_MRA_Flag,
-Megavolt_Rad_Flag,
-CT_Flag,
-Fatal_Error_Flag,
-starts_with("Record_Num"), #[1:2]
-Bill_End,
-MUL,
-Patient_ID,
-TN_Co_Res,
-Payer_A,
-Payer_B,
-Payer_C,
-Amount_Counter,
-Race,
-LOS,
-DRG_Rank,
-Inpat_Record_Flag,
-ER_Record_Flag,
-ASTC_Record_Flag,
-Obs_23hr_Record_Flag,
-CON_Flag,
-Cumulative_Record_Flag,
-Reportable_Flag,
-TN_Co_Unk,
-Processing_Period,
-MS_MDC,
-MS_DRG,
-MS_DRG_4digit,
-HAC,
-Admit_From_ED_Flag,
-Wrong_Claim
)
keepall<-c()
for(i in 1:492){
keep<-grep(ICD_Filtered[i,1],train$Diag1)
keepall<-keep+keepall
}
train<-train[keep,]
View(train)
keep<-grep(ICD_Filtered[i,1],train$Diag1)
#Filters out unnecessary columns
train <-df %>% select(
-Type_Bill,
-Fed_Tax_SubID,
-Fed_Tax_Num,
-Admission_Type,
-Admission_Source,
-Do_Not_Resuscitate,
-Accident_St,
-starts_with("Units_Service"), #[1:18]
-Primary_Health_Plan_Id,
-Secondary_Health_Plan_Id,
-Tertiary_Health_Plan_Id,
-Primary_Patient_Rel_Insr,
-Secondary_Patient_Rel_Insr,
-Tertiary_Patient_Rel_Insr,
-Dx_Px_Qualifier,
-starts_with("POA"), #[1:18]
-starts_with("Patient_Reason_Visit"),#[1:3],
-Prospect_Pay_Code,
-starts_with("Ecode"), #[1:3]
-starts_with("E_POA"), #[1:3]
-Type_ER_Visit,
-Outcome_ER_Visit,
-Inpatient_Flag,
-ER_Flag,
-PET_Flag,
-ASTC_Flag,
-Lithotripsy_Flag,
-MRI_MRA_Flag,
-Megavolt_Rad_Flag,
-CT_Flag,
-Fatal_Error_Flag,
-starts_with("Record_Num"), #[1:2]
-Bill_End,
-MUL,
-Patient_ID,
-TN_Co_Res,
-Payer_A,
-Payer_B,
-Payer_C,
-Amount_Counter,
-Race,
-LOS,
-DRG_Rank,
-Inpat_Record_Flag,
-ER_Record_Flag,
-ASTC_Record_Flag,
-Obs_23hr_Record_Flag,
-CON_Flag,
-Cumulative_Record_Flag,
-Reportable_Flag,
-TN_Co_Unk,
-Processing_Period,
-MS_MDC,
-MS_DRG,
-MS_DRG_4digit,
-HAC,
-Admit_From_ED_Flag,
-Wrong_Claim
)
keep<-grep(ICD_Filtered[i,1],train$Diag1)
keep<-grep(as.character(ICD_Filtered[i,1]),train$Diag1)
ICD_Filtered[1,1]
ICD_Filtered[2,1]
ICD_Filtered[3,1]
library(gsheet)
# Reading in doc of IDC10codes
codes<-gsheet2tbl("https://docs.google.com/document/d/1e53UDsuHZwQAyVc8vAG69Al_tjXbnv6C/edit?usp=sharing")
# Reading in doc of IDC10codes
codes<-gsheet2tbl("https://docs.google.com/document/d/1e53UDsuHZwQAyVc8vAG69Al_tjXbnv6C/edit")
# Reading in doc of IDC10codes
codes<-gsheet2tbl("https://docs.google.com/document/d/1e53UDsuHZwQAyVc8vAG69Al_tjXbnv6C/edit?usp=sharing&ouid=101883700449258151197&rtpof=true&sd=true")
# Reading in doc of IDC10codes
codes<-gsheet2tbl("C:\Users\alane\Downloads\Supplementary Tables 1 and 2.docx")
# Reading in doc of IDC10codes
codes<-gsheet2tbl("C:/Users/alane/Downloads/Supplementary Tables 1 and 2.docx")
# Reading in doc of IDC10codes
codes<-gsheet::gsheet2tbl("C:/Users/alane/Downloads/Supplementary Tables 1 and 2.docx")
# Reading in doc of IDC10codes
codes<-gsheet::gsheet2tbl("https://docs.google.com/document/d/1e53UDsuHZwQAyVc8vAG69Al_tjXbnv6C/edit")
install.packages("officer")
library(officer)
library(tigris)
options(tigris_use_cache = TRUE)
temp <- tigris::zctas(starts_with = 370:385)
tnz <-  as(temp, 'Spatial')
leaflet() %>%
addProviderTiles(providers$OpenStreetMap) %>%
addMarkers(data = locations, label = locations$address ) %>%
addPolygons(tnz)
library(leaflet)
leaflet() %>%
addProviderTiles(providers$OpenStreetMap) %>%
addMarkers(data = locations, label = locations$address ) %>%
addPolygons(tnz)
leaflet() %>%
addProviderTiles(providers$OpenStreetMap) %>%
addMarkers(data = locations, label = locations$address ) %>%
addPolygons(tnz)
leaflet() %>%
addProviderTiles(providers$OpenStreetMap) %>%
addMarkers(data = locations, label = locations$address )
# Map of SEP trial run
locations<-gsheet2tbl("https://docs.google.com/spreadsheets/d/1sb4P_7-UkcpkmENZ_DpMI45wRY7oItIFbv-0suLmz7U/edit?usp=sharing")
# Map of SEP trial run
locations<-gsheet2tbl("https://docs.google.com/spreadsheets/d/1sb4P_7-UkcpkmENZ_DpMI45wRY7oItIFbv-0suLmz7U/edit?usp=sharing")
######################## Libraries and Data sets ####################
# June 27rd 2022 | Start of exploration!
#####################################################################
library(tidyverse)
library(gsheet)
library(ggthemes)
library(leaflet)
library(leaflet.extras)
# Map of SEP trial run
locations<-gsheet2tbl("https://docs.google.com/spreadsheets/d/1sb4P_7-UkcpkmENZ_DpMI45wRY7oItIFbv-0suLmz7U/edit?usp=sharing")
library(tigris)
options(tigris_use_cache = TRUE)
temp <- tigris::zctas(starts_with = 370:385)
tnz <-  as(temp, 'Spatial')
leaflet() %>%
addProviderTiles(providers$OpenStreetMap) %>%
addMarkers(data = locations, label = locations$address )
leaflet() %>%
addProviderTiles(providers$OpenStreetMap) %>%
addMarkers(data = locations, label = locations$address ) %>%
addPolygons(tnz)
plot(tnz)
library(dplyr)
library(readr)
library(ggplot2)
library(leaflet)
library(rgdal)
library(raster)
library(sp)
library(rasterVis)
library(htmltools)
library(RColorBrewer)
library(geosphere)
library(tigris)
options(tigris_use_cache = TRUE)
temp <- tigris::zctas(starts_with = 370:385)
tnz <-  as(temp, 'Spatial')
leaflet() %>%
addProviderTiles(providers$OpenStreetMap) %>%
addMarkers(data = locations, label = locations$address )
plot(tnz)
leaflet() %>%
addProviderTiles(providers$OpenStreetMap) %>%
addMarkers(data = locations, label = locations$address ) %>%
addPolygons(tnz)
leaflet() %>%
addProviderTiles(providers$OpenStreetMap) %>%
addMarkers(data = locations, label = locations$address )
plot(tnz)
leaflet() %>%
addProviderTiles(providers$OpenStreetMap) %>%
addMarkers(data = locations, label = locations$address )
leaflet() %>%
addProviderTiles(providers$OpenStreetMap) %>%
addMarkers(data = locations, label = locations$address )
leaflet() %>%
addProviderTiles(providers$OpenStreetMap) %>%
addMarkers(data = locations, label = locations$address ) %>%
addPolylines(tnz)
install.packages("ggmap")
library(ggmap)
gmap('Tennessee')
qmap('Tennessee')
qmap('Liverpool')
qmap('Tennessee')
?register_google
ggmap_show_api_key()
showing_key()
library(shiny)
library(shinydashboard)
library(shinythemes)
runApp('D:/DataLab/syndemic/Dashboard')
valueBox("# of people in with SUD in selected zipcodes",
value = df_map() %>% filter(sud) %>% nrow(),
icon = "fa-user",
color = "darkyellow")
# New GIS STUFF------------------------------------------------------
library(tigris)
options(tigris_use_cache = TRUE)
temp <- tigris::zctas(starts_with = 370:385)
View(temp)
temp <- tigris::zctas(cb = TRUE,starts_with = 370:385)
View(temp)
library(tigris)
options(tigris_use_cache = TRUE)
temp <- tigris::zctas(cb = TRUE,starts_with = 370:385)
?addPolygon
?addPolygons
library(tigris)
options(tigris_use_cache = TRUE)
temp <- tigris::zctas(cb = TRUE,starts_with = 370:385)
View(temp)
View(temp[[8]][[40]])
library(tigris)
options(tigris_use_cache = TRUE)
temp <- tigris::zctas(starts_with = 370:385)
View(temp)
install.packages("maps")
library(maps)
library(leaflet)
library(leaflet.extras)
leaflet(locations) %>%
addProviderTiles(providers$OpenStreetMap) %>%
addMarkers(label = ~label) %>%
addControl()
install.packages("rgdal")
install.packages("rgdal")
library("rgdal")
locations<-gsheet2tbl("https://docs.google.com/spreadsheets/d/1sb4P_7-UkcpkmENZ_DpMI45wRY7oItIFbv-0suLmz7U/edit?usp=sharing")
library("gsheet")
library("rgdal")
locations<-gsheet2tbl("https://docs.google.com/spreadsheets/d/1sb4P_7-UkcpkmENZ_DpMI45wRY7oItIFbv-0suLmz7U/edit?usp=sharing")
locations<-locations %>% mutate(label = paste(name,address,phone, sep = "\n"))
leaflet(locations) %>%
addProviderTiles(providers$OpenStreetMap) %>%
addMarkers(label = ~label)
library(dplyr)
locations<-gsheet2tbl("https://docs.google.com/spreadsheets/d/1sb4P_7-UkcpkmENZ_DpMI45wRY7oItIFbv-0suLmz7U/edit?usp=sharing")
locations<-locations %>% mutate(label = paste(name,address,phone, sep = "\n"))
leaflet(locations) %>%
addProviderTiles(providers$OpenStreetMap) %>%
addMarkers(label = ~label)
library(leaflet)
locations<-gsheet2tbl("https://docs.google.com/spreadsheets/d/1sb4P_7-UkcpkmENZ_DpMI45wRY7oItIFbv-0suLmz7U/edit?usp=sharing")
locations<-locations %>% mutate(label = paste(name,address,phone, sep = "\n"))
leaflet(locations) %>%
addProviderTiles(providers$OpenStreetMap) %>%
addMarkers(label = ~label)
getwd()
boundaries <- rgdal::readOGR(dsn = "../syndemic",
layer = "Counties_and_Unitary_Authorities_(December_2016)_Boundaries")
boundaries <- rgdal::readOGR(dsn = "../syndemic",
layer = "tn_counties.shp")
boundaries <- rgdal::readOGR(dsn = "D:/DataLab/syndemic",
layer = "tn_counties.shp")
boundaries <- rgdal::readOGR(dsn = "D:/DataLab/syndemic",
layer = "tn_counties")
boundaries <- rgdal::readOGR(dsn = "D:/DataLab/syndemic",
layer = "tn_counties")
boundaries <- rgdal::readOGR(dsn = "D:/DataLab/syndemic",
layer = "tn_counties")
boundaries <- rgdal::readOGR("D:/DataLab/syndemic/tn_counties.shp")
boundaries <- rgdal::readOGR("D:/DataLab/syndemic/tn_counties")
library(raster)
boundaries <- shapefile("D:/DataLab/syndemic/tn_counties.shp")
boundaries <- shapefile("D:/DataLab/syndemic/tn_counties.shx")
leaflet(locations) %>%
addProviderTiles(providers$OpenStreetMap) %>%
addMarkers(label = ~label) %>%
addPolygons(data = boundaries,
color = "#9A77C7")
boundaries@data
View(boundaries)
boundaries <-rgdal::readOGR(dsn = "D:/DataLab/syndemic",
layer = "tn_counties")
leaflet(locations) %>%
addProviderTiles(providers$OpenStreetMap) %>%
addMarkers(label = ~label) %>%
addPolygons(data = boundareis,
color = "#9A77C7")
leaflet(locations) %>%
addProviderTiles(providers$OpenStreetMap) %>%
addMarkers(label = ~label) %>%
addPolygons(data = boundaries,
color = "#9A77C7")
View(boundaries)
boundaries <-rgdal::readOGR(dsn = "D:/DataLab/syndemic",
layer = "tncounties")
boundaries <-rgdal::readOGR(dsn = "D:/DataLab/syndemic",
layer = "tncounty")
leaflet(locations) %>%
addProviderTiles(providers$OpenStreetMap) %>%
addMarkers(label = ~label) %>%
addPolygons(data = boundaries,
color = "#9A77C7")
View(boundaries)
plot(boundaries)
locations<-gsheet2tbl("https://docs.google.com/spreadsheets/d/1sb4P_7-UkcpkmENZ_DpMI45wRY7oItIFbv-0suLmz7U/edit?usp=sharing")
locations<-locations %>% mutate(label = paste(name,address,phone, sep = "\n"))
boundaries <-rgdal::readOGR(dsn = "D:/DataLab/syndemic",
layer = "tncounty")
leaflet(locations) %>%
addProviderTiles(providers$OpenStreetMap) %>%
addMarkers(label = ~label) %>%
addPolygons(data = boundaries,
color = "#9A77C7")
boundaries <-rgdal::readOGR(dsn = "D:/DataLab/syndemic",
layer = "tl_2016_47_cousub")
leaflet(locations) %>%
addProviderTiles(providers$OpenStreetMap) %>%
addMarkers(label = ~label) %>%
addPolygons(data = boundaries,
color = "#9A77C7")
# Reading in spatial polygon data for map
s <- shapefile("D:/DataLab/syndemic/tl_2021_us_county")
library(raster)
# Reading in spatial polygon data for map
s <- shapefile("D:/DataLab/syndemic/tl_2021_us_county")
library(flexdashboard)
library(shiny)
library(tidyverse)
library(DT)
library(plotly)
library(leaflet)
library(leaflet.extras)
library(gsheet)
library(rgdal)
library(raster)
library(tigris)
library(RColorBrewer)
library(ggVennDiagram)
library(forcats)
library(lubridate)
pdf(NULL)
setwd("D:/DataLab/syndemic")
# Reading in master data
masterdata<-read_csv("masterdata.csv")
# Reading in spatial polygon data for map
s <- shapefile("D:/DataLab/tl_2021_us_county")
boundaries <-subset(s, s@data$STATEFP == "47")
View(boundaries)
# Adding county total to spatial data frame
boundaries<-geo_join(boundaries, paldata, by_sp ="NAMELSAD" , by_df ="county")
# Making color pallet based on SUD in county
paldata<-masterdata %>% filter(sud) %>% group_by(county) %>% summarise(total = n())
# Reading in population by county data
popbycounty<-read_csv("SDC_TN_PL20_CountyPopChange.csv")
popbycounty<-popbycounty %>% dplyr::select(County,`Population 2020`) %>% rename(county = County) %>% mutate(county = paste(county,"County"))
# Reading in data of zip codes and their county name
zips<-read.csv("countybyid.csv")
# Merging master data with county by ids
masterdata<-inner_join(zips,masterdata, by = "...1" ) %>% filter(state == "TN")
masterdata<-inner_join(popbycounty,masterdata, by = "county")
# Reading in spatial polygon data for map
s <- shapefile("D:/DataLab/tl_2021_us_county")
boundaries <-subset(s, s@data$STATEFP == "47")
# Making color pallet based on SUD in county
paldata<-masterdata %>% filter(sud) %>% group_by(county) %>% summarise(total = n())
# Adding county total to spatial data frame
boundaries<-geo_join(boundaries, paldata, by_sp ="NAMELSAD" , by_df ="county")
boundaries<-geo_join(boundaries, popbycounty, by_sp = "NAME", by_df ="county")
boundaries@data<-boundaries@data %>% mutate(percap = total/Population.202)
boundaries@data<-boundaries@data %>% mutate(percap = total/Population.2020)
View(boundaries)
library(flexdashboard)
library(shiny)
library(tidyverse)
library(DT)
library(plotly)
library(leaflet)
library(leaflet.extras)
library(gsheet)
library(rgdal)
library(raster)
library(tigris)
library(RColorBrewer)
library(ggVennDiagram)
library(forcats)
library(lubridate)
library(flexdashboard)
library(shiny)
library(tidyverse)
library(DT)
library(plotly)
library(leaflet)
library(leaflet.extras)
library(gsheet)
library(rgdal)
library(raster)
library(tigris)
library(RColorBrewer)
library(ggVennDiagram)
library(forcats)
library(lubridate)
<<<<<<< HEAD
pdf(NULL)
setwd("D:/DataLab/syndemic")
# Reading in data of locations of SEP
locations<-gsheet2tbl("https://docs.google.com/spreadsheets/d/1sb4P_7-UkcpkmENZ_DpMI45wRY7oItIFbv-0suLmz7U/edit?usp=sharing")
# Creating a column named label
locations<-locations %>% mutate(label = paste0("Name : ",name,"<br/>"," Address :",address,"<br/>","Phone :",phone,"<br/>" ) %>% lapply(htmltools::HTML))
# Reading in master data
masterdata<-read_csv("masterdata.csv")
# Reading in population by county data
popbycounty<-read_csv("SDC_TN_PL20_CountyPopChange.csv")
popbycounty<-popbycounty %>% dplyr::select(County,`Population 2020`) %>% rename(county = County) %>% mutate(county = paste(county,"County"))
# Reading in data of zip codes and their county name
zips<-read.csv("countybyid.csv")
# Merging master data with county by ids
masterdata<-inner_join(zips,masterdata, by = "...1" ) %>% filter(state == "TN")
masterdata<-inner_join(popbycounty,masterdata, by = "county")
# Reading in spatial polygon data for map
s <- shapefile("D:/DataLab/tl_2021_us_county")
boundaries <-subset(s, s@data$STATEFP == "47")
# Making color pallet based on SUD in county
paldata<-masterdata %>% filter(sud) %>% group_by(county) %>% summarise(total = n())
# Adding county total to spatial data frame
boundaries<-geo_join(boundaries, paldata, by_sp ="NAMELSAD" , by_df ="county")
View(boundaries)
boundaries<-geo_join(boundaries, popbycounty, by_sp = "NAME", by_df ="county")
View(boundaries)
View(popbycounty)
=======
library(RSQLite)
library(DBI)
library(dbplyr)
library(readr)
library(data.table)
# Reading in sqlite
portaldb <- dbConnect(SQLite(), "copy_discharges_phi")
# List tables in database
dbListTables(portaldb)
# Column names
dbListFields(portaldb, "copy_discharges_phi")
source("~/Desktop/Syndemic Project/syndemic/datadqlphi.R", echo=TRUE)
# Writing query data
write.csv(ex, "CopyOfimpdataphi.csv")
# Creating query
ex<-dbGetQuery(portaldb, res)
# Writing query data
write.csv(ex, "CopyOfimpdataphi.csv")
# Disconnect from sqlite
dbDisconnect(portaldb)
# Creating query
ex<-dbGetQuery(portaldb, res)
# Reading in sqlite
portaldb <- dbConnect(SQLite(), "copy_discharges_phi")
# List tables in database
dbListTables(portaldb)
# Column names
dbListFields(portaldb, "copy_discharges_phi")
# Reading in sqlite
portaldb <- dbConnect(SQLite(), "copy_discharges_phi")
# List tables in database
dbListTables(portaldb)
# Column names
dbListFields(portaldb, "copy_discharges_phi")
# Reading in sqlite
portaldb <- dbConnect(SQLite(), "discharges_phi")
# List tables in database
dbListTables(portaldb)
# Column names
dbListFields(portaldb, "discharges_phi")
setwd("~/Desktop/Syndemic Project/syndemic")
# Reading in sqlite
portaldb <- dbConnect(SQLite(), "copy_discharges_phi")
# List tables in database
dbListTables(portaldb)
# Column names
dbListFields(portaldb, "discharges_phi")
res<-"SELECT * FORM discharges_phi "
# Creating query
ex<-dbGetQuery(portaldb, res)
res<-"SELECT * FROM discharges_phi "
# Creating query
ex<-dbGetQuery(portaldb, res)
gc()
gc()
<<<<<<< HEAD
########################
library(tidyverse)
library(ggVennDiagram)
library(forcats)
library(lubridate)
library(RSQLite)
# Reading in sqlite
portaldb <- dbConnect(SQLite(), "copy_discharges_phi")
# List tables in database
dbListTables(portaldb)
# Column names
dbListFields(portaldb, "discharges_phi")
res<-"SELECT * FROM discharges_phi "
# Creating query
ex<-dbGetQuery(portaldb, res)
gc()
=======
<<<<<<< HEAD
<<<<<<< HEAD
>>>>>>> 81e1b20d6f1b39941438be5eb12032c1128e387d
=======
>>>>>>> 81e1b20d6f1b39941438be5eb12032c1128e387d
=======
>>>>>>> 81e1b20d6f1b39941438be5eb12032c1128e387d
>>>>>>> d937f23b5f4ede4fdec0653f24d6af3a07359c47
<<<<<<< HEAD
getwd()
getwd()
=======
>>>>>>> e2e518018e1e563a36235d19e7f8d9bbce4d78cc
>>>>>>> c3cee49447b7356e8d6936a456aa9498f81953b4
>>>>>>> 865ac4d54e0522c08b45d894a058102be5320585
