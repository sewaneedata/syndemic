-ASTC_Record_Flag,
-Obs_23hr_Record_Flag,
-CON_Flag,
-Cumulative_Record_Flag,
-Reportable_Flag,
-TN_Co_Unk,
-Processing_Period,
-MS_MDC,
-MS_DRG,
-MS_DRG_4digit,
-HAC,
-Admit_From_ED_Flag,
-Wrong_Claim
)
train1 <- train$Diag1 %>%
paste(df$Diag1,
df$Diag2,
df$Diag3,
df$Diag4,
df$Diag5,
df$Diag6,
df$Diag7,
df$Diag8,
df$Diag9,
df$Diag10,
df$Diag11,
df$Diag12,
df$Diag13,
df$Diag14,
df$Diag15,
df$Diag16,
df$Diag17,
df$Diag18
)
keep<-grep(ICD_Filtered$X2, df$Diag1)
View(ICD_Filtered)
#Reads and formats ICD-10 2019 Codebook
ICD <- readr::read_delim("D:/DataLab/syndemic/icd10cm_order_2019.txt", delim = ' ', col_names = FALSE) %>%
select(-X1, -X3, -X4) %>%
unite(col = 'Details', X5:X62, sep = ' ', na.rm = TRUE)
#Filters Codebook to only words we deem relevant
ICD_Filtered <- ICD %>%
filter(grepl('endocarditis |
sepsis |
osteomyelitis |
Human immunodef virus|
HIV |
syphilis |
gonorrhoea |
chlamydia |
trichomoniasis |
sexually transmitted infection |
hepatitis A |
hepatitis B |
hepatitis C |
hepatitis D |
hepatitis E |
substance use',
Details,
ignore.case = TRUE))
View(ICD_Filtered)
#Filters Codebook to only words we deem relevant
ICD_Filtered <- ICD %>%
filter(grepl('endocarditis|sepsis|osteomyelitis|Human immunodef virus|HIV|syphilis|gonorrhoea|chlamydia|trichomoniasis|sexually transmitted infection|hepatitis A|hepatitis B|hepatitis C|hepatitis D|hepatitis E|substance use',
Details,
ignore.case = TRUE))
#Filters out unnecessary columns
train <-df %>% select(
-Type_Bill,
-Fed_Tax_SubID,
-Fed_Tax_Num,
-Admission_Type,
-Admission_Source,
-Do_Not_Resuscitate,
-Accident_St,
-starts_with("Units_Service"), #[1:18]
-Primary_Health_Plan_Id,
-Secondary_Health_Plan_Id,
-Tertiary_Health_Plan_Id,
-Primary_Patient_Rel_Insr,
-Secondary_Patient_Rel_Insr,
-Tertiary_Patient_Rel_Insr,
-Dx_Px_Qualifier,
-starts_with("POA"), #[1:18]
-starts_with("Patient_Reason_Visit"),#[1:3],
-Prospect_Pay_Code,
-starts_with("Ecode"), #[1:3]
-starts_with("E_POA"), #[1:3]
-Type_ER_Visit,
-Outcome_ER_Visit,
-Inpatient_Flag,
-ER_Flag,
-PET_Flag,
-ASTC_Flag,
-Lithotripsy_Flag,
-MRI_MRA_Flag,
-Megavolt_Rad_Flag,
-CT_Flag,
-Fatal_Error_Flag,
-starts_with("Record_Num"), #[1:2]
-Bill_End,
-MUL,
-Patient_ID,
-TN_Co_Res,
-Payer_A,
-Payer_B,
-Payer_C,
-Amount_Counter,
-Race,
-LOS,
-DRG_Rank,
-Inpat_Record_Flag,
-ER_Record_Flag,
-ASTC_Record_Flag,
-Obs_23hr_Record_Flag,
-CON_Flag,
-Cumulative_Record_Flag,
-Reportable_Flag,
-TN_Co_Unk,
-Processing_Period,
-MS_MDC,
-MS_DRG,
-MS_DRG_4digit,
-HAC,
-Admit_From_ED_Flag,
-Wrong_Claim
)
train1 <- train$Diag1 %>%
paste(df$Diag1,
df$Diag2,
df$Diag3,
df$Diag4,
df$Diag5,
df$Diag6,
df$Diag7,
df$Diag8,
df$Diag9,
df$Diag10,
df$Diag11,
df$Diag12,
df$Diag13,
df$Diag14,
df$Diag15,
df$Diag16,
df$Diag17,
df$Diag18
)
ICD_Filtered[1,2]
keep<-(ICD_Filtered[i,1])
ICD_Filtered[1,1]
ICD_Filtered[2,1]
keepall<-c()
for(i in 1:492){
keep<-(ICD_Filtered[i,1],train1$Diag1)
keepall<-keep
}
keepall<-c()
for(i in 1:492){
keep<-grep(ICD_Filtered[i,1],train1$Diag1)
keepall<-keep
}
for(i in 1:492){
keep<-grep(ICD_Filtered[i,1],train$Diag1)
keepall<-keep
}
train1<-train1[keep,]
train<-train[keep,]
train<-train[keep,]
View(train)
keepall<-c()
for(i in 1:492){
keep<-grep(ICD_Filtered[i,1],train$Diag1)
keepall<-keep+keepall
}
train<-train[keep,]
#Filters out unnecessary columns
train <-df %>% select(
-Type_Bill,
-Fed_Tax_SubID,
-Fed_Tax_Num,
-Admission_Type,
-Admission_Source,
-Do_Not_Resuscitate,
-Accident_St,
-starts_with("Units_Service"), #[1:18]
-Primary_Health_Plan_Id,
-Secondary_Health_Plan_Id,
-Tertiary_Health_Plan_Id,
-Primary_Patient_Rel_Insr,
-Secondary_Patient_Rel_Insr,
-Tertiary_Patient_Rel_Insr,
-Dx_Px_Qualifier,
-starts_with("POA"), #[1:18]
-starts_with("Patient_Reason_Visit"),#[1:3],
-Prospect_Pay_Code,
-starts_with("Ecode"), #[1:3]
-starts_with("E_POA"), #[1:3]
-Type_ER_Visit,
-Outcome_ER_Visit,
-Inpatient_Flag,
-ER_Flag,
-PET_Flag,
-ASTC_Flag,
-Lithotripsy_Flag,
-MRI_MRA_Flag,
-Megavolt_Rad_Flag,
-CT_Flag,
-Fatal_Error_Flag,
-starts_with("Record_Num"), #[1:2]
-Bill_End,
-MUL,
-Patient_ID,
-TN_Co_Res,
-Payer_A,
-Payer_B,
-Payer_C,
-Amount_Counter,
-Race,
-LOS,
-DRG_Rank,
-Inpat_Record_Flag,
-ER_Record_Flag,
-ASTC_Record_Flag,
-Obs_23hr_Record_Flag,
-CON_Flag,
-Cumulative_Record_Flag,
-Reportable_Flag,
-TN_Co_Unk,
-Processing_Period,
-MS_MDC,
-MS_DRG,
-MS_DRG_4digit,
-HAC,
-Admit_From_ED_Flag,
-Wrong_Claim
)
keepall<-c()
for(i in 1:492){
keep<-grep(ICD_Filtered[i,1],train$Diag1)
keepall<-keep+keepall
}
train<-train[keep,]
View(train)
keep<-grep(ICD_Filtered[i,1],train$Diag1)
#Filters out unnecessary columns
train <-df %>% select(
-Type_Bill,
-Fed_Tax_SubID,
-Fed_Tax_Num,
-Admission_Type,
-Admission_Source,
-Do_Not_Resuscitate,
-Accident_St,
-starts_with("Units_Service"), #[1:18]
-Primary_Health_Plan_Id,
-Secondary_Health_Plan_Id,
-Tertiary_Health_Plan_Id,
-Primary_Patient_Rel_Insr,
-Secondary_Patient_Rel_Insr,
-Tertiary_Patient_Rel_Insr,
-Dx_Px_Qualifier,
-starts_with("POA"), #[1:18]
-starts_with("Patient_Reason_Visit"),#[1:3],
-Prospect_Pay_Code,
-starts_with("Ecode"), #[1:3]
-starts_with("E_POA"), #[1:3]
-Type_ER_Visit,
-Outcome_ER_Visit,
-Inpatient_Flag,
-ER_Flag,
-PET_Flag,
-ASTC_Flag,
-Lithotripsy_Flag,
-MRI_MRA_Flag,
-Megavolt_Rad_Flag,
-CT_Flag,
-Fatal_Error_Flag,
-starts_with("Record_Num"), #[1:2]
-Bill_End,
-MUL,
-Patient_ID,
-TN_Co_Res,
-Payer_A,
-Payer_B,
-Payer_C,
-Amount_Counter,
-Race,
-LOS,
-DRG_Rank,
-Inpat_Record_Flag,
-ER_Record_Flag,
-ASTC_Record_Flag,
-Obs_23hr_Record_Flag,
-CON_Flag,
-Cumulative_Record_Flag,
-Reportable_Flag,
-TN_Co_Unk,
-Processing_Period,
-MS_MDC,
-MS_DRG,
-MS_DRG_4digit,
-HAC,
-Admit_From_ED_Flag,
-Wrong_Claim
)
keep<-grep(ICD_Filtered[i,1],train$Diag1)
keep<-grep(as.character(ICD_Filtered[i,1]),train$Diag1)
ICD_Filtered[1,1]
ICD_Filtered[2,1]
ICD_Filtered[3,1]
library(gsheet)
# Reading in doc of IDC10codes
codes<-gsheet2tbl("https://docs.google.com/document/d/1e53UDsuHZwQAyVc8vAG69Al_tjXbnv6C/edit?usp=sharing")
# Reading in doc of IDC10codes
codes<-gsheet2tbl("https://docs.google.com/document/d/1e53UDsuHZwQAyVc8vAG69Al_tjXbnv6C/edit")
# Reading in doc of IDC10codes
codes<-gsheet2tbl("https://docs.google.com/document/d/1e53UDsuHZwQAyVc8vAG69Al_tjXbnv6C/edit?usp=sharing&ouid=101883700449258151197&rtpof=true&sd=true")
# Reading in doc of IDC10codes
codes<-gsheet2tbl("C:\Users\alane\Downloads\Supplementary Tables 1 and 2.docx")
# Reading in doc of IDC10codes
codes<-gsheet2tbl("C:/Users/alane/Downloads/Supplementary Tables 1 and 2.docx")
# Reading in doc of IDC10codes
codes<-gsheet::gsheet2tbl("C:/Users/alane/Downloads/Supplementary Tables 1 and 2.docx")
# Reading in doc of IDC10codes
codes<-gsheet::gsheet2tbl("https://docs.google.com/document/d/1e53UDsuHZwQAyVc8vAG69Al_tjXbnv6C/edit")
install.packages("officer")
library(officer)
library(RSQLite)
library(DBI)
library(dbplyr)
library(readr)
library(data.table)
# Reading in sqlite
portaldb <- dbConnect(SQLite(), "discharges_anon")
# List tables in database
dbListTables(portaldb)
# Column names
dbListFields(portaldb, "discharges_anon")
df<- read_csv("D:/DataLab/DataLab_2022/jacobzip.csv")
# Data set Formatting -----------------------------------------------
# Filters out unnecessary columns
train <-df %>% select(
-Type_Bill,
-Fed_Tax_SubID,
-Fed_Tax_Num,
-Admission_Type,
-Admission_Source,
-Do_Not_Resuscitate,
-Accident_St,
-starts_with("Units_Service"), #[1:18]
-Primary_Health_Plan_Id,
-Secondary_Health_Plan_Id,
-Tertiary_Health_Plan_Id,
-Primary_Patient_Rel_Insr,
-Secondary_Patient_Rel_Insr,
-Tertiary_Patient_Rel_Insr,
-Dx_Px_Qualifier,
-starts_with("POA"), #[1:18]
-starts_with("Patient_Reason_Visit"),#[1:3],
-Prospect_Pay_Code,
-starts_with("Ecode"), #[1:3]
-starts_with("E_POA"), #[1:3]
-Type_ER_Visit,
-Outcome_ER_Visit,
-Inpatient_Flag,
-ER_Flag,
-PET_Flag,
-ASTC_Flag,
-Lithotripsy_Flag,
-MRI_MRA_Flag,
-Megavolt_Rad_Flag,
-CT_Flag,
-Fatal_Error_Flag,
-starts_with("Record_Num"), #[1:2]
-Bill_End,
-MUL,
-Patient_ID,
-TN_Co_Res,
-Payer_A,
-Payer_B,
-Payer_C,
-Amount_Counter,
-Race,
-LOS,
-DRG_Rank,
-Inpat_Record_Flag,
-ER_Record_Flag,
-ASTC_Record_Flag,
-Obs_23hr_Record_Flag,
-CON_Flag,
-Cumulative_Record_Flag,
-Reportable_Flag,
-TN_Co_Unk,
-Processing_Period,
-MS_MDC,
-MS_DRG,
-MS_DRG_4digit,
-HAC,
-Admit_From_ED_Flag,
-Wrong_Claim
)
######################## Libraries and Data sets ####################
# June 23rd 2022 | Start of exploration and cleaning!
#####################################################################
library(tidyverse)
# Data set Formatting -----------------------------------------------
# Filters out unnecessary columns
train <-df %>% select(
-Type_Bill,
-Fed_Tax_SubID,
-Fed_Tax_Num,
-Admission_Type,
-Admission_Source,
-Do_Not_Resuscitate,
-Accident_St,
-starts_with("Units_Service"), #[1:18]
-Primary_Health_Plan_Id,
-Secondary_Health_Plan_Id,
-Tertiary_Health_Plan_Id,
-Primary_Patient_Rel_Insr,
-Secondary_Patient_Rel_Insr,
-Tertiary_Patient_Rel_Insr,
-Dx_Px_Qualifier,
-starts_with("POA"), #[1:18]
-starts_with("Patient_Reason_Visit"),#[1:3],
-Prospect_Pay_Code,
-starts_with("Ecode"), #[1:3]
-starts_with("E_POA"), #[1:3]
-Type_ER_Visit,
-Outcome_ER_Visit,
-Inpatient_Flag,
-ER_Flag,
-PET_Flag,
-ASTC_Flag,
-Lithotripsy_Flag,
-MRI_MRA_Flag,
-Megavolt_Rad_Flag,
-CT_Flag,
-Fatal_Error_Flag,
-starts_with("Record_Num"), #[1:2]
-Bill_End,
-MUL,
-Patient_ID,
-TN_Co_Res,
-Payer_A,
-Payer_B,
-Payer_C,
-Amount_Counter,
-Race,
-LOS,
-DRG_Rank,
-Inpat_Record_Flag,
-ER_Record_Flag,
-ASTC_Record_Flag,
-Obs_23hr_Record_Flag,
-CON_Flag,
-Cumulative_Record_Flag,
-Reportable_Flag,
-TN_Co_Unk,
-Processing_Period,
-MS_MDC,
-MS_DRG,
-MS_DRG_4digit,
-HAC,
-Admit_From_ED_Flag,
-Wrong_Claim
)
print(paste0(colnames(df)))
paste0(colnames(train))
paste0(colnames(train), collapse = " , ")
# Query description
res<-"SELECT ...1 ,File_Type , Data_Yr , Bill_Number , Record_Seq_Num , Hospital_ID , Form_Type , Patient_Zip , Patient_Sex , Patient_Discharge_Status , Accident_Code , Rev_Cd1 , Rev_Cd2 , Rev_Cd3 , Rev_Cd4 , Rev_Cd5 , Rev_Cd6 , Rev_Cd7 , Rev_Cd8 , Rev_Cd9 , Rev_Cd10 , Rev_Cd11 , Rev_Cd12 , Rev_Cd13 , Rev_Cd14 , Rev_Cd15 , Rev_Cd16 , Rev_Cd17 , Rev_Cd18 , Rev_Cd19 , Rev_Cd20 , Rev_Cd21 , Rev_Cd22 , Rev_Cd23 , HCPC_Rate_HIPPS_Rate_Cd1 , HCPC_Rate_HIPPS_Rate_Cd2 , HCPC_Rate_HIPPS_Rate_Cd3 , HCPC_Rate_HIPPS_Rate_Cd4 , HCPC_Rate_HIPPS_Rate_Cd5 , HCPC_Rate_HIPPS_Rate_Cd6 , HCPC_Rate_HIPPS_Rate_Cd7 , HCPC_Rate_HIPPS_Rate_Cd8 , HCPC_Rate_HIPPS_Rate_Cd9 , HCPC_Rate_HIPPS_Rate_Cd10 , HCPC_Rate_HIPPS_Rate_Cd11 , HCPC_Rate_HIPPS_Rate_Cd12 , HCPC_Rate_HIPPS_Rate_Cd13 , HCPC_Rate_HIPPS_Rate_Cd14 , HCPC_Rate_HIPPS_Rate_Cd15 , HCPC_Rate_HIPPS_Rate_Cd16 , HCPC_Rate_HIPPS_Rate_Cd17 , HCPC_Rate_HIPPS_Rate_Cd18 , HCPC_Rate_HIPPS_Rate_Cd19 , HCPC_Rate_HIPPS_Rate_Cd20 , HCPC_Rate_HIPPS_Rate_Cd21 , HCPC_Rate_HIPPS_Rate_Cd22 , HCPC_Rate_HIPPS_Rate_Cd23 , Tot_Chrg_by_Rev_Cd1 , Tot_Chrg_by_Rev_Cd2 , Tot_Chrg_by_Rev_Cd3 , Tot_Chrg_by_Rev_Cd4 , Tot_Chrg_by_Rev_Cd5 , Tot_Chrg_by_Rev_Cd6 , Tot_Chrg_by_Rev_Cd7 , Tot_Chrg_by_Rev_Cd8 , Tot_Chrg_by_Rev_Cd9 , Tot_Chrg_by_Rev_Cd10 , Tot_Chrg_by_Rev_Cd11 , Tot_Chrg_by_Rev_Cd12 , Tot_Chrg_by_Rev_Cd13 , Tot_Chrg_by_Rev_Cd14 , Tot_Chrg_by_Rev_Cd15 , Tot_Chrg_by_Rev_Cd16 , Tot_Chrg_by_Rev_Cd17 , Tot_Chrg_by_Rev_Cd18 , Tot_Chrg_by_Rev_Cd19 , Tot_Chrg_by_Rev_Cd20 , Tot_Chrg_by_Rev_Cd21 , Tot_Chrg_by_Rev_Cd22 , Tot_Chrg_by_Rev_Cd23 , Total_Tot_Chrg , Non_Cvrd_Chrg_by_Rev_Cd1 , Non_Cvrd_Chrg_by_Rev_Cd2 , Non_Cvrd_Chrg_by_Rev_Cd3 , Non_Cvrd_Chrg_by_Rev_Cd4 , Non_Cvrd_Chrg_by_Rev_Cd5 , Non_Cvrd_Chrg_by_Rev_Cd6 , Non_Cvrd_Chrg_by_Rev_Cd7 , Non_Cvrd_Chrg_by_Rev_Cd8 , Non_Cvrd_Chrg_by_Rev_Cd9 , Non_Cvrd_Chrg_by_Rev_Cd10 , Non_Cvrd_Chrg_by_Rev_Cd11 , Non_Cvrd_Chrg_by_Rev_Cd12 , Non_Cvrd_Chrg_by_Rev_Cd13 , Non_Cvrd_Chrg_by_Rev_Cd14 , Non_Cvrd_Chrg_by_Rev_Cd15 , Non_Cvrd_Chrg_by_Rev_Cd16 , Non_Cvrd_Chrg_by_Rev_Cd17 , Non_Cvrd_Chrg_by_Rev_Cd18 , Non_Cvrd_Chrg_by_Rev_Cd19 , Non_Cvrd_Chrg_by_Rev_Cd20 , Non_Cvrd_Chrg_by_Rev_Cd21 , Non_Cvrd_Chrg_by_Rev_Cd22 , Non_Cvrd_Chrg_by_Rev_Cd23 , Total_Non_Cvrd_Chrg , Primary_Payer_Class_Cd , Secondary_Payer_Class_Cd , Tertiary_Payer_Class_Cd , National_Provider_Id , Diag1 , Diag2 , Diag3 , Diag4 , Diag5 , Diag6 , Diag7 , Diag8 , Diag9 , Diag10 , Diag11 , Diag12 , Diag13 , Diag14 , Diag15 , Diag16 , Diag17 , Diag18 , Admit_Diag_Cd , Proc1 , Proc2 , Proc3 , Proc4 , Proc5 , Proc6 , JARID , Patient_Race_Ethnicity , Obs_Unit_Flag , Tot_Charges_Recorded , Tot_Charges_Analysis , Age , TN_Res_Flag , Hospital_Id_JAR , Tot_Charges_Summed , CostWt FROM discharges_anon "
# Creating query
ex<-dbGetQuery(portaldb, res)
# Query description
res<-"SELECT '...1' ,File_Type , Data_Yr , Bill_Number , Record_Seq_Num , Hospital_ID , Form_Type , Patient_Zip , Patient_Sex , Patient_Discharge_Status , Accident_Code , Rev_Cd1 , Rev_Cd2 , Rev_Cd3 , Rev_Cd4 , Rev_Cd5 , Rev_Cd6 , Rev_Cd7 , Rev_Cd8 , Rev_Cd9 , Rev_Cd10 , Rev_Cd11 , Rev_Cd12 , Rev_Cd13 , Rev_Cd14 , Rev_Cd15 , Rev_Cd16 , Rev_Cd17 , Rev_Cd18 , Rev_Cd19 , Rev_Cd20 , Rev_Cd21 , Rev_Cd22 , Rev_Cd23 , HCPC_Rate_HIPPS_Rate_Cd1 , HCPC_Rate_HIPPS_Rate_Cd2 , HCPC_Rate_HIPPS_Rate_Cd3 , HCPC_Rate_HIPPS_Rate_Cd4 , HCPC_Rate_HIPPS_Rate_Cd5 , HCPC_Rate_HIPPS_Rate_Cd6 , HCPC_Rate_HIPPS_Rate_Cd7 , HCPC_Rate_HIPPS_Rate_Cd8 , HCPC_Rate_HIPPS_Rate_Cd9 , HCPC_Rate_HIPPS_Rate_Cd10 , HCPC_Rate_HIPPS_Rate_Cd11 , HCPC_Rate_HIPPS_Rate_Cd12 , HCPC_Rate_HIPPS_Rate_Cd13 , HCPC_Rate_HIPPS_Rate_Cd14 , HCPC_Rate_HIPPS_Rate_Cd15 , HCPC_Rate_HIPPS_Rate_Cd16 , HCPC_Rate_HIPPS_Rate_Cd17 , HCPC_Rate_HIPPS_Rate_Cd18 , HCPC_Rate_HIPPS_Rate_Cd19 , HCPC_Rate_HIPPS_Rate_Cd20 , HCPC_Rate_HIPPS_Rate_Cd21 , HCPC_Rate_HIPPS_Rate_Cd22 , HCPC_Rate_HIPPS_Rate_Cd23 , Tot_Chrg_by_Rev_Cd1 , Tot_Chrg_by_Rev_Cd2 , Tot_Chrg_by_Rev_Cd3 , Tot_Chrg_by_Rev_Cd4 , Tot_Chrg_by_Rev_Cd5 , Tot_Chrg_by_Rev_Cd6 , Tot_Chrg_by_Rev_Cd7 , Tot_Chrg_by_Rev_Cd8 , Tot_Chrg_by_Rev_Cd9 , Tot_Chrg_by_Rev_Cd10 , Tot_Chrg_by_Rev_Cd11 , Tot_Chrg_by_Rev_Cd12 , Tot_Chrg_by_Rev_Cd13 , Tot_Chrg_by_Rev_Cd14 , Tot_Chrg_by_Rev_Cd15 , Tot_Chrg_by_Rev_Cd16 , Tot_Chrg_by_Rev_Cd17 , Tot_Chrg_by_Rev_Cd18 , Tot_Chrg_by_Rev_Cd19 , Tot_Chrg_by_Rev_Cd20 , Tot_Chrg_by_Rev_Cd21 , Tot_Chrg_by_Rev_Cd22 , Tot_Chrg_by_Rev_Cd23 , Total_Tot_Chrg , Non_Cvrd_Chrg_by_Rev_Cd1 , Non_Cvrd_Chrg_by_Rev_Cd2 , Non_Cvrd_Chrg_by_Rev_Cd3 , Non_Cvrd_Chrg_by_Rev_Cd4 , Non_Cvrd_Chrg_by_Rev_Cd5 , Non_Cvrd_Chrg_by_Rev_Cd6 , Non_Cvrd_Chrg_by_Rev_Cd7 , Non_Cvrd_Chrg_by_Rev_Cd8 , Non_Cvrd_Chrg_by_Rev_Cd9 , Non_Cvrd_Chrg_by_Rev_Cd10 , Non_Cvrd_Chrg_by_Rev_Cd11 , Non_Cvrd_Chrg_by_Rev_Cd12 , Non_Cvrd_Chrg_by_Rev_Cd13 , Non_Cvrd_Chrg_by_Rev_Cd14 , Non_Cvrd_Chrg_by_Rev_Cd15 , Non_Cvrd_Chrg_by_Rev_Cd16 , Non_Cvrd_Chrg_by_Rev_Cd17 , Non_Cvrd_Chrg_by_Rev_Cd18 , Non_Cvrd_Chrg_by_Rev_Cd19 , Non_Cvrd_Chrg_by_Rev_Cd20 , Non_Cvrd_Chrg_by_Rev_Cd21 , Non_Cvrd_Chrg_by_Rev_Cd22 , Non_Cvrd_Chrg_by_Rev_Cd23 , Total_Non_Cvrd_Chrg , Primary_Payer_Class_Cd , Secondary_Payer_Class_Cd , Tertiary_Payer_Class_Cd , National_Provider_Id , Diag1 , Diag2 , Diag3 , Diag4 , Diag5 , Diag6 , Diag7 , Diag8 , Diag9 , Diag10 , Diag11 , Diag12 , Diag13 , Diag14 , Diag15 , Diag16 , Diag17 , Diag18 , Admit_Diag_Cd , Proc1 , Proc2 , Proc3 , Proc4 , Proc5 , Proc6 , JARID , Patient_Race_Ethnicity , Obs_Unit_Flag , Tot_Charges_Recorded , Tot_Charges_Analysis , Age , TN_Res_Flag , Hospital_Id_JAR , Tot_Charges_Summed , CostWt FROM discharges_anon "
# Creating query
ex<-dbGetQuery(portaldb, res)
# Writing query data
write.csv(ex, "impdata.csv")
data<-read_csv("D:/DataLab/DataLab_2022/impdata.csv")
# New Correct way of cleaning data-------------------------
# Making all diagnosis into one column!
# For all data change all trainpl into df
trainpl<-data %>%
select( ...1,
Diag1:Diag18
)
trainpl<-trainpl %>% pivot_longer(starts_with("Diag"))
dbDisconnect(portaldb)
codes <- read_csv("codes.csv")
setwd("D:/DataLab/syndemic")
codes <- read_csv("codes.csv")
trainpl<-trainpl %>% pivot_longer(starts_with("Diag"))
# Get codes that tell us with what it should start with
swdf<-codes %>% filter(astrid)
swv<-pull(swdf,code)
# Look for any person id that has codes that start with any of our start with patterns
swfinal<-trainpl %>% filter(substr(value,1,3) %in% swv )
# Get codes that are fixed and we only want them to match that specific code
fixeddf<-codes %>% filter(!astrid)
fixedv<-pull(fixeddf,code)
# Look for any person id that has code that matches any of our fixed codes
fixedfinal<-trainpl %>% filter(value %in% fixedv)
# Make the patient ids in vectors and join them
swidv<-pull(swfinal,...1)
ffidv<-pull(fixedfinal,...1)
fidv<-c(ffidv, swidv)
fidv<-unique(fidv)
# Get person with ids that we got and care about
cleands<-data %>% filter( ...1 %in% fidv)
View(cleands)
